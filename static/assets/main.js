BuffConfig = {
	MAX_SELL_PRICE: 21474836.47,
	MIN_PRICE: .01,
	PayMethod: {
		ALIPAY_BALANCE: 3,
		ALIPAY_PAGE: 4,
		EPAY_BALANCE: 1,
		EPAY_QUICK_PAY: 2,
		ALIPAY_PAGE: 4,
		WX_PAGE: 6,
		ALIPAY_PAGE_PCREDIT: 10
	},
	STEAM_TIMEOUT: 30 * 1e3,
	SteamAPP: {
		APPID_MAPS: {
			"-578080": "pubg_recycle",
			433850: "h1z1",
			570: "dota2",
			578080: "pubg",
			730: "csgo",
			440: "tf2",
			252490: "rust"
		},
		CONTEXTID_MAPS: {
			"-578080": "2",
			433850: "1",
			570: "2",
			578080: "2",
			730: "2",
			440: "2",
			252490: "2"
		},
		DEFAULT_GAME: "csgo"
	}
};

function i18n(e, a) {
	var i = i18nData.getValue(e);
	return i ? (a && Object.keys(a).map(function (e, t) {
		i = i.replace("{{" + e + "}}", a[e])
	}), i) : e
}

function toggleGallery(e) {
	var t = $(".tr_gallery").eq(e);
	"none" == t.css("display") ? (t.show(), $(".j_gallery_handler").eq(e).html(i18n("collapse"))) : (t.hide(), $(".j_gallery_handler").eq(e).html(i18n("expand")))
}

function toggleFloatRank(e) {
	var t = $(".tr_floatrank").eq(e);
	"none" == t.css("display") ? (t.show(), $(".with-floatrank").eq(e).find(".gallery_btn .icon").css({
		transform: "rotate(180deg)"
	})) : (t.hide(), $(".with-floatrank").eq(e).find(".gallery_btn .icon").css({
		transform: "rotate(0deg)"
	}))
}

function cancelBubble(e) {
	var t = e || window.event;
	t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0
}

function setShopRecommend() {
	var e = $("#j_recommend .slider-handle").eq(0),
		t = $("#j_recommend .slider-handle").eq(1),
		a = $("#j_recommend .list_card ul").eq(0),
		i = 0,
		n = 161,
		r = a.children().length;
	a.css({
		width: n * r
	}), r > 5 && t.addClass("clickable"), t.click(function () {
		$(this).hasClass("clickable") && (i++, a.animate({
			marginLeft: -n * i
		}, 400), e.addClass("clickable"), i + 5 >= r && $(this).removeClass("clickable"))
	}), e.click(function () {
		$(this).hasClass("clickable") && (i--, a.animate({
			marginLeft: -n * i
		}, 400), t.addClass("clickable"), i <= 0 && $(this).removeClass("clickable"))
	})
}

function isMobile() {
	for (var e = navigator.userAgent, t = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"], a = !1, i = 0; i < t.length; i++)
		if (e.indexOf(t[i]) > 0) {
			a = !0;
			break
		}
	var n = window.screen.width,
		r = window.screen.height;
	return n < 500 && r < 800 && (a = !0), a
}
var I18N = function () {
	function t(e) {
		var t = document.cookie.match(new RegExp("(^| )" + e + "=([^;]+)"));
		if (t) {
			var a = "";
			try {
				a = decodeURIComponent(t[2])
			} catch (e) { }
			return a
		}
		return ""
	}
	var a = {
		zh: {},
		en: {},
		tw: {},
		es: {},
		pt: {},
		ru: {}
	},
		i = "zh",
		n = function () {
			var e = t("Locale-Supported") || i;
			return "zh-Hans" == e ? "zh" : e
		};
	return {
		updateData: function (e, t) {
			for (key in t) a[e][key] = t[key]
		},
		getValue: function (e) {
			var t = n();
			return e in a[t] ? a[t][e] : ["es", "pt", "ru"].indexOf(t) > -1 && e in a.en ? a.en[e] : e in a[i] ? a[i][e] : e
		}
	}
},
	i18nData = new I18N;
i18nData.updateData("zh", {
	collapse: "收起",
	expand: "展开",
	last_7_days_sell_stats: "最近7天出售统计",
	delivery_rate: "发货成功率",
	delivery_time: "平均发货时间",
	premium_price: "印花总价",
	premium_rate: "印花溢价率(SP%)",
	premium_rate_tips: "(出售价格-区间底价)/印花总价"
}), i18nData.updateData("en", {
	collapse: "Collapse",
	expand: "Expand",
	last_7_days_sell_stats: "Last 7 days sell stats",
	delivery_rate: "Delivery rate",
	delivery_time: "Delivery time",
	premium_price: "Sticker Price",
	premium_rate: "Sticker Price %(SP%)",
	premium_rate_tips: "(Sale price-Lowest market price)/Sticker price"
}), i18nData.updateData("tw", {
	collapse: "收起",
	expand: "展開",
	last_7_days_sell_stats: "最近7天出售統計",
	delivery_rate: "發貨成功率",
	delivery_time: "平均發貨時間",
	premium_price: "印花总价",
	premium_rate: "印花溢价率(SP%)",
	premium_rate_tips: "(出售价格-区间底价)/印花总价"
}), i18nData.updateData("es", {
	collapse: "Cerrar",
	expand: "Expandir",
	last_7_days_sell_stats: "Last 7 days sell stats",
	delivery_rate: "Tasa de envíos",
	delivery_time: "Tiempo de envío",
	premium_price: "Precio de etiqueta",
	premium_rate: "Precio de etiqueta %(SP%)",
	premium_rate_tips: "(Sale price-Lowest market price)/Sticker price"
}), i18nData.updateData("pt", {
	collapse: "Recolher",
	expand: "Expandir",
	last_7_days_sell_stats: "Last 7 days sell stats",
	delivery_rate: "Taxa de entrega",
	delivery_time: "Tempo de entrega",
	premium_price: "Preço da etiqueta",
	premium_rate: "Preço da etiqueta %(SP%)",
	premium_rate_tips: "(Sale price-Lowest market price)/Sticker price"
}), i18nData.updateData("ru", {
	collapse: "Свернуть",
	expand: "Развернуть",
	last_7_days_sell_stats: "Last 7 days sell stats",
	delivery_rate: "Скорость отправки",
	delivery_time: "Срок отправки",
	premium_price: "Цена наклейки",
	premium_rate: "Цена наклейки %(SP%)",
	premium_rate_tips: "(Sale price-Lowest market price)/Sticker price"
});
var mobile = isMobile(),
	mobilePopupList = ["j_popup_g101_bind", "j_popup_g101_bind_code", "j_popup_g101_bind_qr", "j_popup_epay", "j_popup_selling_preview", "j_popup_login"],
	bindResize = !1,
	Popup = {
		boxes: [],
		baseIndex: null,
		show: function (e, t) {
			var a = t && t.forceClose ? "" : "onclick='Popup.hide()'";
			$("body").append("<div class='cover'" + a + "></div>"), this.boxes.push($("#" + e));
			var i = this.boxes.length,
				n = this.boxes[i - 1];
			this.baseIndex = this.baseIndex || parseInt(n.css("z-index")), $(".cover").eq(i - 1).show().css("z-index", this.baseIndex + 2 * i);
			var r = {
				"margin-left": -n.width() / 2,
				"margin-top": -n.height() / 2,
				"z-index": this.baseIndex + 2 * i + 1
			};
			if (mobile && mobilePopupList.includes(e)) {
				var o = window.innerWidth < window.innerHeight ? window.innerWidth / n.width() : window.innerHeight / n.height();
				r.transform = "scale(" + .98 * o + ") translateZ(0) translate3d(0,0,0)", $(window).bind("resize", function () {
					var e = window.innerWidth < window.innerHeight ? window.innerWidth / n.width() : window.innerHeight / n.height();
					n.css("transform", "scale(" + .98 * e + ") translateZ(0) translate3d(0,0,0)")
				}), bindResize = !0
			}
			n.show().css(r), Buff.initSelect("#" + e + " .w-Select"), Buff.initSteper("#" + e + " .w-Steper"), Buff.pricePatten("#" + e + " .j_filter"), $("body").css("overflow-y", "hidden")
		},
		hide: function () {
			var e = this.boxes.length;
			e > 0 && (this.boxes[e - 1].hide(), $(".cover").eq(e - 1).remove(), $(this.boxes[e - 1]).eq(0).trigger("change", $(this.boxes[e - 1]).eq(0).attr("id")), this.boxes.pop()), mobile && bindResize && ($(window).unbind("resize"), bindResize = !1), $("body").css("overflow-y", "auto")
		}
	},
	Buff = {
		_timer_Toast: null,
		setCompValue: function (e, i, t) {
			var a = $("#" + e);
			if (a.hasClass("w-Search")) a.find("input").val(i);
			else if (a.hasClass("w-Counter")) {
				var n = a.find("input");
				i.min && n.eq(0).val(i.min), i.max && n.eq(1).val(i.max)
			} else if (a.hasClass("w-Order")) a.attr("value", i).addClass("w-Order_" + i);
			else if (a.hasClass("h1z1-selType")) a.children(".w-SelType").each(function (e, a) {
				if ($(a).find("p").attr("value") == i) return $(a).addClass("selected").attr("value", i), !1;
				$(a).find("li").each(function (e, t) {
					if ($(t).attr("value") == i) return $(t).addClass("on"), $(a).addClass("selected").attr("value", i), !1
				})
			});
			else if (a.hasClass("w-Select-Multi")) {
				a.attr("value", i);
				var r, o, s = "h6,p";
				a.find(s).each(function (e, t) {
					if ($(t).is("p") ? $(t).remove("on") : $(t).parent().removeClass("on"), $(t).attr("value") == i) return $(t).is("p") ? $(t).addClass("on") : $(t).parent().addClass("on"), r = $(t), o = a.hasClass("w-Select-Multi--autogrow") && $(t).is("p") ? r.parent().siblings("h6").html() + " " + r.html() : r.html(), !1
				}), a.hasClass("w-Select-Multi--autogrow") || a.find("h3").html(r.html())
			} else {
				a.attr("value", i);
				var r, s = "li";
				if ((a.hasClass("w-Tag") || a.hasClass("w-Switcher")) && (s = "span,div"), a.find(s).removeClass("on").each(function (e, t) {
					if ($(t).attr("value") == i) return $(t).addClass("on"), r = $(t), !1
				}), a.hasClass("w-Select") || a.hasClass("w-SelHero")) {
					var c = r ? r.attr("title") || r.html() : t || " ";
					a.find("h3").html(c)
				}
			}
		},
		message: function (e, t) {
			$("#j_Message").length <= 0 && $("body").append('<div id="j_Message">'), $Message = $("#j_Message");
			var a = 3e3,
				i = $('<div class="w-Message"><div class="w-Message-cont"></div><i class="w-Message-close">×</i></div>');
			t ? ("success" == t.type ? i.addClass("w-Message_success") : "warning" == t.type && i.addClass("w-Message_warning"), "string" == typeof t.delay ? i.find(".w-Message-close").show().on("click", function () {
				i.remove(), t.callback && t.callback()
			}) : ("number" == typeof t.delay && (a = t.delay), setTimeout(function () {
				i.remove(), t.callback && t.callback()
			}, a))) : setTimeout(function () {
				i.remove()
			}, a), i.find(".w-Message-cont").html(e), i.slideDown(100), $Message.prepend(i)
		},
		toast: function (e, t) {
			var a = $("#j_w-Toast"),
				i = this;
			a.length < 1 && (a = $('<div id="j_w-Toast"></div>'), $("body").append(a)), a.hide(), a.attr("class", t && t.type ? "w-Toast_" + t.type : "");
			var n = $("<p></p>").text(e);
			t && t.type && n.prepend($('<i class="icon"></i>').addClass("icon_" + t.type + "_mid")), clearTimeout(i._timer_Toast), setTimeout(function () {
				a.html(n).show().css({
					"margin-left": -a.outerWidth() / 2,
					"margin-top": -a.outerHeight() / 2
				}), i._timer_Toast = setTimeout(function () {
					a.fadeOut(function () {
						a.html("")
					})
				}, 2e3)
			}, 100)
		},
		initSelect: function (e) {
			$(e).each(function (e, t) {
				var a = $(this);
				if (0 != $(this).find("ul").width() && "inited" != a.attr("init")) {
					a.attr("init", "inited");
					var i = $(this).find("ul").width() + 6,
						n = $(this).find("h3"),
						r = $(this).find("li");
					a.hasClass("w-Select--auto") ? i = n.outerWidth() : i <= n.outerWidth() + 8 && (i = n.outerWidth() + 18), i < 100 && (i = 100), $(this).find("ul").width(i), $(this).width(i), r.width(i - 18).off().click(function () {
						if (!a.hasClass("w-Select--disable")) {
							n.html($(this).html()), r.removeClass("on"), $(this).addClass("on");
							var e = $(this).attr("value");
							void 0 == e && (e = ""), a.removeClass("on").attr("value", e), a.trigger("change")
						}
					}), setTimeout(function () {
						a.css("visibility", "visible")
					}, 200);
					var o;
					$(this).off().mouseleave(function () {
						o = setTimeout(function () {
							a.removeClass("on")
						}, 300)
					}).mouseenter(function () {
						clearTimeout(o)
					}), n.off().click(function () {
						a.hasClass("w-Select--disable") || a.toggleClass("on")
					}), $.trim(n.html()) || (n.html(r.eq(0).html()), a.removeClass("on").attr("value", r.eq(0).attr("value")), r.eq(0).addClass("on"))
				}
			})
		},
		initSelectMulti: function (e) {
			$(e).each(function (t, e) {
				var a = $(this),
					i = $(this).hasClass("w-Select-Multi--autogrow");
				if (0 != $(this).find("ul").width() && "inited" != a.attr("init")) {
					a.attr("init", "inited");
					var n = $(this).find("ul").width() + 6,
						r = $(this).find("h3"),
						o = $(this).find("li");
					n <= r.outerWidth() + 8 && (n = r.outerWidth() + 18), $(this).find("ul").width(n), "left" === $(this).attr("data-postion") ? $(this).find("li div").css({
						left: "auto",
						right: n + 1
					}) : $(this).find("li div").css("left", n + 1), i ? $(this).css({
						width: "fit-content"
					}) : $(this).width(n);
					var s = $(this).attr("data-multi"),
						c = $(this).attr("data-childSingle");
					s ? $(this).find("ul").eq(0).on("click", "h6,p", function () {
						if ($(this).is("p")) {
							$(this).hasClass("on") ? $(this).removeClass("on") : ($(this).addClass("on"), c && $(this).siblings().removeClass("on"));
							var i = a.find(".on"),
								n = [];
							$.each(i, function (e, t) {
								var a = i.eq(e).attr("value");
								a && n.push(a)
							}), a.attr("value", n.join(",")), a.trigger("change")
						}
					}) : $(this).find("ul").eq(0).on("click", "h6,p", function () {
						if ($(this).attr("value") && "" != $(this).attr("value") || 0 == $(this).attr("value")) {
							var e;
							e = i && $(this).is("p") ? $(this).parent().siblings("h6").html() + " " + $(this).html() : $(this).html(), r.html(e), a.removeClass("on").find("li,p").removeClass("on"), $(this).is("p") ? $(this).addClass("on") : $(this).parent().addClass("on");
							var t = $(this).attr("value");
							void 0 == t && (t = ""), a.removeClass("on").attr("value", t), a.trigger("change")
						}
					});
					var _ = [],
						l = [];
					o.mouseenter(function () {
						var o = $(this),
							e = o.index();
						clearTimeout(_[e]), l[e] = setTimeout(function () {
							var e = document.documentElement.clientHeight,
								t = o.offset(),
								a = o.find("div"),
								i = a.height(),
								n = "auto",
								r = "auto";
							t.top + i > e ? r = t.top - e + 30 : n = 1, o.find("div").css({
								top: n,
								bottom: r
							}), o.addClass("hover")
						}, 200)
					}).mouseleave(function () {
						var e = $(this);
						t = e.index(), clearTimeout(l[t]), _[t] = setTimeout(function () {
							e.removeClass("hover")
						}, 200)
					}), setTimeout(function () {
						a.css("visibility", "visible")
					}, 100);
					var u;
					$(this).off().mouseleave(function () {
						u = setTimeout(function () {
							a.removeClass("on")
						}, 200)
					}).mouseenter(function () {
						clearTimeout(u)
					}), r.off().click(function () {
						a.toggleClass("on")
					}), $.trim(r.html()) || (r.html(o.eq(0).html()), a.removeClass("on").attr("value", o.eq(0).attr("value")), o.eq(0).addClass("on"))
				}
			})
		},
		initSteper: function (e) {
			$(e).each(function (e, t) {
				input_Timer = null;
				var a = $(this),
					i = a.find("input").eq(0),
					n = parseInt(a.attr("min")),
					r = parseInt(a.attr("max")),
					o = 1;
				a.attr("value") && !isNaN(parseInt(a.attr("value"))) && (o = parseInt(a.attr("value")));
				var s = o;
				a.attr("value", o), i.val(o), a.off().on("click", "span", function () {
					if (0 == $(this).index()) {
						var e = o - 1;
						(!n || e >= n) && (a.attr("value", e), i.val(e), o = e, a.trigger("change"), $(this).siblings().removeClass("disabled"), e == n && $(this).addClass("disabled"))
					} else {
						var e = o + 1;
						(!r || e <= r) && (a.attr("value", e), i.val(e), o = e, a.trigger("change"), $(this).siblings().removeClass("disabled"), e == r && $(this).addClass("disabled"))
					}
				}), i.off().on("keypress", function (e) {
					var t = e.keyCode || e.charCode;
					return 9 == t || 13 == t || 37 == t || 39 == t || /[\b\d\-]/.test(String.fromCharCode(t))
				}).on("keyup", function (e) {
					clearTimeout(input_Timer);
					var t = $.trim($(this).val());
					"" != t && "-" != t && (/[^0-9\.\-]/.test(t) && (t = t.replace(/[^0-9\.\-]/g, "")), t = parseInt(i.val()), t || (t = s), n && t <= n ? (t = n, a.find("span").eq(0).addClass("disabled"), a.find("span").eq(1).removeClass("disabled")) : n && t > n && a.find("span").eq(0).removeClass("disabled"), r && t >= r ? (t = r, a.find("span").eq(0).removeClass("disabled"), a.find("span").eq(1).addClass("disabled")) : r && t < r && a.find("span").eq(1).removeClass("disabled"), o = t, input_Timer = setTimeout(function () {
						i.val(t), a.attr("value", t), a.trigger("change")
					}, 300))
				}).on("blur", function () {
					var e = $.trim($(this).val());
					"" != e && "-" != e || (e = s, o = e, i.val(e), a.attr("value", e), a.trigger("change"))
				})
			})
		},
		pricePatten: function (e) {
			var c = null;
			$(e).each(function () {
				$(this).attr("pattened") || $(this).bind("input", function (e) {
					var t = $(this).val(),
						a = t.replace(/[^\d.]/g, ""),
						i = a.indexOf("."); - 1 !== i && (a = a.replace(/\./g, ""), a = a.slice(0, i) + "." + a.slice(i, i + 2));
					var n = a.split(".")[0],
						r = a.split(".")[1],
						o = "";
					n ? (n = parseInt(n, 10).toString(10), o = n + (void 0 !== r ? "." + r : "")) : void 0 === r && "." !== a || (o = "0." + r), t !== o && $(this).val(o);
					var s = $(this);
					clearTimeout(c), c = setTimeout(function () {
						s.trigger("format", o)
					}, 600)
				}).attr("pattened", !0)
			})
		},
		getSelection: function () {
			var e = "";
			if (window.getSelection)
				if (!document.activeElement || "textarea" != document.activeElement.tagName.toLowerCase() && "input" != document.activeElement.tagName.toLowerCase()) {
					var t = window.getSelection();
					e = t.toString()
				} else {
					var a = document.activeElement.value;
					e = a.substring(document.activeElement.selectionStart, document.activeElement.selectionEnd)
				} else if (document.selection.createRange) {
					var i = document.selection.createRange();
					e = i.text
				}
			return e
		},
		initSelectSearch: function (s) {
			var i = "on";
			$(document.body).on("mouseleave", s, function (e) {
				var t = $(this);
				setTimeout(function () {
					t.removeClass(i)
				}, 200)
			}).on("click", s + " li", function (e) {
				var t = $(this);
				if (!t.hasClass("none")) {
					var a = $(t.parents(s)),
						i = a.attr("value"),
						n = a.attr("title"),
						r = t.attr("value"),
						o = t.attr("title");
					a.mouseleave(), i === r && n === o || (a.find("h3").html(r ? t.html() : t.text()), a.attr("value", r).attr("title", o).trigger("change"))
				}
			}).on("click", s + " h3", function (e) {
				var t = $(this),
					a = $(t.parents(s));
				a.hasClass("w-Selectsearch--disable") || (a.hasClass(i) ? a.removeClass(i) : (a.addClass(i), a.find("input").focus(), a.trigger("init")))
			})
		},
		initSelectBtn: function (e) {
			$(document.body).on("mouseenter", e + " .w-SelectBtn-arr", function (e) {
				var t = $(this),
					a = t.siblings(".w-SelectBtn_options");
				a.show();
				var i = null;
				return t.off().on("mouseleave", function () {
					i = setTimeout(function () {
						a.hide()
					}, 200)
				}), a.on("mouseenter", function () {
					clearTimeout(i), a.show()
				}).on("mouseleave", function () {
					clearTimeout(i), a.hide()
				}), a.on("click", "li", function () {
					clearTimeout(i), a.hide()
				}), !1
			})
		},
		initCouponSelect: function (a, i, n) {
			if (!($("#" + a).length < 0)) {
				var r = $("#" + a);
				r.off();
				var e = "";
				if (!i.options || 0 == i.options.length) return i.placeholder = i18n("no_coupon_to_use"), r.css("cursor", "text"), void r.html(i18n("no_coupon_to_use"));
				var o = [];
				if ($.each(i.options, function (e, t) {
					t.desc = t.desc || "", o.push('<li data-value="' + t.value + '"><span>' + t.label + "</span><small>" + t.desc + "</small></li>")
				}), e = "<ul>" + o.join("") + "</ul>", r.on("mouseenter", function () {
					clearTimeout(window["couponTimmer" + a]), $(this).addClass("on")
				}).on("mouseleave", function () {
					var e = this;
					window["couponTimmer" + a] = setTimeout(function () {
						$(e).removeClass("on")
					}, 500)
				}).on("click", "li", function (e) {
					var t = $(this);
					r.removeClass("on"), n ? n($(this).attr("data-value"), a).then(function () {
						r.find("h3 span").html(t.find("span").html()), r.find("li").removeClass("on"), r.attr("data-value", t.attr("data-value")), t.addClass("on"), "false" == t.attr("data-value") ? r.removeClass("setted").find("h3 span").html(i.placeholder) : r.addClass("setted"), r.trigger("change")
					}, function () { }) : (r.find("h3 span").html(t.find("span").html()), r.find("li").removeClass("on"), r.attr("data-value", t.attr("data-value")), t.addClass("on"), "false" == t.attr("data-value") ? r.removeClass("setted").find("h3 span").html(i18n("please_choose_coupon")) : r.addClass("setted"), r.trigger("change"))
				}), r.html("<h3><span>" + i.placeholder + '</span><i class="icon icon_arr_light_down"></i></h3>' + e), "defaultIndex" in i && -1 != i.defaultIndex) {
					var t = r.find("li").eq(i.defaultIndex);
					r.find("h3 span").html(t.find("span").html()), r.find("li").removeClass("on"), r.attr("data-value", t.attr("data-value")), t.addClass("on"), "false" == t.attr("data-value") ? r.removeClass("setted").find("h3 span").html(i18n("please_choose_coupon")) : r.addClass("setted")
				}
			}
		},
		initTextArea: function (e) {
			$(document.body).on("input", e + " textarea", function (e) {
				var t = $(this),
					a = t.val(),
					i = a.length,
					n = t.attr("maxlength"),
					r = t.parent().find(".w-TextArea-num").eq(0);
				r && (r.html(i + ""), n && i >= n ? r.css("color", "#D10D1C") : i > 0 ? r.css("color", "#3E3E3E") : r.css("color", ""))
			})
		}
	};
$(function () {
	function initSelHero(e) {
		e.toggleClass("on").off(), e.on("click", "li", function () {
			e.find("li").removeClass("on"), $(this).addClass("on"), e.removeClass("on"), e.find("h3").html($(this).attr("title")), e.attr("value", $(this).attr("value")), e.trigger("change")
		}).on("mouseleave", function () {
			timerSelHero = setTimeout(function () {
				e.removeClass("on")
			}, 300)
		}).on("mouseenter", function () {
			clearTimeout(timerSelHero)
		})
	}

	function initStone(t) {
		t.toggleClass("on").off(), t.on("click", "li", function () {
			t.find("li").removeClass("on"), $(this).addClass("on"), t.removeClass("on"), t.find("h3").html($(this).attr("title")), t.attr("value", $(this).attr("value")), t.trigger("change")
		}).on("mouseleave", function () {
			timerStone = setTimeout(function () {
				t.removeClass("on")
			}, 300)
		}).on("mouseenter", function () {
			clearTimeout(timerStone)
		}).on("click", "h5", function () {
			var e = $(this).index();
			$(this).addClass("on").siblings().removeClass("on"), t.find(".stone-list").hide().eq(e).show()
		})
	}
	/msie/.test(navigator.userAgent.toLowerCase()) && $("input[placeholder],textarea[placeholder],div[placeholder]").each(function (e, t) {
		var a = $(t).attr("placeholder");
		"" == $.trim($(t).val()) && $(t).addClass("c_placeholder").val(a), $(this).focus(function () {
			$.trim($(t).val()) == a && $(t).removeClass("c_placeholder").val("")
		}).blur(function () {
			"" != $.trim($(t).val()) && $.trim($(t).val()) != a || $(t).addClass("c_placeholder").val(a)
		})
	}), $("div[placeholder]").each(function (e, t) {
		var a = $(t).attr("placeholder");
		"" == $.trim($(t).html()) && $(t).addClass("c_placeholder").html(a), $(this).focus(function () {
			$.trim($(t).html()) == a && $(t).removeClass("c_placeholder").html("")
		}).blur(function () {
			"" != $.trim($(t).html()) && $.trim($(t).html()) != a && "<br>" != $.trim($(t).html()) || $(t).addClass("c_placeholder").html(a)
		})
	}), Buff.initSelect(".w-Select"), Buff.initSelectMulti(".w-Select-Multi"), Buff.initSteper(".w-Steper"), Buff.initSelectSearch(".w-Selectsearch"), Buff.initSelectBtn(".w-SelectBtn"), Buff.initTextArea(".w-TextArea"), $("#j_gamesel").on("mouseenter", function () {
		$(this).addClass("on")
	}).on("mouseleave", function () {
		$(this).removeClass("on")
	}).on("click", "div p", function () {
		$("#j_gamesel").removeClass("on").trigger("change", $(this).index()).find("h4").html($(this).html())
	}), $(".j_drop-handler").on("mouseenter", function () {
		$(this).addClass("showdrop")
	}).on("mouseleave", function () {
		$(this).removeClass("showdrop")
	}), $("body").on("click", ".w-SelHero h3", function () {
		initSelHero($(this).parent())
	}), $("body").on("click", ".w-Stone h3", function () {
		initStone($(this).parent())
	}), $("body").on("click", ".w-Switcher span", function () {
		$(this).hasClass("on") || ($(this).addClass("on").siblings().removeClass("on"), $(this).parent().attr("value", $(this).attr("value")), $(this).parent().trigger("change"))
	}), $("body").on("click", ".w-Order,.tb-Order", function () {
		var e = $(this).attr("value");
		e && "null" != e && "asc" != e ? "des" == e && $(this).attr({
			value: "asc"
		}).removeClass("w-Order_des").addClass("w-Order_asc") : $(this).attr({
			value: "des"
		}).removeClass("w-Order_asc").addClass("w-Order_des"), $(this).trigger("change")
	}), $("body").on("click", ".w-Tag span,.w-Tag div", function () {
		$(this).toggleClass("on").siblings().removeClass("on");
		var e = $(this).hasClass("on") ? $(this).attr("value") : "";
		$(this).parent().attr("value", e).trigger("change")
	}), $(".w-Counter").hover(function () {
		$(this).find(".w-Counter-pannel").show()
	}, function () {
		$(this).find(".w-Counter-pannel").hide()
	}).on("click", ".i_Btn_sub", function () {
		$(this).parent().parent().find(".i_Text").val("")
	}).on("click", ".i_Btn_main", function () {
		var e = $(this).parent().parent();
		e.find(".w-Counter-pannel").hide();
		var t = $.trim(e.find(".i_Text").eq(0).val()) || null,
			a = $.trim(e.find(".i_Text").eq(1).val()) || null;
		e.attr("value", t + "," + a).trigger("change")
	}), $("body").on("click", ".w-Checkbox span", function () {
		var a;
		$(this).index();
		if (a = $(this).parent().attr("value") && "" != $.trim($(this).parent().attr("value")) ? $(this).parent().attr("value").split(",") : new Array, $(this).hasClass("on")) {
			$(this).removeClass("on");
			var i = $(this).attr("value");
			$.each(a, function (e, t) {
				if (i == t) return a.splice(e, 1), !1
			}), $(this).parent().attr("value", a.toString())
		} else $(this).addClass("on"), a.push($(this).attr("value")), $(this).parent().attr("value", a.toString());
		$(this).parent().trigger("change")
	}), $("body").on("click", ".w-Checkbox span a", function (e) {
		e.stopPropagation()
	}), $("body").on("click", ".w-Radio span", function () {
		$(this).hasClass("on") || ($(this).addClass("on").siblings().removeClass("on"), $(this).parent().attr("value", $(this).attr("value")).trigger("change"))
	}), $("body").on("click", ".j_copy_handler", function () {
		var e = $(this).attr("data"),
			t = document.createElement("textarea");
		t.value = e, document.body.appendChild(t), t.select();
		try {
			document.execCommand("copy")
		} catch (e) { }
		document.body.removeChild(t)
	}), $(".w-Sel-Hero .hero-type").hover(function () {
		$(this).addClass("on")
	}, function () {
		$(this).removeClass("on")
	}).on("click", "li", function () {
		var e = $(this).parent().parent();
		$(this).hasClass("on") ? ($(this).removeClass("on"), e.parent().attr("value", "")) : (e.parent().attr("value", $(this).attr("value")).find("li").removeClass("on"), $(this).addClass("on")), e.parent().trigger("change")
	}), $(".w-SelType").hover(function () {
		$(this).addClass("on")
	}, function () {
		$(this).removeClass("on")
	}).on("click", "li", function (e) {
		var t = $(this).parent().parent();
		$(this).hasClass("on") ? ($(this).removeClass("on"), t.attr("value", ""), t.removeClass("selected")) : (t.attr("value", $(this).attr("value")).find("li").removeClass("on"), $(this).addClass("on"), t.addClass("selected"), t.parent().hasClass("h1z1-selType") && t.siblings(".selected").eq(0).removeClass("selected").attr("value", "").find(".on").removeClass("on")), e.stopPropagation(), t.trigger("change")
	}), $(".h1z1-selType").on("click", ".w-SelType", function () {
		$(this).hasClass("selected") && $(this).attr("value") == $(this).find("p").attr("value") ? $(this).attr("value", "").removeClass("selected").find(".on").removeClass("on") : ($(this).attr("value", $(this).find("p").attr("value")).addClass("selected").siblings(".selected").eq(0).removeClass("selected").attr("value", "").find(".on").removeClass("on"), $(this).find(".on").removeClass("on")), $(this).trigger("change")
	}), $("body").on("click", ".w-OrderGroup .w-Order", function (e, t) {
		$(this).siblings().attr({
			class: "w-Order",
			value: ""
		})
	});
	var tipsHandlerTimer = null;
	$("body").on("mouseenter", ".j_tips_handler", function (index, item) {
		if (clearTimeout(tipsHandlerTimer), $(this).attr("precalculate") && eval($(this).attr("precalculate")), $(this).attr("data-title") || $(this).attr("data-content")) {
			var $tip = $("#j_fixedtip");
			$tip.length <= 0 && ($tip = $('<div class="fixedtip" id="j_fixedtip"> <i class="icon icon_arr_big_right"></i> <h3></h3> <div></div> </div>'), $("body").append($tip)), $(this).attr("data-width") && $tip.css("width", $(this).attr("data-width")), $tip.find("h3").html($(this).attr("data-title")), $(this).attr("data-unsafe-content") ? $tip.find("div").html($(this).attr("data-unsafe-content")) : $(this).attr("data-content") ? $tip.find("div").html($(this).attr("data-content")) : $tip.find("div").html("");
			var left = $(this).offset().left,
				top = $(this).offset().top,
				direction = $(this).attr("data-direction");
			switch ($tip.attr("style", ""), $tip.removeClass("fixedtip2"), direction) {
				case "right":
					$tip.find(".icon").attr("class", "icon icon_arr_big_left"), $tip.css({
						left: left + $(this).width() + 16,
						top: top,
						marginTop: -.5 * ($tip.height() + 10)
					}).show();
					break;
				case "bottom":
					$tip.addClass("fixedtip2"), $tip.find(".icon").attr("class", "icon icon_arr_big_left icon_arr_big_bot"), $tip.css({
						left: left + $(this).width() / 2 - $tip.width() / 2 - 8,
						top: top + $(this).height() + 10
					}).show();
					break;
				case "top":
					$tip.addClass("fixedtip2"), $tip.find(".icon").attr("class", "icon icon_arr_big_left icon_arr_big_top"), $tip.css({
						left: left + $(this).width() / 2 - $tip.width() / 2 - 8,
						top: top - $tip.height() - $(this).height() - 4
					}).show();
					break;
				default:
					$tip.find(".icon").attr("class", "icon  icon_arr_big_right"), $tip.css({
						left: left,
						top: top,
						marginLeft: -1 * ($tip.width() + 40),
						marginTop: -.5 * ($tip.height() + 10)
					}).show()
			}
			var tipWidth = "auto";
			$(this).attr("data-width") && (tipWidth = $(this).attr("data-width")), $tip.css("width", tipWidth + "px")
		}
		return !1
	}).on("mouseleave", ".j_tips_handler", function () {
		return tipsHandlerTimer = setTimeout(function () {
			$("#j_fixedtip").hide()
		}, 150), !1
	}).on("mouseenter", "#j_fixedtip", function () {
		return clearTimeout(tipsHandlerTimer), !1
	}).on("mouseleave", "#j_fixedtip", function () {
		return tipsHandlerTimer = setTimeout(function () {
			$("#j_fixedtip").hide()
		}, 150), !1
	}), $("body").on("mouseenter", ".j_rolluutips_handler", function (e, t) {
		var a = $("#j_rolluutip");
		a.length <= 0 && (a = $('<div class="rolluutip" id="j_rolluutip"><img src="' + $(this).attr("data-img") + '"></div>'), $("body").append(a));
		var i = $(this).offset().left,
			n = $(this).offset().top,
			r = "",
			o = "absolute";
		$.each($(this).parents(), function (e, t) {
			if ($(t).hasClass("popup")) return o = "fixed", "auto" !== n && (n -= $(window).scrollTop()), !1
		}), n + a.width() > $(window).height() ? (n = "auto", r = 10) : n -= 22, a.find(".icon").attr("class", "icon icon_arr_big_left"), a.css({
			left: i + $(this).width() + 10,
			top: n,
			bottom: r,
			position: o
		}).show()
	}).on("mouseleave", ".j_rolluutips_handler", function () {
		$("#j_rolluutip").hide()
	}), $("body").on("mouseenter", ".j_shoptip_handler", function (e, t) {
		if ($(this).attr("data-shop")) {
			var a = $("#j_fixedtip_shop");
			a.length <= 0 && (a = $('<div class="fixedtip fixedtip_shop" id="j_fixedtip_shop"> <i class="icon icon_arr_big_left"></i><h2>' + i18n("last_7_days_sell_stats") + '</h2><div class="line"></div><ul></ul></div>'), $("body").append(a));
			var i = $(this).attr("data-shop").split("|"),
				n = "-&nbsp;",
				r = "-&nbsp;";
			i[0] && (n = '<strong class="c_Blue">' + i[0] + "</strong>%"), i[1] && (i[1] <= 60 ? r = '<strong class="c_Blue">' + i[1] + "</strong>" + i18n("minutes") : (r = '<strong class="c_Blue">' + Math.floor(i[1] / 60) + "</strong>" + i18n("hours"), i[1] % 60 > 0 && (r += '<strong class="c_Blue">' + i[1] % 60 + "</strong>" + i18n("minute"))));
			var o = "<li><label>" + i18n("delivery_rate") + "</label><span>" + n + "</span></li><li><label>" + i18n("delivery_time") + "</label><span>" + r + "</span></li>";
			a.find("ul").html(o);
			var s = $(this).offset().left,
				c = $(this).offset().top;
			a.css({
				left: s + $(this).width() + 16,
				top: c,
				marginTop: -.5 * (a.height() + 10)
			}).show()
		}
	}).on("mouseleave", ".j_shoptip_handler", function () {
		$("#j_fixedtip_shop").hide()
	});
	var stickerTipsHandlerTimer = null;
	$("body").on("mouseenter", ".j_stickertip_handler", function (index, item) {
		if (clearTimeout(stickerTipsHandlerTimer), $(this).attr("precalculate") && eval($(this).attr("precalculate")), $(this).attr("data-title") || $(this).attr("data-content")) {
			var $tip = $("#j_fixedtip_sticker");
			$tip.length <= 0 && ($tip = $('<div class="fixedtip fixedtip_sticker" id="j_fixedtip_sticker"> <i class="icon icon_arr_big_right"></i><div class="sticker"></div><div><h3></h3><span></span></div></div>'), $("body").append($tip)), $(this).attr("data-width") && $tip.css("width", $(this).attr("data-width")), $tip.find("h3").html($(this).attr("data-title")), $tip.find(".sticker").css("background-image", "url(" + $(this).attr("data-img") + ")"), $(this).attr("data-content") ? $tip.find("span").html($(this).attr("data-content")) : $tip.find("span").html("");
			var left = $(this).offset().left,
				top = $(this).offset().top;
			$tip.attr("style", ""), $tip.removeClass("fixedtip2"), $tip.addClass("fixedtip2"), $tip.find(".icon").attr("class", "icon icon_arr_big_left icon_arr_big_top"), $tip.css({
				left: left + $(this).width() / 2 - $tip.width() / 2 - 8,
				top: top - $tip.height() - $(this).height() + 5
			}).show();
			var tipWidth = "auto";
			$(this).attr("data-width") && (tipWidth = $(this).attr("data-width")), $tip.css("width", tipWidth + "px")
		}
		return !1
	}).on("mouseleave", ".j_stickertip_handler", function () {
		return stickerTipsHandlerTimer = setTimeout(function () {
			$("#j_fixedtip_sticker").hide()
		}, 150), !1
	}).on("mouseenter", "#j_fixedtip_sticker", function () {
		return clearTimeout(stickerTipsHandlerTimer), !1
	}).on("mouseleave", "#j_fixedtip_sticker", function () {
		return stickerTipsHandlerTimer = setTimeout(function () {
			$("#j_fixedtip_sticker").hide()
		}, 150), !1
	});
	var premiumTipsHandlerTimer = null;
	$("body").on("mouseenter", ".j_premiumtip_handler", function () {
		if (clearTimeout(premiumTipsHandlerTimer), $(this).attr("data-price") || $(this).attr("data-rate")) {
			var e = $("#j_fixedtip_premium");
			e.length <= 0 && (e = $('<div class="fixedtip fixedtip_premium" id="j_fixedtip_premium"><i class="icon icon_arr_big_right"></i><div><span class="price-title"></span><span class="price"></span></div><div><span class="rate-title"></span><span class="rate"></span></div><div class="rate-tips"></div></div>'), $("body").append(e)), $(this).attr("data-width") && e.css("width", $(this).attr("data-width")), $(this).attr("data-price") && (e.find(".price-title").html(i18n("premium_price")), e.find(".price").html($(this).attr("data-price"))), $(this).attr("data-rate") && (e.find(".rate-title").html(i18n("premium_rate")), e.find(".rate-tips").html(i18n("premium_rate_tips")), e.find(".rate").html($(this).attr("data-rate")));
			var t = $(this).offset().left,
				a = $(this).offset().top;
			e.attr("style", ""), e.removeClass("fixedtip2"), e.addClass("fixedtip2"), e.find(".icon").attr("class", "icon icon_arr_big_left icon_arr_big_top"), e.css({
				left: t + $(this).width() / 2 - e.width() / 2 - 8,
				top: a - e.height() - $(this).height() - 5
			}).show();
			var i = "auto";
			$(this).attr("data-width") && (i = $(this).attr("data-width")), e.css("width", i + "px")
		}
		return !0
	}).on("mouseleave", ".j_premiumtip_handler", function () {
		return premiumTipsHandlerTimer = setTimeout(function () {
			$("#j_fixedtip_premium").hide()
		}, 150), !1
	}).on("mouseenter", "#j_fixedtip_premium", function () {
		return clearTimeout(premiumTipsHandlerTimer), !1
	}).on("mouseleave", "#j_fixedtip_premium", function () {
		return premiumTipsHandlerTimer = setTimeout(function () {
			$("#j_fixedtip_premium").hide()
		}, 150), !1
	});
	var ua = window.navigator.userAgent.toLowerCase();
	"ipad" != ua.match(/ipad/i) && "iphone" != ua.match(/iphone/i) || $("body div").on("click", function () { }), $("body").on("click", ".with-gallery", function (e) {
		toggleGallery($(".with-gallery").index(this))
	}), $("body").on("click", ".j_gallery_handler", function (e) {
		toggleGallery($(".j_gallery_handler").index(this))
	}), $("body").on("click", ".with-floatrank", function (e) {
		toggleFloatRank($(".with-floatrank").index(this))
	}), $.ajax({
		url: "https://websource.nie.netease.com/copyright/get/byreferer",
		type: "GET",
		dataType: "jsonp",
		success: function (e) {
			e && e.success && e.result.copyright && (e.result.copyright = e.result.copyright.replace("netease.1", "netease.2").replace("nie.1", "nie.2"), $("#NIE-copyRight").html(e.result.copyright))
		},
		error: function () { }
	});
	var $qqGroup = $("#j_bar-qq-list"),
		$qqGroups = $("#j_bar-qq-list li"),
		$qqGroupNav = $("#j_bar-qq-nav"),
		$qqGroupId = $("#j_qq-group-number"),
		$qqGroupName = $("#j_qq-group-name");
	$qqGroupId.html($qqGroups.eq(0).attr("data-group-id")), $qqGroupName.html($qqGroups.eq(0).attr("data-group-name")), $qqGroups.length > 1 && ($qqGroups.each(function (e, t) {
		$qqGroupNav.append("<span></span>")
	}), $qqGroupNav.find("span").eq(0).addClass("on"), $qqGroup.width(160 * $qqGroups.length), $qqGroupNav.on("click", "span", function (e) {
		var t = $("#j_bar-qq-nav span").index(this);
		$(this).addClass("on").siblings().removeClass("on"), $qqGroupId.html($qqGroups.eq(t).attr("data-group-id")), $qqGroupName.html($qqGroups.eq(t).attr("data-group-name")), $qqGroup.animate({
			marginLeft: -160 * t
		}, "fast")
	})), qqGroupTimer = null, $("#j_qq-gruop-handler").mouseenter(function () {
		clearTimeout(qqGroupTimer), $("#j_qq-group").show()
	}).mouseleave(function () {
		qqGroupTimer = setTimeout(function () {
			$("#j_qq-group").hide()
		}, 300)
	}), $("#j_qq-group").hover(function () {
		clearTimeout(qqGroupTimer)
	}, function () {
		qqGroupTimer = setTimeout(function () {
			$("#j_qq-group").hide()
		}, 300)
	})
});
buffPlugin = function () {
	var e = function () {
		Buff.alert = function (e) {
			var t = e.onClose;
			var a = e.error || false;
			var i = e.success;
			var n = e.cancel;
			var r = e.hide_popup_after_success;
			var o = e.hide_popup_after_cancel;
			var s = e.rememberDismiss;
			var c = e.forceClose;
			var _ = e.confirm_wait || 0;
			var l = function (e, t, a, i) {
				if (t == 0) {
					e.removeClass("i_Btn_disabled");
					e.text(a);
					if (typeof i != "undefined") {
						i()
					}
				} else {
					e.addClass("i_Btn_disabled");
					e.text(a + "(" + t + "s)");
					setTimeout(function () {
						l(e, t - 1, a, i)
					}, 1e3)
				}
			};
			var u = randomstring(10);
			if (s) {
				if (localStorage.getItem("remember_dismiss_" + s)) {
					if (i) {
						i(true);
						return
					}
				}
			}
			var d = template_render("alert_pat", {
				config: e,
				popup_id: u
			});
			$("body").append(d);
			$("#" + u + " .i_Btn_sub").click(function (e) {
				e.preventDefault();
				if (typeof n != "undefined") {
					n()
				}
				if (o || typeof o == "undefined") Popup.hide()
			});
			$("#" + u + " .popup-close").click(function (e) {
				e.preventDefault();
				Popup.hide();
				if (typeof t != "undefined") {
					t()
				}
			});
			var p = $("#" + u + " .i_Btn_main");
			var f = function () {
				p.click(function (e) {
					e.preventDefault();
					if ($("#remember-" + u).attr("value") === "1") {
						localStorage.setItem("remember_dismiss_" + s, "1")
					}
					if (r || typeof r == "undefined") Popup.hide();
					if (typeof i != "undefined") {
						i()
					}
				})
			};
			if (_ > 0) {
				l(p, _, p.text(), function () {
					f()
				})
			} else {
				f()
			}
			Popup.show(u, {
				forceClose: c
			});
			return u
		}
	};
	var t = function () {
		Buff.guide = function (e) {
			var t = e.title || i18n("description");
			var a = e.hideClose || false;
			var i = e.confirmText || i18n("ok");
			var n = e.onConfirm;
			var r = e.rememberDismiss;
			var o = e.content || "";
			var s = randomstring(10);
			if (r) {
				if (localStorage.getItem("remember_dismiss_" + r)) {
					if (typeof n != "undefined") {
						n()
					}
					return
				}
			}
			var c = '<div class="popup popup_guide_sell" id="' + s + '" style="width:600px;">';
			if (!a) {
				c += '<a class="popup-close" href="javascript:;" onclick="Popup.hide()">×</a>'
			}
			c += '<div class="popup-header"><h2>' + t + '</h2></div>                            <div class="popup-cont">' + o + '<div class="popup-btns">';
			if (r) {
				c += '<div class="w-Checkbox f_14px" name="remember" value="">                                        <span value="1"><i class="icon icon_checkbox"></i>' + i18n("no_longer_prompt") + "</span>                                    </div>"
			}
			c += '<a href="javascript:;" class="i_Btn i_Btn_main">' + i + "</a>                                </div>                            </div>                        </div>";
			$("body").append(c);
			$("#" + s + " .i_Btn_main").click(function (e) {
				e.preventDefault();
				if ($("#" + s + ' .w-Checkbox[name="remember"]').attr("value") === "1") {
					localStorage.setItem("remember_dismiss_" + r, "1")
				}
				if (typeof n != "undefined") {
					n()
				}
				Popup.hide()
			});
			Popup.show(s)
		}
	};
	var a = function () {
		Buff.dialog = function (e) {
			var t = e.title || i18n("description");
			var a = e.hideClose || false;
			var i = e.cancelText || i18n("cancel");
			var n = e.confirmText || i18n("ok");
			var r = e.onConfirm;
			var o = e.content || "";
			var s = randomstring(10);
			var c = '<div class="popup_cover" id="popup_cover_' + s + '" style="z-index:600"><div class="popup popup_guide_sell" id="' + s + '" style="width:600px;">';
			if (!a) {
				c += '<a class="popup-close" href="javascript:;">×</a>'
			}
			c += '<div class="popup-header"><h2>' + t + '</h2></div>                            <div class="popup-cont">' + o + '<div class="popup-btns">';
			c += '<a href="javascript:;" class="i_Btn i_Btn_sub">' + i + '</a>                                    <a href="javascript:;" class="i_Btn i_Btn_main">' + n + "</a>                                </div>                            </div>                        </div>";
			$("body").append(c);
			var _ = $("#" + s);
			$("#" + s + " .popup-close").click(function (e) {
				Popup.hide();
				_.remove()
			});
			$("#" + s + " .i_Btn_sub").click(function (e) {
				Popup.hide();
				_.remove()
			});
			$("#" + s + " .i_Btn_main").click(function (e) {
				if (typeof r != "undefined") {
					r(_)
				} else {
					_.remove()
				}
			});
			Popup.show(s)
		}
	};
	var i = function () {
		e();
		t();
		a()
	};
	return {
		init: i
	}
}();
selectSearch = function (e) {
	this.bind = function () {
		var e = $(this.selector).attr("bind");
		if (e) {
			return
		}
		var i = null,
			n = this;
		$(this.selector + " .w-Search input").on("keyup", function (e) {
			var t = $(this),
				a = t.val();
			a = $.trim(a);
			if (a && a === n.val) {
				return false
			}
			clearTimeout(i);
			i = setTimeout(function () {
				n.get(a)
			}, 200)
		});
		$(this.selector).attr("bind", "true")
	};
	this.get = function (i) {
		var n = this;
		this.val = i;
		var e = Object.assign({}, this.queryData, this.setParams(this.val));
		$.ajax({
			url: this.url,
			data: e
		}).done(function (e) {
			if (i !== n.val) return;

			function t(e, t) {
				if (e.name < t.name) return -1;
				if (e.name > t.name) return 1;
				return 0
			}
			var a = e.data.items.sort(t);
			n.render(a)
		}).fail(function () {
			Buff.toast(i18n("network_request_failed"))
		})
	};
	this.render = function (e) {
		var t = format_html('<li value="" title="<%= i18n("all") %>"><span class="w-Selectsearch-img"><b class="icon icon_all"></b></span><%= i18n("all") %></li>');
		if (e.length) {
			for (var a = 0; a < e.length; a++) {
				var i = e[a];
				t += format_html('<li value="<%= item.id %>" title="<%= item.name %>"><span class="w-Selectsearch-img"><img src="<%= item.goods_info.icon_url %>"></span><%= item.name %></li>', {
					item: i
				})
			}
		} else {
			t = format_html('<li class="none"><%= i18n("not_found_to_contain_the") %>“<%= val %>”<%= i18n("jewelry") %></li>', {
				val: this.val
			})
		}
		$(this.selector + " .w-Selectsearch-list").html(t)
	};
	var t = function () { };
	this.val = "";
	this.selector = e.id;
	this.url = e.url;
	this.queryData = e.queryData || {};
	this.setParams = e.setParams || function (e) {
		return {
			key: e
		}
	};
	this.bind();
	this.get()
};

function waterFall(e) {
	this.init(e)
}
waterFall.prototype.init = function (e) {
	this.arrHeight = [];
	this.arrLeft = [];
	this.parentHeight = 0;
	this.config(e)
};
waterFall.prototype.config = function (e) {
	this.pageWidth = e.width;
	this.itemWidth = e.itemWidth;
	this.columns = e.colums;
	this.gap = (this.pageWidth - this.itemWidth * this.columns) / (this.columns - 1);
	this.$parent = $(e.id);
	this.parentTop = this.$parent.position().top
};
waterFall.prototype.isFirst = function () {
	return this.arrHeight.length < this.columns
};
waterFall.prototype.setPosition = function (e) {
	if (this.$parent.length < 1) return;
	var t = this;
	var a = [];
	e.find(".pinterest-img img").each(function () {
		var e = $.Deferred();
		if (this.complete) {
			e.resolve()
		} else {
			$(this).load(function () {
				e.resolve()
			})
		}
		a.push(e)
	});
	$.when.apply(null, a).done(function () {
		t.setHeight(e)
	})
};
waterFall.prototype.setHeight = function (e) {
	var r = this;
	e.each(function (e, t) {
		var a = $(t);
		if (r.isFirst()) {
			a.css({
				top: 0,
				left: (r.itemWidth + r.gap) * r.arrHeight.length
			});
			r.arrHeight.push(t.offsetHeight);
			r.arrLeft.push(t.offsetLeft)
		} else {
			var i = Math.min.apply(r.arrHeight, r.arrHeight);
			var n = $.inArray(i, r.arrHeight);
			a.css({
				top: i + r.gap,
				left: r.arrLeft[n]
			});
			r.arrHeight[n] += a.height() + r.gap
		}
	});
	this.setParentHeight()
};
waterFall.prototype.setParentHeight = function () {
	var e = Math.max.apply(this.arrHeight, this.arrHeight);
	this.parentHeight = e + this.gap;
	this.$parent.css({
		height: this.parentHeight
	})
};
waterFall.prototype.getClientHeight = function () {
	return this.parentHeight + this.parentTop
};

function TableScrollTb(e) {
	this.offset = 0;
	this.clientX = 0;
	this.width = 0;
	this.min = 0;
	this.max = 0;
	this.init(e)
}
TableScrollTb.prototype.init = function (e) {
	this.config(e);
	this.bind()
};
TableScrollTb.prototype.config = function (e) {
	this.$el = e.$el;
	this.$child = e.$child;
	this.width = this.$child.width();
	this.min = this.width * .5;
	this.max = this.width * 2
};
TableScrollTb.prototype.bind = function () {
	this.$el && this.$el.addEventListener("touchstart", this.handelDown.bind(this));
	this.bindResize()
};
TableScrollTb.prototype.bindResize = function () {
	var t = null;
	var a = this;
	$(window).resize(function (e) {
		clearTimeout(t);
		t = setTimeout(function () {
			a.resize()
		}, 200)
	})
};
TableScrollTb.prototype.resize = function () {
	this.offset = 0;
	this.$child.removeAttr("style");
	this.width = this.$child.width();
	this.min = this.width * .5;
	this.max = this.width * 2
};
TableScrollTb.prototype.bindMove = function () {
	if (!this.$el) return;
	this.$el.addEventListener("touchmove", this.handelMove.bind(this));
	this.$el.addEventListener("touchend", this.handelUp.bind(this))
};
TableScrollTb.prototype.unbindMove = function () {
	if (!this.$el) return;
	this.$el.removeEventListener("touchmove", this.handelMove);
	this.$el.removeEventListener("touchend", this.handelUp)
};
TableScrollTb.prototype.handelDown = function (e) {
	var t = e.target;
	if (t.nodeName.toLocaleLowerCase() === "a" || t.nodeName.toLocaleLowerCase() === "img") {
		return
	}
	var a = e.touches[0];
	this.offset = 0;
	this.clientX = a.clientX;
	e.stopPropagation();
	e.preventDefault();
	this.bindMove()
};
TableScrollTb.prototype.handelMove = function (e) {
	var t = e.touches[0].clientX;
	var a = this.clientX - t;
	this.move(this.width - a);
	e.stopPropagation();
	e.preventDefault()
};
TableScrollTb.prototype.handelUp = function () {
	this.width = this.offset;
	this.unbindMove()
};
TableScrollTb.prototype.move = function (e) {
	if (e <= this.min) {
		e = this.min
	} else if (e >= this.max) {
		e = this.max
	}
	this.offset = e;
	this.$child.width(this.offset)
};
TableScrollTb.prototype.unbind = function () {
	this.unbindMove();
	this.$el && this.$el.removeEventListener("touchstart", this.handelDown);
	$(window).off("resize");
	this.$el = null;
	this.$child = null
};
jQuery.xhrPool = [];
jQuery.xhrPool.abortAll = function () {
	var e = [];
	for (var t in this) {
		if (isFinite(t) === true) {
			e.push(this[t])
		}
	}
	for (t in e) {
		e[t].abort()
	}
};
jQuery.xhrPool.abort = function (e) {
	for (var t in this) {
		if (typeof this[t] == "object" && this[t].url.startsWith(e)) {
			this[t].abort();
			this.remove(this[t]);
			break
		}
	}
};
jQuery.xhrPool.remove = function (e) {
	for (var t in this) {
		if (this[t] === e) {
			jQuery.xhrPool.splice(t, 1);
			break
		}
	}
};
$(document).ajaxSend(function (e, t, a) {
	t.url = a.url;
	jQuery.xhrPool.push(t)
});
$(document).ajaxComplete(function (e, t, a) {
	jQuery.xhrPool.remove(t)
});
assetTagFilter = function () {
	var b = "";
	var o = null;
	var c = null;
	var g = {
		sync: function (e) { },
		get: function (e) {
			return null
		}
	};
	var w = "";
	var k = "-1";
	var e = "no_limit";
	var t = function () {
		$(b).show();
		Buff.initSelectMulti(b + " .w-Select-Multi")
	};
	var a = function () {
		$(b).hide()
	};
	var i = function (e) {
		var t = {
			tag_ids: "null",
			paintseed: "null",
			tier: "null",
			paintseed_group: "null"
		};
		var a = [];
		var i = {};
		i.id = $(e + " .w-Select-Multi[name=unlock_style]").attr("value");
		i.name = $(e + " .w-Select-Multi[name=unlock_style] h3").text();
		if (i.id) {
			a.push(i)
		}
		$(e + " .w-Select-Multi[name=gems]").each(function () {
			var e = $(this).attr("category");
			var t = $(this).attr("value") || g.get(e);
			if (!t) {
				return
			}
			$(this).find("li.on h6").each(function () {
				if (!$(this).attr("value")) {
					return
				}
				a.push({
					id: $(this).attr("value"),
					name: $(this).text(),
					category: $(this).parent().parent().parent().attr("category")
				})
			})
		});
		var n = [];
		for (var r = 0; r < a.length; r++) {
			n.push(a[r].id)
		}
		if (n) t["tag_ids"] = n.join(",");
		var o = $(e + " .w-Select-Multi[name=tier]").attr("value") || g.get("tier");
		if (o) {
			var s = o.split("-");
			t[s[0]] = s[1];
			var c = $(e + " .w-Select-Multi[name=tier]").find("h6[value=" + o + "]").text();
			a.push({
				id: o,
				name: c || s[1]
			})
		}
		var _ = $(e + ".w-Select-Multi input[name=paintseed]").attr("value") || g.get("paintseed");
		if (_) {
			t["paintseed"] = _
		}
		var l = $(e + " .w-Select-Multi[name=float_range]").attr("value") || g.get("float_range");
		if (l) {
			var u = rangeKeyParser.parse(l);
			t.min_paintwear = u[0];
			t.max_paintwear = u[1]
		} else {
			t.min_paintwear = t.max_paintwear = ""
		}
		var d = $(e + " .w-Select-Multi[name=fade_range]").attr("value") || g.get("fade_range");
		if (d) {
			var p = rangeKeyParser.parse(d);
			t.min_fade = p[0];
			t.max_fade = p[1]
		} else {
			t.min_fade = t.max_fade = ""
		}
		t.name_tag = $(e + " .w-Select-Multi[name=name_tag]").attr("value") || g.get("name_tag");
		var f = $(e + " .w-Select-Multi[name=extra_tag_ids]");
		if (f) {
			var m = f.attr("value") || g.get("extra_tag_ids");
			if (m !== undefined && m !== "custom") {
				extraTagIdsParser.parse(m, t, $("#" + f.attr("dlg_id") + " #sticker_wearless_checkbox").attr("value") ? "1" : "")
			}
		}
		var h = $.trim($(e + " .w-Counter").find(".i_Text").eq(0).val()) || g.get("min_price") || "";
		t.min_price = h;
		t.max_price = $.trim($(e + " .w-Counter").find(".i_Text").eq(1).val()) || g.get("max_price") || "";
		t.page_num = 1;
		return {
			tags: a,
			hashParams: t
		}
	};
	var _ = function () {
		var e = i(b);
		updateHashData(e.hashParams)
	};
	var l = function () {
		$(b + " .w-Select-Multi li").removeClass("on");
		$(b + " .w-Select-Multi p").removeClass("on");
		$(b + " .w-Select-Multi").attr("value", "");
		$(b + " .w-Select-Multi").each(function () {
			$(this).find("h3").text($(this).data("title"))
		});
		var e = getParamsFromHash();
		var t = e.tag_ids;
		t = t ? t.split(",") : [];
		if (e.tier) {
			var a = "tier-" + e.tier;
			t.push(a)
		} else if (e.paintseed) {
			var a = "paintseed-" + e.paintseed;
			t.push(a)
		} else if (e.paintseed_group) {
			var a = "paintseed_group-" + e.paintseed_group;
			t.push(a)
		}
		var i = {};
		if (t) {
			for (var n = 0; n < t.length; n++) {
				var r = t[n];
				var o = $(b + " .w-Select-Multi h6[value=" + r + "]");
				var s = $(b + " .w-Select-Multi p[value=" + r + "]");
				var c = s.parents(".w-Select-Multi");
				var _ = o.parents(".w-Select-Multi");
				if (s.length > 0) {
					s.addClass("on");
					c.attr("value", r);
					var l = s.text();
					c.find("h3").text(l);
					i[x(c.attr("name"), c.attr("category"))] = {
						text: l,
						value: r
					}
				}
				if (o.length > 0) {
					_.attr("value", r);
					o.parent().addClass("on");
					var l = o.text();
					_.find("h3").text(l);
					i[x(_.attr("name"), _.attr("category"))] = {
						text: l,
						value: r
					}
				}
				if (r.indexOf("paintseed-") == 0) {
					var u = $(b + " .w-Select-Multi[name=tier] input");
					u.parents(".w-Select-Multi").attr("value", r);
					var d = r.split("-")[1];
					u.val(d);
					u.parents(".w-Select-Multi").find("h3").text(d);
					i["tier"] = {
						text: d,
						value: r
					}
				}
			}
		}
		if (!e.paintseed) {
			$(b + " .w-Select-Multi[name=tier] input").val("")
		}
		if (e.min_paintwear || e.max_paintwear) {
			if (w == "buying" && e.min_paintwear == k && e.max_paintwear == k) {
				var p = rangeKeyParser.deparse(e.min_paintwear, e.max_paintwear, "~");
				var f = $(b + ' .w-Select-Multi[name=float_range] h6[value="' + p + '"]').text()
			} else {
				var p = rangeKeyParser.deparse(e.min_paintwear, e.max_paintwear);
				var f = p
			}
			$(b + ' .w-Select-Multi[name=float_range] h6[value="' + p + '"]').parents("li").addClass("on");
			$(b + " .w-Select-Multi[name=float_range]").attr("value", p).find("h3").text(f);
			i["min_paintwear"] = {
				text: e.min_paintwear,
				value: e.min_paintwear
			};
			i["max_paintwear"] = {
				text: e.max_paintwear,
				value: e.max_paintwear
			}
		}
		if (e.min_asset_count || e.max_asset_count) {
			var p = rangeKeyParser.deparse(e.min_asset_count, e.max_asset_count);
			$(b + ' .w-Select-Multi h6[value="' + p + '"]').parents("li").addClass("on");
			$(b + " .w-Select-Multi[name=count_range]").attr("value", p).find("h3").text(p);
			i["min_asset_count"] = {
				text: e.min_asset_count,
				value: e.min_asset_count
			};
			i["max_asset_count"] = {
				text: e.max_asset_count,
				value: e.max_asset_count
			}
		}
		if (e.min_fade || e.max_fade) {
			var p = rangeKeyParser.deparse(e.min_fade, e.max_fade);
			var m = rangeKeyParser.deparse(e.min_fade && e.min_fade + "%", e.max_fade && e.max_fade + "%");
			$(b + ' .w-Select-Multi h6[value="' + p + '"]').parents("li").addClass("on");
			$(b + " .w-Select-Multi[name=fade_range]").attr("value", p).find("h3").text(m);
			i["min_fade"] = {
				text: e.min_fade,
				value: e.min_fade
			};
			i["max_fade"] = {
				text: e.max_fade,
				value: e.max_fade
			}
		}
		if (e.name_tag) {
			var h = $(b + " .w-Select-Multi[name=name_tag]").find("h6[value=" + e.name_tag + "]");
			h.parents("li").addClass("on");
			$(b + " .w-Select-Multi[name=name_tag]").attr("value", e.name_tag).find("h3").text(h.text());
			i["name_tag"] = {
				text: h.text(),
				value: e.name_tag
			}
		}
		if (e.extra_tag_ids) {
			var g = e.extra_tag_ids;
			var a = g;
			if (g == "non_empty" && e.wearless_sticker) {
				a = "non_empty_wearless"
			} else if (g == "squad_combos" && e.wearless_sticker && e.fixed_slot) {
				a = "squad_wearless_fixed"
			} else if (g == "squad_combos" && e.fixed_slot) {
				a = "squad_combos_fixed"
			} else if (g == "squad_combos" && e.wearless_sticker) {
				a = "squad_combos_wearless"
			} else if (g == "five_combos" && e.wearless_sticker) {
				a = "five_combos_wearless"
			} else if (["", "empty", "non_empty", "squad_combos", "five_combos"].indexOf(g) == -1) {
				a = "custom"
			}
			comp = $(b + ' .w-Select-Multi[name=extra_tag_ids] [value="' + a + '"]').first();
			li_sel = comp.closest("li");
			li_sel.addClass("on");
			f = li_sel.find("h6").first().text();
			if (comp.is("p")) {
				f = f + " " + comp.text()
			}
			if (a == "custom") {
				a = g
			}
			$(b + " .w-Select-Multi[name=extra_tag_ids]").attr("value", a).find("h3").text(f);
			i["extra_tag_ids"] = {
				text: f,
				value: a
			}
		}
		if (e.min_price) {
			$(b + " .w-Counter .i_Text").eq(0).val(e.min_price);
			i["min_price"] = {
				text: e.min_price,
				value: e.min_price
			}
		} else {
			$(b + " .w-Counter .i_Text").eq(0).val("")
		}
		if (e.max_price) {
			$(b + " .w-Counter .i_Text").eq(1).val(e.max_price);
			i["max_price"] = {
				text: e.max_price,
				value: e.max_price
			}
		} else {
			$(b + " .w-Counter .i_Text").eq(1).val("")
		}
		if (e.max_price_only) {
			$(b + " .w-Checkbox[name=max_price_only]").attr("value", "yes").find("span").addClass("on")
		}
		var v = e.sort_by || "default";
		if (v) {
			var y = $(b + " .w-Select-Multi[name=sort]").find('h6[value="' + v + '"]');
			$(b + " .w-Select-Multi[name=sort]").attr("value", v).find("h3").html(y.html())
		}
		$(b + " .w-Order").each(function () {
			$(this).removeClass("w-Order_asc").removeClass("w-Order_des").attr("value", "");
			var e = $(this).attr("name");
			if (v.indexOf(e) > -1) {
				if (v.indexOf("asc") > -1) {
					$(this).addClass("w-Order_asc");
					$(this).attr("value", "asc")
				} else {
					$(this).addClass("w-Order_des");
					$(this).attr("value", "des")
				}
			}
		});
		return i
	};
	var x = function (e, t) {
		return e == "gems" || t && t.startsWith("gem") ? t : e
	};
	var u = function (r) {
		b = "#" + r.container;
		o = r.popup_callback || null;
		var s = "popup-container";
		var a = r.precision || 4;
		var c = r.custom_min_placeholder;
		var _ = r.custom_max_placeholder;
		if (r.data && r.data.paintwear_choices && r.data.paintwear_choices[0]) {
			var e = r.data.paintwear_choices;
			if (!c) {
				c = e[0][0];
				e.forEach(function (e) {
					if (e[0] < c) c = e[0]
				})
			}
			if (!_) {
				_ = e[0][1];
				e.forEach(function (e) {
					if (e[1] > _) _ = e[1]
				})
			}
			$(b + " #custom-float-range").off("click").click(function (e) {
				e.preventDefault();
				e.stopPropagation();
				var t = $(this).parents(".w-Select-Multi").attr("value");
				var a = "";
				var i = "";
				if (t) {
					var n = rangeKeyParser.parse(t);
					a = n[0];
					i = n[1]
				}
				var r = {
					custom_min_placeholder: c,
					custom_max_placeholder: _,
					custom_min_val: a,
					custom_max_val: i
				};
				var o = template_render("custom-paintwear-pat", r);
				$("#" + s).html(o);
				l();
				Popup.show("custom-paintwear-container")
			});
			var l = function () {
				var i = "#custom-paintwear-container input[name=custom_min]";
				var n = "#custom-paintwear-container input[name=custom_max]";
				$(i).on("focus", function () {
					var e = $(this).attr("placeholder");
					var t = $(this).val();
					if (!t) {
						$(this).val(e.split(".")[0] + ".")
					}
				}).on("blur", function () {
					var e = $(this).val();
					if (!e) {
						$(this).val("");
						return
					}
					if (e == "0.") {
						$(this).val("");
						return
					}
					if (e < $(this).attr("placeholder")) {
						$(this).val($(this).attr("placeholder"));
						return
					}
					var t = $(n).attr("placeholder");
					var a = $(n).val() || t;
					if (e > a) {
						$(this).val(a > t ? t : a);
						$(n).val(e > t ? t : e)
					}
					if (e.indexOf(".") == e.length - 1) {
						$(this).val(e.replace(".", ""))
					}
				}).on("keyup", function (e) {
					var t = e.keyCode || e.charCode;
					$(this).val($(this).val().replace(new RegExp("^\\D*(\\d*(?:\\.\\d{0," + a + "})?).*$", "g"), "$1"));
					if (t == 13) {
						if ($(this).val().length > 0) {
							$(this).trigger("blur");
							$("#" + s + " #custom_paintwear_confirm").trigger("click")
						}
					}
				});
				$(n).on("focus", function () {
					var e = $(this).attr("placeholder");
					if (!e) {
						return
					}
					var t = $(this).val();
					if (!t) {
						$(this).val(e.split(".")[0] + ".")
					}
				}).on("blur", function () {
					var e = $(this).val();
					if (!e) {
						$(this).val("");
						return
					}
					if (e == "0.") {
						$(this).val("");
						return
					}
					if (e > $(this).attr("placeholder")) {
						$(this).val($(this).attr("placeholder"));
						return
					}
					var t = $(i).attr("placeholder");
					var a = $(i).val() || t;
					if (e < a) {
						if (e < a) {
							$(this).val(a < t ? t : a);
							$(i).val(e < t ? t : e)
						}
					}
					if (e.indexOf(".") == e.length - 1) {
						$(this).val(e.replace(".", ""))
					}
				}).on("keyup", function (e) {
					var t = e.keyCode || e.charCode;
					if ($(this).val() != "0.001") $(this).val($(this).val().replace(new RegExp("^\\D*(\\d*(?:\\.\\d{0," + a + "})?).*$", "g"), "$1"));
					if (t == 13) {
						if ($(this).val().length > 0) {
							$(this).trigger("blur");
							$("#" + s + " #custom_paintwear_confirm").trigger("click")
						}
					}
				});
				$("#" + s + " #custom_paintwear_reset").on("click", function () {
					$(i).val("");
					$(n).val("");
					Popup.hide(s);
					if (o) {
						o({
							event: "custom_paintwear_reset",
							data: {}
						})
					}
				});
				$("#" + s + " #custom_paintwear_confirm").on("click", function () {
					Popup.hide();
					var e = $(i).val().toString();
					var t = $(n).val().toString();
					if (r.allow_empty === false) {
						if (!e) e = c;
						if (!t) t = _
					}
					var a = rangeKeyParser.deparse(e, t);
					if (o) {
						o({
							event: "custom_paintwear_confirm",
							data: {
								custom_painwear_val: a
							}
						})
					}
				})
			}
		}
	};
	var n = function (e) {
		b = "#" + e.container;
		w = e.tab;
		o = e.popup_callback || null;
		c = e.data_observer || null;
		if (e.fdm) g = e.fdm;
		var t = template_render("asset-tag-filter-pat", e.data);
		$(b).html(t);
		$(b + " .tb-Order").on("click", function () {
			var e = $(b + "div[name='sort']");
			e.children("h3:first").html(e.attr("default"))
		});
		$("body").on("change", b + " .w-Select-Multi", function () {
			var e = $(this).attr("name");
			if (e == "tier") {
				$(this).find("input").val("")
			}
			if ($(this).hasClass("no-hash-update")) return;
			if (e == "extra_tag_ids") {
				if ($(this).attr("value") == "custom") {
					return
				}
				if (c) {
					c("last_extra_tag_ids", $(this).attr("value"))
				}
			} else if (e == "sort") {
				updateHashData({
					page_num: 1,
					sort_by: $(this).attr("value")
				});
				return
			}
			var t = {
				text: $(this).find("h3").text()
			};
			g.sync(x(e, $(this).attr("category")), $(this).attr("value"), t);
			_()
		});
		$(b + " .w-Select-Multi input").on("change", function (e) {
			e.stopPropagation();
			var t = $(this).val();
			if (t.length > 0) {
				var t = parseInt(t);
				if (Number.isNaN(t) || t < 0 || t > 1e3) {
					Buff.toast(i18n("please_input_01000_between_the"), {
						type: "error"
					});
					return
				}
				$(this).parents(".w-Select-Multi").attr("value", "paintseed-" + t);
				$(this).parents(".w-Select-Multi").find("h3").text(t);
				$(this).parents(".w-Select-Multi").find("li").removeClass("on")
			} else {
				$(this).parents(".w-Select-Multi").attr("value", "");
				$(this).parents(".w-Select-Multi").find("h3").text($(this).parents(".w-Select-Multi").data("title"));
				$(this).parents(".w-Select-Multi").find("li").removeClass("on")
			}
			if ($(this).parents(".w-Select-Multi").hasClass("no-hash-update")) {
				return
			}
			g.sync($(this).parents(".w-Select-Multi").attr("name"), $(this).parents(".w-Select-Multi").attr("value"));
			_()
		});
		$(b + " .w-Checkbox[name=max_price_only]").change(function () {
			updateHashData({
				max_price_only: $(this).attr("value"),
				page_num: 1
			})
		});
		$(b + " .w-Counter").hover(function () {
			$(this).find(".w-Counter-pannel").show()
		}, function () {
			$(this).find(".w-Counter-pannel").hide()
		}).on("click", ".i_Btn_sub", function () {
			var e = $(this).parent().parent();
			e.find(".i_Text").val("");
			var t = $(e.find(".i_Text")[0]);
			g.sync(t.attr("name"), "");
			var a = $(e.find(".i_Text")[1]);
			g.sync(a.attr("name"), "");
			_()
		}).on("click", ".i_Btn_main", function () {
			var e = $(this).parent().parent();
			var t = $(e.find(".i_Text")[0]);
			g.sync(t.attr("name"), t.val());
			var a = $(e.find(".i_Text")[1]);
			g.sync(a.attr("name"), a.val());
			_()
		});
		u(e);
		var s = "popup-container";
		if (e.data && e.data.has_fade_name) {
			$(b + " #custom-fade-range").click(function (e) {
				e.preventDefault();
				e.stopPropagation();
				var t = $(this).parents(".w-Select-Multi").attr("value");
				var a = "";
				var i = "";
				if (t) {
					var n = rangeKeyParser.parse(t);
					a = n[0];
					i = n[1]
				}
				var r = {
					custom_min_placeholder: "79.0",
					custom_max_placeholder: "100.0",
					custom_min_val: a,
					custom_max_val: i
				};
				var o = template_render("custom-fade-pat", r);
				$("#" + s).html(o);
				Popup.show("custom-fade-container")
			});
			var n = "#custom-fade-container input[name=custom_min]";
			var r = "#custom-fade-container input[name=custom_max]";
			$(document).on("focus", n, function () {
				var e = $(this).attr("placeholder");
				var t = $(this).val();
				if (!t) {
					$(this).val(e)
				}
			}).on("blur", n, function () {
				var e = $(this).val();
				if (!e) {
					$(this).val("");
					return
				}
				var t = parseFloat(e);
				if (t < $(this).attr("placeholder")) {
					$(this).val($(this).attr("placeholder"));
					return
				}
				var a = parseFloat($(r).attr("placeholder"));
				var i = $(r).val() || a;
				if (t > i) {
					$(this).val(i > a ? a : i);
					$(r).val(t > a ? a : t)
				}
				if (e.indexOf(".") == e.length - 1) {
					$(this).val(e.replace(".", ""))
				}
			}).on("keyup", n, function (e) {
				var t = e.keyCode || e.charCode;
				$(this).val($(this).val().replace(/^\D*(\d*(?:\.\d{0,1})?).*$/g, "$1"));
				if (t == 13) {
					if ($(this).val().length > 0) {
						$(this).trigger("blur");
						$("#" + s + " #custom_fade_confirm").trigger("click")
					}
				}
			});
			$(document).on("focus", r, function () {
				var e = $(this).attr("placeholder");
				if (!e) {
					return
				}
				var t = $(this).val();
				if (!t) {
					$(this).val(e)
				}
			}).on("blur", r, function () {
				var e = $(this).val();
				if (!e) {
					$(this).val("");
					return
				}
				var t = parseFloat(e);
				if (t > $(this).attr("placeholder")) {
					$(this).val($(this).attr("placeholder"));
					return
				}
				var a = parseFloat($(n).attr("placeholder"));
				var i = $(n).val() || a;
				if (t < i) {
					if (e < i) {
						$(this).val(i < a ? a : i);
						$(n).val(e < a ? a : e)
					}
				}
				if (e.indexOf(".") == e.length - 1) {
					$(this).val(e.replace(".", ""))
				}
			}).on("keyup", r, function (e) {
				var t = e.keyCode || e.charCode;
				$(this).val($(this).val().replace(/^\D*(\d*(?:\.\d{0,1})?).*$/g, "$1"));
				if (t == 13) {
					if ($(this).val().length > 0) {
						$(this).trigger("blur");
						$("#" + s + " #custom_fade_confirm").trigger("click")
					}
				}
			});
			$(document).on("click", "#" + s + " #custom_fade_reset", function () {
				$(n).val("");
				$(r).val("");
				Popup.hide(s);
				if (o) {
					o({
						event: "custom_fade_reset",
						data: {}
					})
				}
			});
			$(document).on("click", "#" + s + " #custom_fade_confirm", function () {
				Popup.hide();
				var e = $(n).val().toString();
				var t = $(r).val().toString();
				var a = rangeKeyParser.deparse(e, t);
				var i = rangeKeyParser.deparse(e && e + "%", t && t + "%");
				if (o) {
					o({
						event: "custom_fade_confirm",
						data: {
							custom_fade_val: a,
							custom_fade_text: i
						}
					})
				}
			})
		}
		Buff.pricePatten("input[name=min_price]");
		Buff.pricePatten("input[name=max_price]");
		$(window).on("hashchange", l);
		var a = l();
		if (w == "selling" || w == "bundle") {
			g.sync_tab_from_hash(a, w)
		} else if (w == "buying") {
			if (!$.isEmptyObject(a)) {
				for (var i in a) {
					g.sync(i, a[i]["value"], {
						text: a[i]["text"]
					}, w)
				}
			}
		}
		return this
	};
	return {
		init: n,
		init_float_range_filter: u,
		show: t,
		hide: a,
		getHashTags: i
	}
};
var getParams = function (e) {
	var e = e || window.location.search.substring(1);
	var t = {};
	var a = decodeURIComponent(e);
	if (a == "") {
		return {}
	}
	var i = a.split("&");
	for (var n = 0; n < i.length; n++) {
		var r = i[n].split("=");
		t[r[0]] = r[1]
	}
	return t
};
var getParamsFromHash = function () {
	if (!window.location.hash) {
		return {}
	}
	return getParams(window.location.hash.substring(1))
};
var updateHash = function (e, t, a) {
	var i = getParamsFromHash();
	if (t === undefined || t === "") {
		delete i[e]
	} else {
		i[e] = t
	}
	window.location.hash = "#" + $.param(i).replace(/\+/g, "%20") + (a ? "&" + a : "")
};
var updateHash2 = function (e, t) {
	var a = getParamsFromHash();
	if (t === undefined || t === "") {
		delete a[e]
	} else {
		a[e] = t
	}
	var i = window.location.href.split("#")[0];
	window.location.replace(i + "#" + $.param(a).replace(/\+/g, "%20"))
};
var updateHashData = function (e, t) {
	var a = getParamsFromHash();
	for (var i in e) {
		var n = e[i];
		if (n.length < 1 || n === "null") {
			delete a[i]
		} else {
			a[i] = n
		}
	}
	window.location.hash = "#" + $.param(a).replace(/\+/g, "%20") + (t ? "&" + t : "")
};
var isValidLink = function (e) {
	if (!e) return true;
	return e.startsWith("/") || e.startsWith("http")
};
var goBack = function (e) {
	if (document.referrer) {
		window.history.back()
	} else if (isValidLink(e)) {
		window.location.href = e
	}
};
var formatPriceBigYuan = function (e, t) {
	return (t === undefined ? "¥ " : "") + formatPrice(e, "big")
};
var formatPriceNormalYuan = function (e, t) {
	return (t === undefined ? "¥ " : "") + formatPrice(e, "normal")
};
var formatPriceYuan = function (e, t) {
	return (t === undefined ? "¥ " : "") + formatPrice(e)
};
var formatPriceDollar = function (e, t) {
	return (t === undefined ? "$ " : "") + formatPrice(e)
};
var formatPriceBigCustom = function (e, t, a) {
	return formatPriceCustom(e, t, "big", a)
};
var formatPriceNormalCustom = function (e, t, a) {
	return formatPriceCustom(e, t, "normal", a)
};
var formatPriceCustom = function (e, t, a, i, n) {
	var r = g.currency.rate_base_cny;
	if (i == "USD") {
		r = g.currency.rate_base_usd
	}
	var o = e * r;
	o = n ? parseInt(o) : o.toFixed(2);
	if (e > 0 && o == "0.00") {
		o = "0.01"
	}
	return (t === undefined ? g.currency.symbol + " " : "") + formatPrice(o, a)
};
var formatPrice = function (e, t) {
	var a = parseFloat(e).toFixed(2).replace(/0+$/, "").replace(/\.+$/, "");
	var i = a.split(".");
	if (i.length > 1) {
		if (t == "big") {
			return "<big>" + i[0] + "</big>." + i[1]
		} else if (t == "normal") {
			return "" + a
		} else {
			return "" + i[0] + "<small>." + i[1] + "</small>"
		}
	} else {
		if (t == "big") {
			return "<big>" + i[0] + "</big>"
		}
		return "" + a
	}
};
var isClientVersionGreater = function (e, t) {
	if (typeof WebViewInfo == "undefined" || !WebViewInfo.webview_from) {
		return false
	}
	var a = getDeviceOS();
	if (a == "ios" && e != null) {
		var i = WebViewInfo.webview_app_version;
		return i.split(".") >= e.split(".")
	} else if (a == "android" && t != null) {
		var n = WebViewInfo.webview_app_version_code;
		return parseInt(n) >= parseInt(t)
	}
	return true
};
var renderPagination = function (e) {
	var t = e.pager_name || ".pager";
	if (e.total_count < 1 || e.page_size >= e.total_count) {
		$(t).html("").hide();
		return
	}
	$(t).show();
	$(t).pagination({
		items: e.total_count,
		itemsOnPage: e.page_size,
		displayedPages: e.displayed_pages || 9,
		cssStyle: "light-theme",
		currentPage: e.page_num,
		hrefTextPrefix: "#page_num=",
		prevText: i18n("prev_page"),
		nextText: i18n("next_page"),
		onPageClick: e.onPageClick
	});
	if (e.show_size_select == true) {
		var a = e.size_selects || [30, 50, 100, 200];
		page_size_html = '<div id="search-page_size" class="w-Select" name="page_size" value="' + e.page_size + '">            <h3>' + i18n("page_size") + e.page_size + '</h3>            <i class="icon icon_drop"></i>            <ul>';
		for (var i = 0; i < a.length; i++) {
			var n = a[i];
			page_size_html += '<li value="' + n + '">' + i18n("page_size") + n + "</li>"
		}
		page_size_html += "</ul></div>";
		$(t).append(page_size_html);
		Buff.initSelect("#search-page_size")
	}
};
var updateSearch = function (e, t) {
	var a = getParams();
	if (t.length < 1 || t === "null") {
		delete a[e]
	} else {
		a[e] = t
	}
	if ("page_num" in a) {
		delete a["page_num"]
	}
	updateHash("page_num", undefined);
	window.location.search = $.param(a).replace(/\+/g, "%20")
};
var updateSearchData = function (e) {
	var t = getParams();
	for (var a in e) {
		var i = e[a];
		if (i.length < 1 || i === "null") {
			delete t[a]
		} else {
			t[a] = i
		}
		if ("page_num" in t) {
			delete t["page_num"]
		}
		updateHash("page_num", undefined)
	}
	window.location.search = $.param(t).replace(/\+/g, "%20")
};
var updateSearchPage = function (e, t) {
	var a = getParams() || {};
	if (t > 0) {
		a[e] = t
	} else {
		delete a[e]
	}
	window.location.search = $.param(a).replace(/\+/g, "%20")
};

function randomstring(e) {
	var t = "";
	var a = function () {
		var e = Math.floor(Math.random() * 62);
		if (e < 10) return e;
		if (e < 36) return String.fromCharCode(e + 55);
		return String.fromCharCode(e + 61)
	};
	while (t.length < e) t += a();
	return t
}

function formatRelativeTime(e) {
	var t = new Date / 1e3;
	var a = Math.abs(t - e);
	if (a <= 1) {
		return "刚刚"
	}
	var i = [60, 60, 24, 365, 100];
	var n = ["秒", "分钟", "小时", "天", "年", "世纪"];
	var r = parseInt(a);
	for (var o = 0; o < i.length; o++) {
		if (r < i[o]) {
			return "" + r + n[o] + (t > e ? "前" : "后")
		}
		r = Math.floor(r / i[o])
	}
	return "" + values + "秒"
}

function formatTimestamp(e, t) {
	return moment(e, "X").format(t || "YYYY-MM-DD HH:mm")
}

function formatPaintWear(e) {
	return parseFloat(e) * 100
}

function formatStickerPremium(e) {
	if (e > 1) return ">100%";
	return Math.round(e * 100) + "%"
}
if (typeof template != "undefined") {
	template.defaults.imports.formatTimestamp = formatTimestamp;
	template.defaults.imports.formatRelativeTime = formatRelativeTime;
	template.defaults.imports.formatPriceYuan = formatPriceYuan;
	template.defaults.imports.formatPriceDollar = formatPriceDollar;
	template.defaults.imports.formatPriceBigYuan = formatPriceBigYuan;
	template.defaults.imports.formatPriceNormalYuan = formatPriceNormalYuan;
	template.defaults.imports.formatPriceCustom = formatPriceCustom;
	template.defaults.imports.formatPriceBigCustom = formatPriceBigCustom;
	template.defaults.imports.formatPriceNormalCustom = formatPriceNormalCustom;
	template.defaults.imports.formatPrice = formatPrice;
	template.defaults.imports.formatStickerPremium = formatStickerPremium;
	template.defaults.imports.parseFloat = parseFloat;
	template.defaults.imports.JSON = JSON;
	template.defaults.imports.i18n = i18n;
	template.defaults.imports.ceil = Math.ceil;
	template.defaults.imports.moment = moment;
	template.defaults.imports.abs = Math.abs;
	template.defaults.imports.g = g;
	template.defaults.imports.formatPaintWear = formatPaintWear;
	template.defaults.imports.RegExp = RegExp;
	template.defaults.imports.Date = Date
}
var _template_cache = {};
var template_render = function (e, t) {
	var a = _template_cache[e];
	if (a === undefined) {
		var i = document.getElementById(e);
		if (i) {
			var n = i.value || i.innerHTML;
			a = template.compile(n);
			_template_cache[e] = a
		}
	}
	if (a !== undefined) {
		return a(t)
	}
};
var format_html = function (e, t) {
	var a = template.compile(e);
	return a(t)
};
var formatHtml = format_html;
var processing = {};
var tryCount = {};
var sendRequest = function (i, n) {
	n.error = n.error || function (e) {
		if (n.showLoading !== false) {
			$("#loading-cover").hide()
		}
		if (e.statusText != "abort") {
			if (n.showError != false) {
				if (e.status == 429) {
					try {
						Buff.toast(e.responseJSON.error)
					} catch (e) {
						Buff.toast(i18n("request_in_queue"))
					}
				} else if (["timeout", "error"].indexOf(e.statusText) > -1) {
					if (tryCount[i] === undefined) {
						tryCount[i] = 0
					}
					tryCount[i]++;
					if (tryCount[i] <= this.retryLimit) {
						setTimeout(function () {
							sendRequest(i, n)
						}, 100);
						return
					}
					Buff.toast(i18n("network_error"))
				} else if (e.status == 500) {
					Buff.toast(i18n("system_busy_error"))
				}
			}
		}
	};
	n.cache = n.cache || false;
	n.timeout = n.timeout || 5e3;
	n.original_data = n.original_data || n.data || {};
	n.ignoreCode = n.ignoreCode || [];
	n.tryCount = 0;
	n.retryLimit = n.method.toUpperCase() == "POST" ? 0 : 2;
	n.beforeSend = function (e, t) {
		e.withCredentials = true;
		if (processing[i] === true) {
			return false
		}
		processing[i] = true
	};
	var t = n.complete;
	n.complete = function (e) {
		processing[i] = false;
		t && t(e)
	};
	if (processing[i]) {
		return
	}
	if (n.showLoading !== false) {
		$("#loading-cover").show()
	}
	var r = n.success;
	n.success = function (t) {
		if (n.showLoading !== false) {
			$("#loading-cover").hide()
		}
		if (n.ignoreCode.indexOf(t.code) > -1) {
			if (t.code == "OK" && t.msg != null) {
				Buff.toast(t.msg)
			}
			r(t);
			return
		}
		if (t.code === "Login Required") {
			loginModule.showLogin()
		} else if (t.code == "Internal Server Error") {
			if (n.from_app_inspect) {
				Buff.toast(i18n("app_inspect_server_error"));
				return
			}
			if (n.showError != false) {
				Buff.toast(i18n("system_busy_error"))
			}
		} else if (t.code == "Action Forbidden") {
			Buff.toast(t.error, {
				type: "error"
			})
		} else if (t.code == "User Frozen") {
			Buff.toast(t.error, {
				type: "error"
			})
		} else if (t.code == "Steam Binding Required") {
			Buff.alert({
				title: i18n("unbound_steam"),
				hideCancel: true,
				message: i18n("unbound_steam_notice"),
				confirmText: i18n("go_to_bind"),
				success: function () {
					window.open("/user-center/profile", "_blank")
				}
			})
		} else if (t.code == "Steam Trade URL Binding Required") {
			Buff.alert({
				title: i18n("set_up_steam_trade_url"),
				safeMessage: escapeHtml(t.error) + '<a href="/help#N_steam_setting" target="_blank">如何绑定</a>',
				success: function () {
					window.open("/user-center/profile")
				},
				confirmText: i18n("go_to_bind")
			})
		} else if (t.code == "Steam Trade Hold Duration Invalid") {
			Buff.alert({
				title: i18n("prompt"),
				message: t.error,
				confirmText: i18n("go_to_view"),
				success: function () {
					window.open("/help#why_cant_i_trade", "_blank")
				}
			})
		} else if (t.code == "Steam Trade Limit") {
			Buff.alert({
				title: i18n("prompt"),
				message: i18n("steam_trade_limit"),
				confirmText: i18n("go_to_view"),
				success: function () {
					window.open("/help#before_trade", "_blank")
				}
			})
		} else if (t.code == "Realname Required") {
			Buff.alert({
				title: i18n("prompt"),
				message: t.error,
				confirmText: i18n("go_to_verify"),
				success: function () {
					if (g.user && g.user.is_foreigner) {
						Popup.show("j_popup_idcard_inter")
					} else {
						bindCard.show_cert_popup(function () {
							document.location.reload()
						})
					}
				}
			})
		} else if (t.code == "Epay Account Required") {
			Buff.alert({
				title: i18n("prompt"),
				message: t.error,
				confirmText: i18n("go_to_bind_card"),
				success: function () {
					var e = {};
					if (t.extra.name) {
						e = t.extra
					}
					bindCard.show_bind_card_popup(e, function () {
						document.location.reload()
					})
				}
			})
		} else if (t.code == "Epay Account Grade Failure") {
			Buff.alert({
				title: i18n("prompt"),
				message: t.error,
				hideCancel: true,
				confirmText: i18n("ok"),
				success: function () { }
			})
		} else if (t.code == "Epay Account Require Unfrozen") {
			var e = t.confirm_entry;
			Buff.alert({
				title: e.title,
				message: e.message,
				cancelText: e.button_cancel,
				confirmText: e.button_open_url,
				success: function () {
					window.open(e.entry.url)
				}
			})
		} else if (t.code == "Steam API Key Not Set" || t.code == "Steam API Key Invalid") {
			Buff.alert({
				title: i18n("prompt"),
				message: t.error,
				success: function () {
					window.open("/user-center/profile")
				},
				confirmText: i18n("go_to_set")
			})
		} else if (t.code == "Backpack Is Private") {
			Buff.alert({
				title: i18n("prompt"),
				message: t.error,
				confirmText: i18n("go_to_set"),
				success: function () {
					window.open("https://steamcommunity.com/my/edit/settings")
				}
			})
		} else if (t.code == "Steam Logged In Needs Verification") {
			loggedInFromSteamVerifyManager(t.extra.mobile).init()
		} else if (t.code == "Sms Logged In Needs Verification") {
			if (i.indexOf("asset/zignsec/get_url") > -1 || i.indexOf("asset/zhima_cert") > -1 || i.indexOf("asset/manual_cert") > -1 || i.indexOf("asset/bind_card") > -1) {
				loggedInFromSmsVerifyManager().init(function () { }, false)
			} else {
				loggedInFromSmsVerifyManager().init()
			}
		} else if (t.code == "EJZB Need Auth") {
			ejzbAuthVerifyManager().process({
				mobile: g.user.mobile,
				state: t.code
			}, null, null, null, function () {
				location.reload()
			})
		} else if (t.code == "Partner Role Not Bound") {
			userProfile().initBindBadlanders();
			Popup.show("j_popup_g101_bind")
		} else if (t.code == "Captcha Validate Required") {
			CaptchaEntry(getOrigin(i, false), false, function () {
				location.reload()
			})
		} else {
			if (t.code == "OK" && t.msg != null) {
				Buff.toast(t.msg)
			} else if (t.code != "OK") {
				if (t.code == "Card Need Verify" || t.code == "Get Share Code Retry Later") {
					r(t);
					return
				}
				if (t.confirm_entry) {
					var a = t.confirm_entry;
					Buff.alert({
						title: a.title,
						message: a.message,
						hideCancel: a.button_cancel == "",
						cancelText: a.button_cancel,
						hideConfirm: a.button_noted == "" && a.button_open_url == "",
						confirmText: a.button_noted || a.button_open_url,
						success: function () {
							if (a.entry) {
								window.open(a.entry.url)
							}
							Popup.hide()
						}
					});
					return
				}
			}
			r(t)
		}
	};
	var e = n.method.toUpperCase();
	if (["POST", "PUT", "DELETE", "PATCH"].indexOf(e) > -1) {
		n.contentType = n.contentType || "application/json";
		n.headers = n.headers || {};
		var a = getCookie("csrf_token");
		n.headers["X-CSRFToken"] = a;
		if (n.contentType === "application/json") {
			n.data = JSON.stringify(n.original_data)
		}
	}
	n["type"] = e;
	n["url"] = i;
	n["xhrFields"] = {
		withCredentials: true
	};
	return $.ajax(n)
};

function isTextSelected(e) {
	if (typeof e.selectionStart == "number") {
		return e.selectionStart != e.value.length
	} else if (typeof document.selection != "undefined") {
		e.focus();
		return document.selection.createRange().text == e.value
	}
}

function getUrlRelativePath() {
	var e = document.location.toString();
	var t = e.split("//");
	var a = t[1].indexOf("/");
	var i = t[1].substring(a);
	if (i.indexOf("?") != -1) {
		i = i.split("?")[0]
	}
	if (i.indexOf("#") != -1) {
		i = i.split("#")[0]
	}
	return i
}

function openPageOnNewTab(e) {
	var t = $("<a href='" + e + "' target='_blank' style='display:none'>buff</a>").get(0);
	var a = document.createEvent("MouseEvents");
	a.initEvent("click", true, true);
	t.dispatchEvent(a)
}

function getCookie(e) {
	var t = document.cookie.match(new RegExp("(^| )" + e + "=([^;]+)"));
	if (t) {
		var a = "";
		try {
			a = decodeURIComponent(t[2])
		} catch (e) { }
		return a
	}
	return ""
}

function setCookie(e, t, a) {
	var i = "";
	if (a) {
		var n = new Date;
		n.setTime(n.getTime() + a * 24 * 60 * 60 * 1e3);
		i = "; expires=" + n.toUTCString()
	}
	document.cookie = e + "=" + (t || "") + i + "; path=/"
}

function removeCookie(e, t) {
	document.cookie = e + "=;Path=" + (t || "/") + ";"
}

function isUserLogined() {
	if (g.user) return true;
	return false
}
var gameNavigator = function () {
	var r = [];
	var e = function (e, t) {
		document.cookie = "game=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/";
		document.cookie = "game=" + e + "; path=/";
		var a = function () {
			var e = [];
			var t = getParams();
			for (var a = 0; a < r.length; a++) {
				var i = r[a];
				if (t[i]) {
					e.push(i + "=" + t[i])
				}
			}
			return e.join("&")
		};
		if (g.game == e) return;
		if (t) {
			if (t == "/market/" + g.game) {
				window.location.href = t.replace(g.game, e)
			} else {
				if (t == "/market/sell_order/on_sale" && r.length) {
					window.location.href = t + "?game=" + e + "&" + a()
				} else {
					window.location.href = t + "?game=" + e
				}
			}
		} else {
			var i = r.length > 0 ? a() : "";
			var n = window.location.pathname + "?game=" + e + "&" + i;
			window.location.href = n
		}
	};
	var t = function (e) {
		r = e
	};
	return {
		switchGame: e,
		setKeepParams: t
	}
}();
var updateNavbarCashAmount = function () {
	sendRequest("/api/asset/get_brief_asset/", {
		method: "GET",
		dataType: "json",
		showLoading: false,
		success: function (e) {
			$("#navbar-cash-amount").html(formatPriceYuan(e.data.cash_amount))
		}
	})
};

function sleep(e) {
	var t = (new Date).getTime();
	while ((new Date).getTime() < t + e);
}

function sendNotification(a) {
	if (localStorage.getItem("_notification_" + a.tag)) {
		return
	} else {
		localStorage.setItem("_notification_" + a.tag, true)
	}
	if (Notification && Notification.permission === "granted") {
		var e = new Notification(a.title, {
			body: a.body,
			tag: a.tag,
			icon: "/static/images/favicon.ico"
		});
		e.onclick = a.onclick
	} else if (Notification && ["default", "denied"].indexOf(Notification.permission) > -1) {
		Notification.requestPermission(function (e) {
			if (Notification.permission !== e) {
				Notification.permission = e
			}
			if (e == "granted") {
				var t = new Notification(a.title, {
					body: a.body,
					tag: a.tag,
					icon: "/static/images/favicon.ico"
				});
				t.onclick = a.onclick
			}
		})
	}
}
var uploadFile = function (t) {
	var e = function (e) {
		var t = 0,
			a = 1024;
		while (e >= a || -e >= a) {
			e /= a;
			t++
		}
		return (t ? e.toFixed(1) + " " : e) + " KMGTPEZY"[t] + "B"
	};
	if (t.file == undefined) return;
	if (t.file.size > t.max_file_size) {
		alert("允许上传的最大文件为： " + e(t.max_file_size));
		return
	}
	var a = t.error || Buff.toast;
	var i = new XMLHttpRequest;
	i.open("POST", t.upload_url);
	i.upload.onprogress = t.onprogress;
	i.onload = function () {
		switch (i.status) {
			case 200:
				var e = JSON.parse(i.responseText);
				t.callback(e);
				break;
			case 400:
				if (i.responseText == "File Size Invalid") {
					a("悲剧，您上传的文件超过5M了！！")
				} else if (i.responseText == "File Type Invalid") {
					a("矮油，只能上传图片哦！！")
				} else if (i.responseText == "Require Upload File") {
					a("没有选中图片呀！")
				} else {
					a("这不科学，上传出现了意想不到的错误，赶紧联系管理员！！")
				}
				break;
			default:
				a("这不科学，上传出现了意想不到的错误，赶紧联系管理员！！")
		}
	};
	i.onerror = function () {
		a("网络异常，请稍后重试！")
	};
	i.setRequestHeader("Authorization", t.token);
	i.send(t.file)
};

function getDeviceOS() {
	var e = navigator.userAgent || navigator.vendor || window.opera;
	if (/android/i.test(e)) {
		return "android"
	}
	if (/iPad|iPhone|iPod/i.test(e) && !window.MSStream) {
		return "ios"
	}
	return "web"
}
var formatChartData = function (e) {
	var t = undefined;
	var a = undefined;
	var i = [],
		n = [];
	var r = [];
	var o = 0,
		s = 1;
	var c = null;
	$.each(e, function (e, t) {
		var a = t[1],
			i = t[0];
		if (a == null) {
			return
		}
		r.push(a);
		n.push({
			x: moment(i).format("YYYY-MM-DD HH:mm:ss"),
			y: a
		})
	});
	if (e.length > 0) {
		t = parseInt(moment(e[0][0]).startOf("day").format("x"));
		if (t < e[0][0]) {
			t += 864e5
		}
		a = parseInt(moment(e[e.length - 1][0]).startOf("day").format("x"));
		var _ = (a - t) / 10;
		_ = Math.ceil(_ / 864e5) * 864e5;
		if (_ > 0) {
			for (var l = t; l <= a; l += _) {
				i.push(moment(l).format("YYYY-MM-DD HH:mm:ss"))
			}
		}
		if (i.length == 0) {
			t = e[0][0];
			i.push(moment(e[0][0]).format("YYYY-MM-DD HH:mm:ss"))
		}
	}
	if (r.length) {
		o = Math.min.apply(null, r) || 0;
		s = Math.max.apply(null, r) || 1
	}
	if (e.length) {
		c = moment(e[e.length - 1][0]).format("YYYY/MM/DD HH:mm:ss")
	}
	o = o * .98;
	s = s * 1.03;
	return {
		maxTime: c,
		minLabel: t,
		min: o,
		max: s,
		labels: i,
		datasets: n
	}
};
var PriceHistoryChart = function (i) {
	var e = document.getElementById("myChart");
	e.width = 1e3;
	e.height = 500;
	var t = formatChartData(i.price_history);
	var a = {
		labels: t.labels,
		datasets: [{
			data: t.datasets,
			type: "line",
			yAxisID: "y",
			backgroundColor: "#4773C8",
			borderColor: "#4773C8",
			borderWidth: 2,
			tension: .3
		}]
	};
	var n = {
		responsive: true,
		maintainAspectRatio: false,
		borderWidth: 1,
		interaction: {
			intersect: false,
			mode: "index"
		},
		layout: {
			padding: {
				left: 50,
				right: 50,
				top: 0,
				bottom: 50
			}
		},
		elements: {
			point: {
				radius: 0,
				hitRadius: 6
			},
			line: {
				cubicInterpolationMode: "monotone"
			}
		},
		scales: {
			x: {
				type: "time",
				min: t.minLabel,
				time: {
					max: t.maxTime,
					unit: "day",
					displayFormats: {
						day: "MM-DD"
					}
				},
				ticks: {
					source: "labels"
				},
				grid: {
					drawOnChartArea: false
				}
			},
			y: {
				position: "left",
				suggestedMin: t.min,
				suggestedMax: t.max,
				ticks: {
					precision: 2,
					maxTicksLimit: 7,
					callback: function (e, t, a) {
						return i.currency_symbol + e
					}
				}
			}
		},
		plugins: {
			legend: {
				display: false
			},
			tooltip: {
				displayColors: false,
				callbacks: {
					label: function (e) {
						return i.price_type + " " + i.currency_symbol + parseFloat(e.parsed.y).toFixed(2)
					},
					title: function (e) {
						if (e.length != 0) {
							return moment(e[0].parsed.x).format("YYYY-MM-DD HH:mm:ss")
						}
					}
				},
				backgroundColor: "rgba(255,255,255,0.8)",
				titleColor: "#000",
				titleFont: {
					weight: "normal"
				},
				bodyColor: "#000",
				titleMarginBottom: 16,
				bodySpacing: 16,
				padding: 8,
				boxPadding: 4
			}
		}
	};
	var r = new Chart(e, {
		type: "line",
		data: a,
		options: n
	});
	return r
};
var callNative = function (e, t) {
	if (typeof WebViewInfo == "undefined" || !WebViewInfo.webview_from) {
		return
	}
	var t = t || {};
	if (getDeviceOS() === "android") {
		var a = JSON.stringify({
			api: e,
			params: JSON.stringify(t)
		});
		try {
			var i = buffAndroidApi;
			var n = "";
			while (n.length < 40) {
				n += ("" + Math.random()).substr(2)
			}
			if (prompt(JSON.stringify({
				api: e,
				token: n
			})) === "OK") {
				return i.call(n, a)
			}
		} catch (e) {
			if (e instanceof ReferenceError) {
				try {
					return prompt(a)
				} catch (e) {
					console.log(e)
				}
			}
		}
		return null
	} else if (getDeviceOS() === "ios") {
		try {
			window.webkit.messageHandlers[e].postMessage(JSON.stringify(t))
		} catch (e) {
			return null
		}
	} else {
		return
	}
};

function setClipboard(e) {
	var t = document.createElement("input");
	t.style = "position: absolute; left: -1000px; top: -1000px";
	t.value = e;
	document.body.appendChild(t);
	t.select();
	document.execCommand("copy");
	document.body.removeChild(t)
}

function escapeHtml(e) {
	return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;")
}
var htmlDecode = function (e) {
	var t = document.createElement("textarea");
	t.innerHTML = e;
	return t.childNodes.length === 0 ? "" : t.childNodes[0].nodeValue
};
var initCustomCurrency = function (e) {
	if (e == undefined) {
		var t = g.currency.code.toLowerCase();
		var a = document.createElement("style");
		a.innerHTML = ".hide-" + t + " {display:none;}";
		document.body.appendChild(a);
		e = document
	}
	$(e).find(".custom-currency").each(function () {
		var e = parseFloat($(this).data("price"));
		var t = $(this).data("no-symbol");
		var a = $(this).data("type");
		var i = $(this).data("original-currency");
		var n = $(this).data("filter-digits");
		$(this).replaceWith(formatPriceCustom(e, t, a, i, n))
	})
};
var initLocalTimeDisplay = function (e) {
	if (e == undefined) {
		e = document
	}
	$(e).find(".moment-ts").each(function () {
		$(this).text(moment($(this).data("ts") * 1e3).format($(this).data("fmt")))
	})
};
if (typeof Object.assign != "function") {
	Object.assign = function (e, t) {
		"use strict";
		if (e == null) {
			throw new TypeError("Cannot convert undefined or null to object")
		}
		var a = Object(e);
		for (var i = 1; i < arguments.length; i++) {
			var n = arguments[i];
			if (n != null) {
				for (var r in n) {
					if (Object.prototype.hasOwnProperty.call(n, r)) {
						a[r] = n[r]
					}
				}
			}
		}
		return a
	}
}
String.prototype.gblen = function () {
	var e = 0;
	for (var t = 0; t < this.length; t++) {
		if (this.charCodeAt(t) > 127 || this.charCodeAt(t) == 94) {
			e += 2
		} else {
			e++
		}
	}
	return e
};
String.prototype.getGblenPosition = function (e) {
	var t = 0;
	for (var a = 0; a < this.length; a++) {
		if (this.charCodeAt(a) > 127 || this.charCodeAt(a) == 94) {
			t += 2
		} else {
			t++
		}
		if (t > e) {
			return a
		}
	}
	return this.length - 1
};

function wxPayUpdateRemainTime(e) {
	var t = 0,
		a = 0;
	if (e > 0) {
		t = Math.floor(e / 60);
		a = e % 60
	}
	var i = t + i18n("minutes") + a + i18n("seconds");
	$("#pay-remain-time").text(i)
}

function wxPayShowQrcode(e, t, a, i) {
	$("#j_popup_wx").remove();
	var n = template_render("wx_pay_pat", {
		price: e
	});
	$("body").append(n);
	$("#wx-pay-qrcode").html("");
	new QRCode(document.getElementById("wx-pay-qrcode"), {
		text: t,
		width: 140,
		height: 140
	});
	$("#wx-pay-qrcode").attr("title", "");
	wxPayUpdateRemainTime(a);
	$("#j_popup_wx .popup-close").click(function () {
		Popup.hide();
		if ($("#j_popup_wx").hasClass("expired")) {
			return
		}
		if (i) i()
	});
	Popup.hide();
	Popup.show("j_popup_wx")
}

function payWaitResult(e, t, a, i) {
	var n = a;
	var r = false;
	var o = undefined;
	var s = $.Deferred();
	s.done(function () {
		r = true;
		clearInterval(o);
		o = undefined;
		Popup.hide();
		$("#loading-cover").hide()
	});
	s.fail(function () {
		r = true;
		clearInterval(o);
		o = undefined;
		Popup.hide();
		$("#loading-cover").hide();
		Buff.alert({
			title: i18n("prompt"),
			message: i18n("pay_failed"),
			hideCancel: true,
			success: function () {
				window.location.reload()
			}
		})
	});
	s.progress(function () {
		r = true
	});
	var c = 0;
	o = setInterval(function () {
		c += 1;
		if (c == 1 || c <= n && r) {
			r = false;
			i(e, s)
		} else if (c > n) {
			clearInterval(o);
			o = undefined;
			if (t == BuffConfig.PayMethod.WX_PAGE) {
				$("#j_popup_wx").addClass("expired");
				$("#j_popup_wx .popup-cont.paying").hide();
				$("#j_popup_wx .popup-cont.expired").show()
			} else {
				Popup.hide();
				$("#loading-cover").hide();
				Buff.alert({
					title: i18n("payment"),
					message: i18n("payment_system_is_busy_please"),
					hideCancel: true,
					success: function () {
						window.location.reload()
					}
				})
			}
		}
		if (t == BuffConfig.PayMethod.WX_PAGE) {
			wxPayUpdateRemainTime(Math.max(n - c, 0))
		}
	}, 1e3)
}
var padLeft = function (e, t) {
	e = parseInt(e);
	var a = ("" + e).length;
	e = (a < t ? "0" : "") + e;
	return e
};
var convertTime = function (e) {
	var t = Math.floor(e / 3600);
	var a = Math.floor(e % 3600 / 60);
	var i = e % 3600 % 60;
	return t == "00" ? padLeft(a, 2) + ":" + padLeft(i, 2) : padLeft(t, 2) + ":" + padLeft(a, 2) + ":" + padLeft(i, 2)
};
var getRecordDefaultTimeRange = function () {
	const e = moment().add(1, "days").startOf("day");
	const t = e.clone().subtract(1, "years");
	return {
		start_time: Math.floor(t.valueOf() / 1e3),
		end_time: Math.floor(e.valueOf() / 1e3)
	}
};
var getTimestampForDate = function (e, t) {
	var a = moment(e).startOf("day");
	if (t) {
		var a = moment(e).endOf("day")
	}
	const i = Math.floor(a.valueOf() / 1e3);
	return i
};
var getDatepickerTimestampRange = function (e) {
	var t = e.attr("value");
	var a = {};
	if (!t) {
		return a
	} else {
		var i = t.split("~");
		var n = i[0];
		var r = i[1];
		a["start_time"] = getTimestampForDate(n);
		a["end_time"] = getTimestampForDate(r, true)
	}
	return a
};
var renderTimeRangeTips = function (e, t, a) {
	if ($(".nodata").is(":visible")) {
		$("#record_timerange_tip").html("");
		$("#record_timerange_tip_blank").hide();
		return
	}
	var i = $("#j_select_log_time_range").attr("value");
	if (!i) {
		if (t) {
			var n = i18n(t)
		} else {
			var n = i18n("record_timerange_tip")
		}
	} else {
		var r = i.split("~");
		var o = r[0];
		var s = r[1];
		var o = o.split(" ")[0];
		var s = s.split(" ")[0];
		if (a) {
			var n = i18n(a)
		} else {
			var n = i18n("record_timerange_tip_with_time_filters", {
				start_time: o,
				end_time: s
			})
		}
	}
	if (!e.html()) {
		$("#record_timerange_tip").html(n)
	} else {
		if (e.find("li:last-child").hasClass("disabled")) {
			$("#record_timerange_tip").html(n)
		} else {
			$("#record_timerange_tip").html("")
		}
	}
	if ($("#record_timerange_tip").html()) {
		$("#record_timerange_tip_blank").show()
	} else {
		$("#record_timerange_tip_blank").hide()
	}
};
var OriginConst = function () {
	return {
		SELLING: "selling-list",
		MY_SELLING: "my-selling",
		TOP_BOOKMARK: "top-bookmark",
		STORE: "store",
		INVENTORY: "inventory",
		BOOKMARK_ORDER: "bookmark-order",
		BARGAIN_CHAT: "bargain_chat",
		SELECTOR_MAP: {
			"selling-list": "tr.selling",
			"my-selling": "li.my_selling",
			"top-bookmark": "li.top_bookmark",
			store: "li.my_shop_selling",
			inventory: "li.my_inventory",
			"bookmark-order": "tr.bookmark_order",
			bargain_chat: "div.bargain_chat"
		},
		PARENT_SELECTOR_MAP: {
			store: "#j_list_card",
			"selling-list": "#market-selling-list",
			"my-selling": "#j_list_card",
			"top-bookmark": "#j_market_card",
			inventory: "#j_list_card",
			"bookmark-order": "#bookmark_sell_order_list",
			bargain_chat: "#bargain_chat_item"
		}
	}
}();
var getOrigin = function (e) {
	var t = e ? e.slice(e.indexOf("?") + 1) : "";
	return t ? getParams(t).origin || OriginConst.SELLING : OriginConst.SELLING
};
i18nData.updateData("en", {
	"1_seconds": "1 second",
	_piece_of_goods_has: "items fail because it has already been purchased",
	_piece_of_goods_off: "items succeed",
	a_period_of_time_: "a period of time: ",
	a_picture_is_not_uploaded: "Some images have not been uploaded successfully",
	a_successful_purchase: "Succeeded",
	access_to_the_steam_encounters: "Got a problem with Steam?",
	account_can_be_withdraw_the: "Unable to withdraw, insufficient balance in the BUFF Balance-Other",
	acknowledgment_is_bound_to_the: "Are you sure to bind to this Steam account?\nSteam nickname：",
	acquisition_fee_failed_please_try: "Failed to get the fee, please try again later",
	add_a_description: "Add a description",
	add_description: "Add a description",
	add_in_5_minutes_to: "Please send offer in BUFF APP within 5 minutes.",
	add_in_the_buyers_payment: " Please deliver within 12 hours after the buyer pays, otherwise the item will be removed from sale and your selling function will be banned.",
	add_the_other_card: "Add another bank card",
	all: "All",
	already_have_an_account_click: "Click here to login",
	analysis: "Inspecting",
	analysis_figure: "Screenshot",
	api_key_format_error: "API key format error",
	api_key_successfully_set: "Success",
	application_authentication_failure_please_contact: "Verification failed, please contact support",
	artificial_assist: "Contact Support",
	authentication: "Verification",
	back_for_refresh: "Back for refresh",
	backpack_capacity_is_insufficient_can: "The backpack has insufficient capacity to continue buying",
	bargain_price_must_be_lower: "The bargain price must be lower than the sale price",
	being_prepaid_in: "Topping up",
	beware_of_phishing_scams_please: "Beware of scams, please check if the API key was created? If it was maliciously created, please delete it and change Steam password immediately.",
	binding_acknowledgment: "Confirm",
	binding_steam: "Bind Steam",
	binding_steam_before_you_can: "Connect your steam account to enjoy buff.",
	binding_transaction_link_the_immediate: "Set your steam trade url to begin trading on BUFF",
	bound_to_fail: "Failure",
	buff_backpack_capacity_is_insufficient: "BUFF backpack has insufficient capacity and has been adjusted to buy the maximum quantity",
	buy_price_cannot_be_less: "The purchase price cannot be less than ￥0.01",
	buy_pubgrecycled_transactionitems_not_get: "PUBG items are not withdrawable",
	buy_success: "Success",
	buying_in_bulk_quantity_can: "The number of bulk buy cannot exceed",
	buying_in_bulk_results: "Result",
	can_not_supply_your_own: "Can't supply the items you purchase",
	cancel: "Cancel",
	cancel_buying_success: "Success",
	cancel_delivery_success: "Success",
	cancel_recommend: "Cancel recommend",
	cancel_the_shipment: "Cancel deliver",
	cannot_be_resolved_the_goods: "Unable to inspect, the item has been sold or the network is bad",
	cannot_purchase_your_own_items: "Can't buy your own items",
	card_limit_is_reached: "Bank card reaches the upper limit",
	cardsp: "bank cards",
	century: "Century",
	change_price_of_failure: "Failure",
	clear_the_api_key_after: "After clearing the API key, your store will be offline and items will not be bought. Are you sure you want to clear?",
	click_on_upload_picture: "Click to upload image",
	click_to_collapse: "Collapse",
	click_to_expand: "Expand",
	close_failed_please_try_again: "Fail to close, try again",
	complete: "Complete",
	confirm: "Confirm",
	confirm_and_opened: "Open",
	confirm_clear: "Clear",
	confirm_leave: "Leave",
	confirm_to_cancel_the_transaction: "Confirm",
	confirmation_of_payment: "Confirm",
	"congratulations_to_you!_welcome_to": "Welcome to BUFF, you can start trading now!",
	consignment_goods_shelf_will_be: "The consignment items will be returned to your BUFF backpack after they are removed.",
	content_length_can_not_be: "Content length cannot be greater than 1024 characters",
	continue_to_pay: "Continue to pay",
	counteroffer_price_cannot_be_lower: "The bargain price must be higher than the minimum bid price",
	counteroffer_request_has_been_sent: "Bargain request has been sent",
	create_a_package_of_trading: "Success",
	create_buying_success: "Success",
	csgo_deposit_notice: 'Due to changes in the trade rules of CS:GO/DOTA2, the items wiil be available for trade again after 7 days.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO/DOTA2交易机制改动</a>',
	currently_does_not_support_the: "The card number is not supported currently. Please change the card.",
	currently_have_to_wait_for: "There is still a feedback waiting for replying. If you still need feedback, please go to supplementary.",
	day: "day",
	days: "days",
	delete_confirmation: "Confirmation",
	delete_failed: "Failure",
	delivery_prompt: "Notification",
	delivery_timeout: "Delivery timeout",
	deposit_backpack: "Deposit",
	deposit_failed: "Failure",
	description: "Description",
	detect_fail_try_later: "Detection failed, please try again later",
	detected_you_are_using_steam: "You just logged in with Steam. In order to protect your account safety, we need to verify your mobile number.",
	detected_you_are_using_sms: "In order to protect your account safety, we need to verify your Steam.",
	detection_failed_please_try_again: "Detection failed, please try again later",
	detects_network_anomalies_please_try: "Network error, please try again later",
	detects_that_you_are_also: "You have not yet bound Steam, please bind first.",
	determine_the_selected_accessories_to: "Are you sure to unlist the selected items?",
	determined_to_be_removed_from: "Are you sure you want to cancel your collection?",
	do_not_exceed_24_characters: "Do not exceed 24 characters",
	edit_description: "Edit description",
	edit_the_description: "Edit description",
	enter_the_verification_code: "Enter the code",
	error_code: "Error code:",
	failure_to_modify: "Failure",
	feedback_success: "Success",
	for_the_protection_of_your: "In order to protect your account safety, we need to verify the Steam account bound to this account.",
	fraud_notice: "Beware of scams, please check if the API key was created? If it was maliciously created, please delete and change Steam password immediately.",
	listing_instructions_title: "Listing instructions",
	listing_instructions_message: " has a stacking situation, you can only list one of them. You can only continue to list the other parts after completing the transaction or removing it from the selling list.",
	listing_instructions_confirm: "Continue to list",
	deposit_instructions_title: "Deposit instructions",
	deposit_instructions_message: " has a stacking situation, so it will be treated as one item only when it is deposited into the BUFF backpack. Please set the quantity to 1 when depositing.",
	deposit_instructions_confirm: "Deposit",
	get_in: "Get in...",
	get_steam_trading_link: "Get trade url",
	get_the_package_deal_failed: "Failure",
	get_the_verification_code: "Get code",
	go_to_bind: "Bind",
	go_to_bind_card: "Bind",
	go_to_check: "Check",
	go_to_market: "View market",
	go_to_set: "Set",
	go_to_settings: "Set",
	go_to_verify: "Verify",
	go_to_view: "View",
	greater_than_the_extraction_amount: "Greater than the amount available",
	has_been_sent: "Has been sent",
	has_been_used: "Has been used",
	hour: "hour",
	hours: "hours",
	i_first_look_at_the: "Have a look",
	i_know: "I know",
	i_think_again: "Think again",
	id_card_number_errors_please: "The ID number is wrong, please re-enter",
	id_number_can_not_be: "ID number cannot be empty",
	in_order_to_your_funds: "For your account safety, please fill in the following information",
	input_content_too_long_to_40_words: "The input is too long, please less than 40 words",
	instrongmy_counterofferstrongattention_counteroffer_status_the: 'After the seller accepts the bargain and send offer, you need go to <strong>Buy History</strong> to accept the offer. or the <strong class="c_Yellow">2%</strong> bargain amount will be deducted to the seller as a compensation.',
	is_being_processed_you_can: "Being processed, you can check the latest progress in withdrawal records.",
	is_being_uploaded: "Uploading...",
	it_detects_your_steam_account: "Your steam account looks good to trade.",
	it_is_determined_to_cancel: "Are you sure to cancel the delivery?",
	items_on_the_shelves_successful: "Success",
	jewelry: "item",
	less_than: "less than",
	login: "Login",
	member: "piece",
	pluar_s: "s",
	minimum_price_can_not_be: "The min price can't be higher than the max price",
	minimum_value_can_not_be: "The min value cannot be higher than the max value",
	minute: " minute ",
	minutes: " minutes ",
	modify_the_price: "Change price",
	modify_the_success: "Success",
	nickname_modify_too_frequently_notice: "Change too often, please change after {{time}}",
	need_to_first_agree_to: "Agree to the payment agreement first",
	network_error: "Network error, please try again later",
	network_request_failed: "Network request failed",
	next_page: "Next page",
	no_available_items: "No available items",
	no_longer_prompt: "Do not remind again",
	no_meet_the_requirements_of: "No items meet the requirement",
	no_related: "No related items",
	not_found_to_contain_the: "Search result is empty",
	not_my_phone_number_please: "Not my phone number? please",
	not_support_credit_card: "Credit card is not supported",
	number: "Number：",
	quantity: "Quantity：",
	buff_the_sale_price: "Sale prices",
	buff_sale_min_price: "Listing prices",
	buff_sale_price: "Sale price",
	buff_sale_num: "Quantity",
	of_buying_ityuan: "purchase？￥",
	off_the_shelves_results: "Result",
	ok: "OK",
	on_frame_failure: "Failure",
	out_collection: "Cancel collection",
	package_deal: "Package trade",
	packaged_transaction_within_the_test: "This function is not available.",
	page_size: "Number per page",
	page_temporarily_does_not_support: "The webpage does not support bulk buy. Please go to BUFF APP.",
	pattern_template: "Paint seed",
	pay_failed: "Payment failed",
	payment: "Paying",
	payment_system_is_busy_please: "The payment system is busy, please check the payment result in Buy History.",
	piece_of_goods: "items",
	piece_of_goods_please_go: "Please check in Buy History",
	please_agree_to_the_service: "Please agree to the service agreement first.",
	please_be_patient: "please wait patiently",
	please_choose_to_be_a: "Please choose items",
	please_choose_to_be_on: "Please choose items",
	please_do_the_safety_confirmation: "Please confirm the security and enter",
	please_enter: "Please enter ",
	please_enter_image_verification_code: "Please enter image verification code",
	please_enter_or_select_the: "Please enter or select a top up amount\\n",
	please_enter_pricing: "Please enter price",
	please_enter_the_account_password: "Enter password",
	please_enter_the_auto_logoff: "Please enter the auto offline time",
	please_enter_the_correct_invite: "Please enter the correct invitation code",
	please_enter_the_netease_mobile: "Enter mobile number",
	please_enter_the_question_content: "Please enter feedback content",
	please_enter_the_redemption_code: "Please enter the code",
	please_enter_the_registered_phone: "Please enter mobile phone",
	please_enter_the_sms_verification: "Enter code",
	please_enter_the_verification_code: "Enter code",
	please_enter_your_steam_trade: "Enter trade url",
	please_fill_out_the_trading: "Please fill in the trade url",
	please_get_a_sms_verification: "Please get the code first",
	please_get_a_verification_code: "Please get the code first",
	please_go_to_buff_the: "Success, please send offer in App within 30 mins",
	please_go_to_my_sell: "Please deliver in My Sale",
	please_go_to_send_offer: "Click Confirm to create the offer.",
	please_in_the_backpack_view: "Please check in backpack",
	please_input_01000_between_the: "Please enter a paint seed between 0-1000",
	please_input_the_correct_mailbox: "please enter your valid email",
	please_modify_the_nickname: "Please change your nickname",
	please_select_deposit_item: "Please choose items",
	please_select_from_the_available: "Please select an available coupon",
	please_select_item: "Please choose items",
	"please_select_recharge_way\\n": "Please select the top up method\\n",
	please_select_the_bank_account: "Please select bank account",
	"please_select_the_card\\n": "Please select bank card\\n",
	please_select_the_you_want: "Please choose items",
	please_select_to_ship_the: "Please choose items",
	please_tick_the_below_statement: "Please tick the statement below",
	please_upload_picture: "Please upload an image",
	please_wait: "Please wait...",
	please_wait_for_seller_to: "Please wait for the seller to send offer and accept it",
	please_wait_for_the_seller: "Please wait for seller to send offer. After that, you need to accept offer",
	please_wait_patiently_have_been: "Please be patient, have waited",
	pmost_can_only_be_bound: "Can only be bound at most",
	press_and_hold_the_slider: "Hold down the slider and drag to complete the puzzle above",
	prev_page: "Previous page",
	price_must_be_greater_than: "The price must be greater than: ",
	private_transaction_within_the_test: "This function is not available.",
	private_transactions: "Private trade",
	prompt: "Tips",
	purchase: "Buying",
	purchase_failed: "Failure",
	purchase_failure_reason_as_follows: "Failed",
	purchase_price_not_greater_than: "Purchase price cannot be greater than ",
	ranking_total_ranking: "Total rank",
	reacquire_the_print_data: "Re-acquire sticker data",
	receive_sms_verification_code: " SMS code received.",
	recharge_failed: "Failure",
	recharge_successful: "Success",
	recharge_with_cash_only_support: "Top up and withdrawal only support Debit card",
	recharge_yuan: "Top up ￥",
	recommended_use_of_the_netease: 'It is recommended to use the NetEase UU booster,<a href="/help#steam_network">查看更多解决方案</a>',
	refresh: "Refresh",
	refresh_in_the: "Refresh...",
	refreshing: "Refresh",
	register_a_new_account: "register new account",
	registration: "register",
	remember_me: "Keep me signed in for 10 days",
	reminder: "Reminder",
	replicated: "Copied",
	reply_success: "Success",
	request: "Request in",
	require_minimal_packaging_of_two: "Need to pack at least two items",
	resend: "Resend",
	retrieval_failure: "Failed to retrieve",
	retrieve_the_process_description: "Retrieve process introduction",
	reupload: "Re-upload",
	sale_amount: "Sale amount",
	sale_amount_yuan: "Sale amount: ",
	sale_number_: "Sale number: ",
	save: "Save",
	seconds: " seconds",
	select_to_change_the_price: "Please choose items",
	select_to_retrieve_the_goods: "Please choose items",
	select_up_to_200_pieces: "Choose up to 200 items",
	send_a_verification_code_failed: "Send verification code failed",
	sent_successfully_please_note_the: "Successfully sent",
	set_success: "Success",
	set_the_boot: "Guide",
	set_to_fail: "Failure",
	set_up_steam_trade_url: "Set Steam trade url",
	set_up_trading_links: "Set trade url",
	settings_failed_please_try_again: "Failure",
	shelve_failed: "Failure",
	shelve_notice: "Please deliver within 12 hours after the buyer pays, otherwise the item will be removed from list and your selling function will be banned.",
	shelve_success: "Success",
	shelves_successful: "Success",
	since_the_csgo_official_trading: 'Due to changes in the official trade rules of CS:GO, the items will not be retrieved within 7 days after depositing.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO交易机制改动</a>',
	skip_maybe_next_time: "Skip",
	sold_number_of_pieces: "Sale number",
	steam_trade_limit: "Your Steam account cannot trade at the moment. Please check steam help.",
	successful_supply: "Success",
	successful_upload: "Success",
	successfully_submitted: "Success",
	supply_failure: "Failure",
	supply_success: "Success",
	sure_you_want_to_delete: "Are you sure you want to delete this card??",
	system_busy_error: "The system is busy, please try again later",
	termination_buying: "Cancel purchase",
	timeout: "Timeout",
	the_account_can_be_withdrawal: "Unable to withdraw, insufficient balance in the BUFF Balance-Other",
	the_amount_of_recharge_need: "The amount needs to be a number",
	the_authentication_is_successful: "Success",
	the_bank_card_number_can: "Bank card number cannot be empty",
	the_bank_card_number_errors: "Bank card number is wrong, please re-enter",
	the_binding_is_successful: "Success",
	the_content_of_the_input: "The input is too long, please less than 40 words",
	the_current_balance_of_dollar: ", current balance ￥",
	the_current_page_is_no: "No items",
	the_degree_of_wear_get: "Acquiring...",
	the_goods_can_not_a: "The item cannot be priced automatically , please enter it",
	the_goods_is_not_buying: "This item is not available for purchase.",
	the_lack_of_balance: "Insufficient balance",
	the_maximum_allowable_amount_of: "The maximum allowable top up amount is",
	the_minimum_allowable_amount_of: "The minimum allowable top up amount is",
	the_modified_price_of_success: "Success",
	the_payment_is_successful: "Success",
	the_phone_number_cannot_be: "Phone number can not be empty",
	the_phone_number_has_been: "Has the phone number been changed? please",
	the_steam_account_has_been: "Has the Steam been changed? please ",
	the_phone_number_is_incorrect: "The phone number is wrong, please re-enter",
	the_phone_receives_the_verification: "Verification code received",
	the_picture_is_being_resolved: "Inspecting, please click to view later",
	the_price_can_not_be: "The price cannot be greater than: ",
	the_purchase_amount_can_not: "The quantity of bulk buy cannot exceed the quantity in sale that meet the conditions.",
	the_quote_failed_to_send: "Failure: ",
	the_real_name_can_not: "Real name can not be empty",
	the_recommended_bit_is_already: "Recommended position is full",
	the_set_of_recommended_items: "Recommend",
	the_shelves: "Unlist",
	the_shelves_after_the_goods: "Are you sure to unlist the selected items?",
	the_system_is_busy: "The system is busy",
	the_system_is_busy_please: "The system is busy, please check in buy history",
	the_system_is_busy_you: "The system is busy, you can check the latest progress of the recharge in the recharge record.",
	the_system_is_busyplease_try: "The system is busy, please try again later",
	the_system_supports_the_maximum: "The system supports a maximum of 64 characters.",
	the_validation_is_successful: "Success",
	the_verification_code_is_incorrect: "Incorrect verification code",
	there_goods_is_not_input: "There are items not priced",
	tied_the_card_fails_please: "Failed. Please confirm that the information you entered is correct.",
	to_bind: "Bind",
	to_check: "Check",
	to_guarantee_your_safety_of: "Enter your mobile number",
	to_obtain_the_dynamic_code: "Failure",
	to_receive_the_success: "Success",
	to_shipping: "Deliver",
	to_steam: "Connect Steam",
	trade_url_setting_successful: "Success",
	trading_link_format_error: "Trade url format error",
	unbound_steam: "Unbound Steam",
	unbound_steam_notice: "You have not yet bound Steam, please bind first.",
	unbound_steam_trading_link_whether: "Unbound Steam trade url, please set first?",
	undelivered_notice: "Since you failed to deliver it last time, you will not be able to sell within {{hours}} hours {{minutes}} minutes.",
	unset_price_item: "There are items not priced",
	up_to_200_items: "Choose up to 200 items",
	"upload_success!_your_players_show": "Uploaded successfully! Your skins show is under review",
	user_login: "Login/Register",
	user_registration: "Register",
	valuation: "Valuation：",
	verification_code_cannot_be_empty: "verification code must be filled",
	verify: "Verify",
	view_a_player_show_please: "Please log in first",
	view_history_please_login: "Please log in first",
	view_more: "View more",
	view_more_long_time_of: "To view longer-term price trend, please exchange Observer.",
	view_more_long_time_of_for_premium: "You can join BUFF Plus to see the price trend for 6 months.",
	view_more_long_time_exchange: "To exchange",
	view_my_steam_inventory: "View my Steam inventory",
	view_price_trends_please_login: "Please log in first",
	view_top_bookmarked_please_login: "Please log in first",
	view_wear_ranking_please_log: "Please log in first",
	waiting_for_payment: "wait for payment",
	whether_the_problem_has_been: "Problem resolved?",
	whether_to_terminate_the_purchase: "Whether to terminate the current progress as {{progress}}?\n {{refund_desc}}",
	withdraw_cash_price_of_dollar: "Withdraw￥",
	withdraw_the_maximum_amount_of: "The maximum amount of withdrawal is",
	withdrawal_failure: "Failure",
	withdrawal_has_been_filed: "Has applied for withdrawal",
	withdrawal_minimum_amount_is: "The minimum amount to withdraw is",
	years: "years",
	you_can_recharge_in_a: "You can check the latest progress in the top-up record.",
	you_have_new_orders_need: "You have a new order to deliver.",
	you_have_yet_to_bind: "You have not yet bound the Steam trade url, please go to set",
	you_havent_successfully_paid_the: "You have not paid successfully, the order can be paid within 3 minutes, please pay as soon as possible.",
	you_must_be_over_18: "You must be at least 18 years old to use our service.",
	your_buying_price_is_higher: "Your purchase price is higher than the sale price, you may buy items higher than the market price, confirm?",
	your_current_steam_account_cant: "Your current Steam account cannot be traded. Please check our help documentation.",
	your_mobile_phone_account_occurs: "Your mobile account has been changed. In order to protect account safety, we need to verify your mobile account.",
	urs_password_login_need_verify: "In order to protect account safety, we need to verify your mobile account.",
	your_phone_account_through_a: "Your mobile account has changed and we need to verify your bound Steam account.",
	your_steam_account_halt: "Detected that your Steam account is in trade hold",
	your_steam_account_tradable: "Your Steam account looks good to trade.",
	your_steam_acctoun_trade_limit: "Your Steam account is unable to trade",
	your_steam_trade_url_invalid: "Your trade url has expired, please fetch it from Steam",
	yuan: "Yuan",
	some_etc: "{{count}} items",
	buying_num: "{{num}} demand",
	selling_num: "{{num}} on sale",
	inspecting: "Inspecting, please try again later",
	platform_name: "BUFF163 Skins marketplace",
	slogan: "Support games like CS:GO, DOTA2, etc.",
	download: "Download",
	check_sticker_wear_in_detail: "You can check whether the stickers are scratched at the bottom of the item page, please confirm before buying",
	get_code: "Get code",
	login_with_password: "Login with password",
	login_with_sms: "Login with SMS",
	login_register: "Login/Register",
	please_agree: "Please check the agreements first.",
	gift_card_buy_success: "Success! Share the gift card redemption code with the recipient, and you can also check it in My Coupon.\nRecipient nickname: {{nickname}}\nRedemption code: {{sn}}",
	gift_card_receiver_nickname_error: "BUFF nickname does not exist",
	gift_card_receiver_info: "BUFF avatar and nickname",
	disable_sms_notification_alert: "You will no longer receive order SMS alerts after this feature is turned off, please keep an eye on the app push message and process your order promptly.",
	disable_antiscam: "System will no longer help you intercept fake offer, please be vigilant and be aware of hijack scams.",
	scratch_sticker_notice: "The seller needs to ensure that the sticker information is consistent with the inventory after listing on the market. Scraping the stickers before delivering will result in the account being banned.",
	reconfirm: "Reconfirm",
	continue_selling: "Continue",
	please_input_store_name: "Please enter the store name",
	have_not_modify_store_name: "You have not modified the store name",
	determine_use_store_name_coupon: "This rename needs to consume 1 store rename coupon, are you sure to change it?",
	please_exchange_store_name_coupon_at_app: "Please exchange store rename coupon in BUFF APP",
	must_allow_epay_or_alipay: "You must accept one of Alipay and Wechat payment",
	cms_inspect_success_title: "Inspect in server",
	cms_inspect_success_message: "Will launch your CS2 client. A 10-min inspection time is offered during the beta test.\n\nPlease ensure you are using the BUFF-bound Steam account to launch CS2, or the launch will fail.",
	buy_order_min_price: "Not less than {{min_price}}",
	premium_buy_success: "Purchase Premium Successfully",
	premium_buy_fail: "Purchase failed, please try again later",
	premium_will_expire_content: "Your membership is about to expire on {{date}}. You will lost your membership benefits such as Exclusive Identifier, Inspect in Server and Extra Listing Limit.",
	premium_expired_content: "Your membership has expired on {{date}}. To update your benefits, you can renew your membership.",
	premium_expired_renew_now: "Renew now",
	premium_waiting_for_payment: "wait for payment",
	premium_havent_successfully_paid: "you have not yet paid successfully, please pay as soon as possible.",
	premium_continue_to_pay: "Continue to pay",
	premium_confirm_leave: "Leave",
	user_asset_admin_frozen_notification: "Some balances have been frozen due to abnormal operation of the account, please submit feedback.",
	remain_withdrawal_count_today: "Number of withdrawal remains today:",
	please_choose_coupon: "Coupon",
	not_use_coupon: "Do not use",
	expired_coupon_switch: "The coupon has expired and will be voided if replaced or cancelled.",
	no_coupon_to_use: "No coupon",
	notes: "Notes",
	notes_exceed_max_len: "Add no more than 40 characters. This is not item description and can only be seen by yourself.",
	purchased: " Purchased",
	submitted: "Submitted",
	edit_notes: "Edit Notes",
	add_notes: "Add Notes",
	notes_desc: "Notes(Private):",
	add_notes_desc: "Add Notes(Private)",
	coupon_dispense_sources_both: "You can get access to this benefit by upgrading to Plus or redeeming coupons with points in APP",
	coupon_discpense_sources_points_lottery_both: "This benefit can be gained in the points store or lottery on the APP.",
	coupon_discpense_sources_points_all: "This benefit is included in BUFF Plus or can be gained in the points store or lottery on the APP",
	coupon_dispense_sources_points: "You can get access to this benefit by redeeming coupons with points in APP",
	coupon_dispense_sources_vip: "You can get access to this benefit by upgrading to Plus",
	coupon_dispense_sources_lottery_both: "You can get access to this benefit by upgrading to Plus or gaining from the points lottery in APP",
	coupon_dispense_sources_lottery: "This benefit can be gained from the points lottery on App",
	go_to_point_lottery: "To use this feature, you will need to activate the Quantity Observer benefit which can be gained from the points lottery.",
	unuse_coupon_state: "Unused",
	used_coupon_state: "Used",
	preview_screenshots: "Preview Screenshots",
	to_view_figure: "Screenshot",
	buy_order_wx_pay_unfrozen: "Your buy order will be cancelled if not been supplied within 30 days, and the amount will be returned to your account.",
	will_be_returned_to_you_buff_b: "{{money}} will be refunded to your BUFF Balance",
	will_be_returned_to_origin: "{{money}} will be returned to your account within 30 minutes.",
	split_pay_min_amount_invalidate: "Not less than {{amount}}",
	split_pay_max_amount_invalidate: "Not higher than {{amount}}",
	split_pay_cancel_order_title: "Cancel purchase",
	split_pay_cancel_order_content: "Cancel the purchase? Please do not pay again after cancellation.",
	split_pay_continue_to_pay: "Not now",
	split_pay_confirm_leave: "Cancel purchase",
	unpaid_amount: "Unpaid amount",
	paid_success: "Paid",
	gift_card_query_title: "Notice",
	cash_detail_alipay: "Paid via Alipay",
	cash_detail_alipay_small: "(Can be used to buy items or withdraw cash to bank card)",
	cash_detail_epay: "Paid via WeChat",
	cash_detail_epay_small: "(Can be used to buy items or withdraw cash to bank card)",
	balances_detail: "Detail",
	currently_does_not_support_the_and_change: "Please select the bank manually",
	search_result: "Result",
	add_a_bank_card: "Add a Bank card",
	verify_tips: "Notice",
	verify_tips_text: "We have upgraded our wallets to help improve your asset security, please complete the verification before withdrawing.",
	withdraw_verify_tips: "Withdrawal Verification",
	withdraw_verify_tips_text: "This bank card has not completed verification, please complete the verification before withdrawing.",
	verify_now_btn_text: "Verify now",
	supply_max_limit: "Supply up to 50 items at the same time",
	sticker_copy: "Copy",
	no_field_for_more_sticker: "No field for more stickers",
	up_to_4_fixed_sticker: "Order by slot can be applied up to 4 stickers",
	no_field_for_more_patch: "No field for more patches",
	sticker_search_entry: "Applied",
	weapon_case_entry: "Weapon case",
	in_collection: "Collection",
	item_contained: "Items Contained",
	an_rare_special_item: "An exceedingly rare special item",
	balance_authorization: "Balance authorization",
	ejzb_auth_title: "This payment requires authorisation",
	auth_entry_zhima_title: "Alipay Verification",
	auth_entry_zhima_text: " ",
	auth_entry_bankcard_title: "Bank Card Verification",
	auth_entry_bankcard_text: " ",
	auth_entry_manual_title: "Manual Verification",
	auth_entry_manual_text: "Global user verification method",
	auth_entry_kyc_title: "Passport Verification",
	auth_entry_kyc_text: "Global user verification method",
	manual_cert_upload_pic: "Please upload a screenshot of the real name page of your Alipay account and ID card",
	balance_authorization_expired: "Balance authorization has expired, ",
	re_authorisation: "reset it",
	manual_cert_processing: "manual cert is processing",
	error_picture: "Upload error, please upload jpeg or png format image",
	please_upload_manual_cert: "please upload image",
	auth_success: "success",
	manual_cert_finish: "success",
	request_in_queue: "The system is busy, please try again later",
	first_use_epay_balance: "Use BUFF Balance-Other first",
	first_use_alipay_balance: "Use BUFF Balance-Alipay first",
	manual_cert_title: "Manual verification",
	manual_cert_please_upload_screenshot: "Please upload a screenshot of the real name page of your Alipay account",
	manual_cert_please_upload_passport_pic: "Please upload your ID card",
	manual_cert_submit: "Submit",
	screenshot: "Screenshot",
	copy_to_clipboard_success: "Screenshot link successfully copied to clipboard",
	on_the_frame: "Sell",
	on_sale: "On sale",
	stat_view_count_text: "{{view_count}} viewed",
	stat_bookmark_count_text: "{{bookmark_count}} watchers",
	stat_bargain_count_text: "{{bargain_count}} bargained",
	order_pay_success_partner: 'The progress of the item delivery can be checked in <a href="/market/buy_order/history?game={{game}}">Buy History</a>. The item(s) will be sent to you via in-game mail message. Please check them in time.',
	badlanders_quality_100: "Purple",
	badlanders_quality_5: "Gold",
	badlanders_quality_4: "Purple",
	badlanders_quality_3: "Blue",
	badlanders_quality_2: "Green",
	badlanders_quality_1: "White",
	refresh_success: "Success",
	recreate_buy_order_message: "You have an existing buy order for ¥{{old_price}}, do you want to replace it with a new buy order for ¥{{new_price}}?",
	recreate: "Replace",
	cancel_buy_order_and_recreate: "Existing buy order canceled. Failed to create the new one because: ",
	partial: "Partial ",
	cs2_inspect_input_share_link: "paste item sharing link here",
	cs2_inspect_success: "Inspecting, please click to view later",
	cs2_inspect_finish: "Generated, click to view.",
	cs2_inspect_delete: "Deleted",
	cs2_inspect_error: "The Item cannot be inspected",
	select_export_option: "Please select the export option",
	select_export_time: "Please select the export time range",
	export_bill_order_success: "Processing... You will be informed once completed. You can view the export on the download history.",
	select_start_time: "Select",
	select_end_time: "Select",
	datepicker_language: "en-US",
	export_time_invalid: "The end time needs to be later than the start time",
	login_steam: "Connect Steam",
	kyc_left_count: "{{n}} times left",
	verify_by_other_methods: "Verify by other methods",
	record_timerange_tip_default: " ",
	record_timerange_tip: "Display records from the past 12 months and apply filters to view more",
	record_timerange_tip_with_time_filters: "Show records only between {{start_time}} to {{end_time}}",
	record_timerange_tip_without_time_filters: "Display records from the past 12 months",
	buy_order_offline_title: "Buy order status is offline",
	buy_order_offline_message: "Your buy order status is offline. Your buy orders are hidden on the marketplace.",
	total: "Total",
	paid: "Paid",
	paymethod_description_more: "More",
	paid: "Paid",
	bundle_overview: "Bundle Overview",
	pieces: "items",
	bundle_detail: "Bundle Details",
	reference_price: "Reference Price",
	total_reference_price: "Reference Price",
	avg_price: "Average Price",
	min_asset_count: "min",
	max_asset_count: "max",
	min_paintwear: "min",
	max_paintwear: "max",
	bundle_inventory_create_order_count: "Bundles listed in quantities ranging from 2 to 200",
	bundle_pieces: "{{count}} items",
	wear: "Float:",
	in_the_game_view: "Inspect in game",
	bundle_analysis: "Inspect",
	in_cms_view: "Inspect in server",
	buy: "Buy",
	sticker_paintwear: "Sticker wear: ",
	premium_rate_tips: "(Sale price-Float range price floor)/Sticker price",
	notification: "Notification",
	post_purchase: "Place Buy Order",
	reprice_buy_order: "Reprice Buy Order",
	reprice_buy_order_successfully: "Reprice successfully",
	no_buy_quick_price: "No reference price for this item, please price it yourself.",
	reprice_buy_order_cancel_success_create_fail: "Reprice failed, and the buy order was terminated. Please recreate the buy order.",
	reason: "Reason",
	shop_state_offline_popup_title: "Store is offline",
	shop_state_offline_popup_content: "Your store is offline, your listing items will not be visible to others. Please go to store settings to set it.",
	free_bargain_chat_count_used_out: "Out of free messages today. Spend {{points_count}} points to message.",
	wearcategory0_csgo_short: "FN",
	wearcategory1_csgo_short: "MW",
	wearcategory2_csgo_short: "FT",
	wearcategory3_csgo_short: "WW",
	wearcategory4_csgo_short: "BS",
	wearcategoryna_csgo_short: "NP",
	ancient_csgo_short: "Extr",
	ancient_character_csgo_short: "Mas",
	ancient_weapon_csgo_short: "Cove",
	common_csgo_short: "BG",
	common_weapon_csgo_short: "CG",
	contraband_csgo_short: "Cont",
	legendary_csgo_short: "Exot",
	legendary_character_csgo_short: "Extr",
	legendary_weapon_csgo_short: "Clas",
	mythical_csgo_short: "Rema",
	mythical_character_csgo_short: "Rema",
	mythical_weapon_csgo_short: "Rest",
	rare_csgo_short: "HG",
	rare_character_csgo_short: "HG",
	rare_weapon_csgo_short: "MSG",
	uncommon_weapon_csgo_short: "IG",
	tournament_csgo_short: "Souv",
	strange_csgo_short: "ST",
	unusual_strange_csgo_short: "★ST",
	temporarily_unable_to_cancel: "Temporarily unable to cancel",
	to_cancel_a_counteroffer: "Cancel",
	you_counteroffer_after_1_hour_: "After 30 minutes of bargain, you can cancel it.",
	whether_to_cancel_the_jewelry_: "Cancel the bargain? ",
	i_think_again: "Not now",
	will_be_returned_to_origin: " will be refunded",
	will_be_returned_to_you_buff_b: " will be refunded to your BUFF Balance",
	to_cancel_the_counteroffer_suc: "Success",
	please_input_price: "Please input price",
	min_input_price: "Lowest price: {{min_price}}",
	max_input_price: "Highest price: {{max_price}}",
	confirm_reject_the_buyers_coun: "Are you sure you want to refuse the buyer's bargain?",
	the_ornaments_no_longer_accept: "The item no longer accepts bargain",
	"refused_to_counter-offer_succe": "Success",
	accept_the_counteroffer: "Accept",
	"accept_the_counter-offer_the_j": "After accepting the bargain, the item will be sold to the buyer at bargain price, and the remaining bargains will be automatically canceled.",
	sale_success: "Success",
	a_counteroffer_has_been_accept: "Accepted",
	accept_bargain_notice: 'Please deliver within <strong class="c_Yellow">{{count}} hours </strong>, and overdue orders will fail',
	accept_bargain_plus_notice: 'Please send offer in <strong>BUFF APP</strong> within <strong class="c_Yellow">{{count}} hours</strong>, and overdue orders will fail',
	close_chat_tips: "Buyer cannot message about the item for 72h after closing.",
	forbid_chat_tips: "The item cannot recevive messages from buyers after closing.",
	allow_chat_tips: "Enable bargaining message",
	price_max_float_limit: "Price support up to two decimal places",
	input_price_greater_than_price: "Must be less than the sale price",
	no_message_tips: "Chat will be closed if there are no new message within 24 hours.",
	clost_chat_toast: "This item has closed bargaining messages.",
	allow_chat_toast: "This item has opened bargaining messages.",
	please_select_weapon_type: "Please select Type",
	please_select_weapon_name: "Please select Weapon",
	please_select_weapon_name_and_type: "Please select Type and Weapon",
	please_select_weapon_and_skin: "Please select Weapon and Skin",
	please_select_paint_seed: "Please select Paint Seed",
	add_sticker: "Sticker",
	not_support_slot: "That slot is not supported",
	copy: "Copy",
	copy_success: "Copied",
	select_name: "Select weapon",
	to_market: "Market"
});
i18nData.updateData("tw", {});
i18nData.updateData("es", {
	"1_seconds": "1 segundo",
	_piece_of_goods_has: "Se produjo un error, el artículo ya fue comprado",
	_piece_of_goods_off: "artículos exitosos",
	a_period_of_time_: "un periodo de tiempo: ",
	a_picture_is_not_uploaded: "Algunas imágenes no se subieron con éxito",
	a_successful_purchase: "Exitoso",
	access_to_the_steam_encounters: "¿Tiene algún problema con Steam?",
	account_can_be_withdraw_the: "No se puede retirar, saldo insuficiente en Saldo de BUFF - Otro",
	acknowledgment_is_bound_to_the: "¿Seguro que quiere de vincular esta cuenta de Steam?\nNombre de Steam:",
	acquisition_fee_failed_please_try: "Error al obtener la tasa. Por favor, inténtelo de nuevo más tarde",
	add_a_bank_card: "Añadir tarjeta bancaria",
	add_a_description: "Añadir una descripción",
	add_description: "Añadir una descripción",
	add_in_5_minutes_to: "Por favor, envíe la oferta en la app de BUFF en un plazo de 5 minutos.",
	add_in_the_buyers_payment: "Por favor, envíe en un plazo de 12 horas después de que el comprador pague, si no, se cancelará la venta del artículo y su función de venta será suspendida.",
	add_notes: "Añadir notas",
	add_the_other_card: "Añadir otra tarjeta bancaria",
	all: "Todo",
	already_have_an_account_click: "Pulse aquí para iniciar sesión",
	analysis: "Inspeccionando",
	analysis_figure: "Pantallazo",
	api_key_format_error: "Error en la clave API",
	api_key_successfully_set: "Exitoso",
	application_authentication_failure_please_contact: "Verificación fallida. Por favor, contacte con asistencia",
	artificial_assist: "Contactar con la asistencia",
	auth_entry_bankcard_text: "Retirar a tarjeta bancaria del mismo nombre",
	auth_entry_bankcard_title: "Verificación de nombre real",
	auth_entry_manual_text: "Retirada no disponible, requiere mucho tiempo",
	auth_entry_manual_title: "Verificación manual",
	auth_entry_zhima_text: "Retirar a tarjeta bancaria del mismo nombre",
	auth_entry_zhima_title: "Verificar por Alipay",
	auth_success: "Exitoso",
	authentication: "Verificación",
	back_for_refresh: "Atrás para actualizar",
	backpack_capacity_is_insufficient_can: "La capacidad de la mochila es insuficiente para la compra",
	balance_authorization: "Autorización de saldo",
	balance_authorization_expired: "Autorización de saldo caducada ",
	balances_detail: "Detalles",
	bargain_price_must_be_lower: "El precio de la contraoferta debe ser inferior al precio de venta",
	being_prepaid_in: "Recargar",
	beware_of_phishing_scams_please: "Cuidado con los fraudes. Por favor, compruebe si su clave API ya fue creada Si se creó de forma maliciosa, por favor, elimínela y cambie su contraseña de Steam inmediatamente.",
	binding_acknowledgment: "Confirmar",
	binding_steam: "Conectar la cuenta de Steam",
	binding_steam_before_you_can: "Conecte su cuenta de Steam para disfrutar de BUFF.",
	binding_transaction_link_the_immediate: "Establezca su URL de intercambio de Steam para empezar a intercambiar en BUFF",
	bound_to_fail: "Error",
	buff_backpack_capacity_is_insufficient: "Espacio en la mochila insuficiente, se ajustó la cantidad máxima que puede usted comprar",
	buy_order_min_price: "No menos de {{min_price}}",
	buy_order_wx_pay_unfrozen: "Su solicitud de compra será cancelada si no se hace el suministro en un plazo de 30 días, y la cantidad le será reembolsada en su cuenta.",
	buy_price_cannot_be_less: "El precio de compra no puede ser inferior a ￥0.01",
	buy_pubgrecycled_transactionitems_not_get: "Los artículos de PUBG no pueden retirarse",
	buy_success: "Exitoso",
	buying_in_bulk_quantity_can: "No se puede superar el número de compra por lotes",
	buying_in_bulk_results: "Resultado",
	buying_num: "{{num}} petición",
	can_not_supply_your_own: "No se pueden suministrar los artículos que compró",
	cancel: "Cancelar",
	cancel_buying_success: "Exitoso",
	cancel_delivery_success: "Exitoso",
	cancel_recommend: "Cancelar recomendación",
	cancel_the_shipment: "Cancelar envío",
	cannot_be_resolved_the_goods: "No se puede inspeccionar. El artículo se vendió o la conexión a la red no es buena",
	cannot_purchase_your_own_items: "No puede comprar sus propios artículos",
	card_limit_is_reached: "La tarjeta bancaria alcanzó el límite",
	cardsp: "Tarjetas bancarias",
	cash_detail_alipay: "Pagado mediante Alipay",
	cash_detail_alipay_small: "(Pueden usarse para comprar artículos o hacer retiradas a las tarjetas bancarias)",
	cash_detail_epay: "Pagado mediante WeChat",
	cash_detail_epay_small: "(Pueden usarse para comprar artículos o hacer retiradas a las tarjetas bancarias)",
	century: "Siglo",
	change_price_of_failure: "Error",
	check_sticker_wear_in_detail: "Puede comprobar el desgaste de las calcomanías en la parte inferior de la página del artículo. Por favor, compruébelo antes de la compra",
	clear_the_api_key_after: "Cuando borre la clave API, su tienda se desconectará y los artículos no podrán comprarse. ¿Está seguro de que quiere eliminarla?",
	click_on_upload_picture: "Pulse para subir imagen",
	click_to_collapse: "Cerrar",
	click_to_expand: "Expandir",
	close_failed_please_try_again: "Error al cerrar. Reinténtelo",
	cms_inspect_success_message: "El cliente del juego CSGO se ejecutará y se conectará al servidor para inspeccionarse. No está permitido usar la función para cualquier otro fin a excepción de inspeccionar antes de comprar artículos. Durante la beta se permite realizar una inspección de 10 minutos al día. ",
	cms_inspect_success_title: "inspeccionar en servidor",
	complete: "Completar",
	confirm: "Confirmar",
	confirm_and_opened: "Abrir",
	confirm_clear: "Eliminar",
	confirm_leave: "Salir",
	confirm_to_cancel_the_transaction: "Confirmar",
	confirmation_of_payment: "Confirmar",
	"congratulations_to_you!_welcome_to": "¡Le damos la bienvenida a BUFF, ya puede empezar a intercambiar!",
	consignment_goods_shelf_will_be: "Los artículos en consignación le serán devueltos a su mochila de BUFF cuando sean eliminados.",
	content_length_can_not_be: "El contenido no puede tener más de 1024 caracteres",
	continue_selling: "Continuar",
	continue_to_pay: "Continuar para pagar",
	counteroffer_price_cannot_be_lower: "El precio de la contraoferta debe ser superior que el precio de puja mínimo",
	counteroffer_request_has_been_sent: "Se envió la solicitud de contraoferta",
	coupon_dispense_sources_both: "Puede obtener este beneficio mejorando a Plus o al canjear vales con puntos en la app",
	coupon_discpense_sources_points_lottery_both: "Este beneficio se puede obtener en la tienda de puntos o en el sorteo de la APP.",
	coupon_discpense_sources_points_all: "Este beneficio está incluido en BUFF Plus o se puede conseguir en la tienda de puntos o sorteo de la APP",
	coupon_dispense_sources_points: "Puede obtener este beneficio al canjear vales con puntos en la app",
	coupon_dispense_sources_vip: "Puede obtener este beneficio al mejorar a Plus",
	coupon_dispense_sources_lottery_both: "You can get access to this benefit by upgrading to Plus or gaining from the points lottery in APP",
	coupon_dispense_sources_lottery: "This benefit can be gained from the points lottery on App",
	go_to_point_lottery: "To use this feature, you will need to activate the Quantity Observer benefit which can be gained from the points lottery.",
	create_a_package_of_trading: "Exitoso",
	create_buying_success: "Exitoso",
	csgo_deposit_notice: 'Debido a cambios en las reglas de intercambio de CS:GO/DOTA2, los artículos estarán disponibles para intercambiarse otra vez después de 7 días.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO/DOTA2交易机制改动</a>',
	currently_does_not_support_the: "Actualmente no se admite el número de la tarjeta. Cambie la tarjeta, por favor.",
	currently_does_not_support_the_and_change: "Por favor, seleccione el banco manualmente",
	currently_have_to_wait_for: "Todavía hay un comentario esperando respuesta. Si necesita añadir más comentarios, por favor, vaya a suplementario.",
	day: "Día",
	days: "días",
	delete_confirmation: "Confirmación",
	delete_failed: "Error",
	delivery_prompt: "Notificación",
	delivery_timeout: "Envío caducado",
	deposit_backpack: "Depositar",
	deposit_failed: "Error",
	deposit_instructions_confirm: "Depositar",
	deposit_instructions_message: "Hay una situación de acumulación, así que se considerará como un único artículo cuando se deposite en la mochila de BUFF. Por favor, establezca la cantidad como 1 al depositar.",
	deposit_instructions_title: "Instrucciones para depositar",
	description: "Descripción",
	detect_fail_try_later: "Error en la detección. Por favor, inténtelo de nuevo más tarde",
	detected_you_are_using_steam: "Acaba de iniciar sesión con Steam. Necesitamos verificar su número de celular para garantizar la seguridad de su cuenta.",
	detected_you_are_using_sms: "Para proteger la seguridad de tu cuenta, necesitamos verificar tu Steam.",
	detection_failed_please_try_again: "Error en la detección. Por favor, inténtelo de nuevo más tarde",
	detects_network_anomalies_please_try: "Error de red. Por favor, reinténtelo más tarde",
	detects_that_you_are_also: "Por favor, vincule primero a Steam.",
	determine_the_selected_accessories_to: "¿Está seguro de quitar de la lista los artículos seleccionados?",
	determine_use_store_name_coupon: "Este cambio de nombre requiere consumir 1 cupón de cambio de nombre. ¿Seguro que quiere cambiarlo?",
	determined_to_be_removed_from: "¿Seguro que quiere cancelar su colección?",
	disable_antiscam: "El sistema dejará de ayudarle a interceptar ofertas falsas. Por favor, tenga cuidado con las estafas.",
	disable_sms_notification_alert: "No recibirá más alertas de pedidos por SMS si deshabilita esta función. Por favor, esté atento a las notificaciones de su celular y prepare el pedido rápidamente.",
	do_not_exceed_24_characters: "No puede tener más de 24 caracteres",
	download: "Descargar",
	edit_description: "Editar descripción",
	edit_notes: "Editar notas",
	edit_the_description: "Editar descripción",
	ejzb_auth_title: "Este pago requiere autorización",
	enter_the_verification_code: "Introduzca el código",
	error_code: "Código de error:",
	error_picture: "Error en la subida, por favor, suba imágenes en formato jpeg o png",
	expired_coupon_switch: "El vale caducó y se anulará si se cambia o se cancela.",
	failure_to_modify: "Error",
	feedback_success: "Exitoso",
	for_the_protection_of_your: "Tenemos que verificar la cuenta de Steam vinculada a esta cuenta para garantizar la seguridad de su cuenta.",
	fraud_notice: "Cuidado con los fraudes. Por favor, compruebe si su clave API ya fue creada Si se creó de forma maliciosa, por favor, elimínela y cambie su contraseña de Steam inmediatamente.",
	get_code: "Conseguir código",
	get_in: "Obteniendo",
	get_steam_trading_link: "Obtener URL de intercambio",
	get_the_package_deal_failed: "Error",
	get_the_verification_code: "Conseguir código",
	gift_card_buy_success: "¡Hecho! Comparta el código de canje de la tarjeta de regalo con el destinatario. También puede comprobarlo en Mis vales.\nNombre del recipiente: {{nickname}}\nCódigo de canje: {{sn}}",
	gift_card_query_title: "Aviso",
	gift_card_receiver_info: "Nombre y avatar de BUFF",
	gift_card_receiver_nickname_error: "El nombre de usuario de BUFF no existe",
	go_to_bind: "Vincular",
	go_to_bind_card: "Vincular",
	go_to_check: "Comprobar",
	go_to_market: "Ver tienda",
	go_to_set: "Configurar",
	go_to_settings: "Configurar",
	go_to_verify: "Ir a verificar",
	go_to_view: "Ver",
	greater_than_the_extraction_amount: "Excedido",
	has_been_sent: "Enviado",
	has_been_used: "Utilizado",
	have_not_modify_store_name: "No modificó el nombre de la tienda",
	hour: "hora",
	hours: "horas",
	i_first_look_at_the: "Echar un vistazo",
	i_know: "Entendido",
	i_think_again: "Más tarde",
	id_card_number_errors_please: "El número de ID es incorrecto. Vuelva a introducirlo, por favor",
	id_number_can_not_be: "El número de la ID no puede estar vacío",
	in_order_to_your_funds: "Por favor, introduzca los datos siguientes para garantizar la seguridad de su cuenta",
	input_content_too_long_to_40_words: "Por favor, introduzca menos de 40 palabras",
	inspecting: "Inspeccionando. Por favor, inténtelo de nuevo más tarde",
	instrongmy_counterofferstrongattention_counteroffer_status_the: 'Cuando el vendedor acepte la contraoferta y le envíe una oferta, tiene que ir a <strong>Historial de compras</strong> para aceptar la oferta, de lo contrario se le restará un <strong class="c_Yellow">2%</strong> de la contraoferta y se le enviará al vendedor como compensación.',
	is_being_processed_you_can: "Se está procesando. Puede comprobar el progreso en el historial de retiradas.",
	is_being_uploaded: "Subiendo...",
	it_detects_your_steam_account: "Su cuenta de Steam parece que puede intercambiar.",
	it_is_determined_to_cancel: "¿Seguro que quiere cancelar el envío?",
	items_on_the_shelves_successful: "Exitoso",
	jewelry: "Artículo",
	less_than: "menos de",
	listing_instructions_confirm: "Continuar para poner a la venta",
	listing_instructions_message: "Se produjo una acumulación. Solo se puede poner uno a la venta. Solo puede continuar poniendo a la venta el resto después de completar la transacción o eliminarlo de la lista de venta.",
	listing_instructions_title: "Instrucciones para poner a la venta",
	login: "Iniciar sesión",
	login_register: "Iniciar sesión/Registrarse",
	login_with_password: "Iniciar sesión con la contraseña",
	login_with_sms: "Iniciar sesión mediante SMS",
	manual_cert_finish: "Exitoso",
	manual_cert_processing: "Bajo revisión",
	manual_cert_upload_pic: "Por favor, suba una captura de pantalla de la página del nombre real de su cuenta de Alipay y de su carnet de identidad",
	member: " Artículos",
	minimum_price_can_not_be: "El precio mínimo no puede ser más alto que el precio máximo",
	minimum_value_can_not_be: "El valor mínimo no puede ser mayor que el valor máximo",
	minute: " minuto ",
	minutes: " minutos ",
	modify_the_price: "Cambiar precio",
	modify_the_success: "Exitoso",
	must_allow_epay_or_alipay: "Tiene que aceptar uno de los pagos de Alipay y WeChat",
	need_to_first_agree_to: "Acepte primero el acuerdo de pago",
	network_error: "Error de red. Por favor, reinténtelo más tarde",
	network_request_failed: "Solicitud de red fallida",
	next_page: "Siguiente",
	nickname_modify_too_frequently_notice: "Cambios con demasiada frecuencia, por favor cambie después de {{time}}",
	no_available_items: "No hay artículos disponibles",
	no_coupon_to_use: "No hay vales",
	no_field_for_more_patch: "No hay espacio para más parches",
	no_field_for_more_sticker: "No hay espacio para más calcomanías",
	up_to_4_fixed_sticker: "Al ordenar por ranura se pueden aplicar hasta 4 stickers",
	no_longer_prompt: "No volver a recordar",
	no_meet_the_requirements_of: "No hay artículos que cumplan los requisitos",
	no_related: "No hay artículos relacionados",
	not_found_to_contain_the: "La búsqueda no dio resultados",
	not_my_phone_number_please: "¿No es su número de teléfono? Por favor,",
	not_support_credit_card: "No se admite la tarjeta de crédito",
	not_use_coupon: "No utilizar",
	notes: "Notas",
	notes_desc: "Notas (privado):",
	notes_exceed_max_len: "No añada más de 40 caracteres. Esto no es una descripción de un artículo, y solo usted puede verla.",
	number: "Número:",
	buff_the_sale_price: "Transacción histórica",
	buff_sale_min_price: "cotización de precios",
	buff_sale_price: "Precio de venta",
	buff_sale_num: "Cantidad",
	of_buying_ityuan: "¿Comprar?￥",
	off_the_shelves_results: "Resultado",
	ok: "OK",
	on_frame_failure: "Error",
	out_collection: "Cancelar colección",
	package_deal: "Intercambio de paquetes",
	packaged_transaction_within_the_test: "Función no disponible.",
	page_size: "Número por página",
	page_temporarily_does_not_support: "La web no admite compras por lotes. Por favor, vaya a la app de BUFF.",
	paid_success: "Pagado",
	pattern_template: "Pattern",
	pay_failed: "Pago fallido",
	payment: "Pagando",
	payment_system_is_busy_please: "El sistema de pagos está ocupado. Por favor, compruebe el resultado del pago en Historial de compras.",
	piece_of_goods: "Artículos",
	piece_of_goods_please_go: "Compruebe su historial de compras",
	platform_name: "Tienda de aspectos de BUFF163",
	please_agree: "Por favor, compruebe el acuerdo primero.",
	please_agree_to_the_service: "Por favor, acepte primero el acuerdo del servicio.",
	please_be_patient: "Por favor, tenga paciencia",
	please_choose_coupon: "Vale",
	please_choose_to_be_a: "Por favor, elija artículos",
	please_choose_to_be_on: "Por favor, elija artículos",
	please_do_the_safety_confirmation: "Por favor, realice la confirmación de seguridad e introduzca",
	please_enter: "Por favor, introduzca ",
	please_enter_image_verification_code: "Por favor, introduzca el código de verificación de la imagen",
	please_enter_or_select_the: "Por favor, introduzca o seleccione una cantidad a recargar\\n",
	please_enter_pricing: "por favor, introduzca un precio",
	please_enter_the_account_password: "Introducir contraseña",
	please_enter_the_auto_logoff: "Por favor, introduzca un tiempo de desconexión automática",
	please_enter_the_correct_invite: "Por favor, introduzca el código de invitación correcto.",
	please_enter_the_netease_mobile: "Introduzca el número de celular",
	please_enter_the_question_content: "Por favor, introduzca el contenido del comentario",
	please_enter_the_redemption_code: "Por favor, introduzca el código",
	please_enter_the_registered_phone: "Por favor, introduzca un número de celular",
	please_enter_the_sms_verification: "Introduzca el código",
	please_enter_the_verification_code: "Introduzca el código",
	please_enter_your_steam_trade: "Introducir la URL de intercambio",
	please_exchange_store_name_coupon_at_app: "Por favor, canjee el vale de cambio de nombre de tienda en la app de BUFF",
	please_fill_out_the_trading: "Por favor, introduzca la URL de intercambio",
	please_get_a_sms_verification: "Por favor, consiga el código primero",
	please_get_a_verification_code: "Por favor, consiga el código primero",
	please_go_to_buff_the: "Se ha realizado la compra, por favor envía tu oferta a través de la aplicación en un plazo de 30 minutos",
	please_go_to_my_sell: "Por favor, entréguelo en Mis ventas",
	please_go_to_send_offer: "Haga clic en Confirmar para crear la oferta.",
	please_in_the_backpack_view: "Por favor, compruébelo en su mochila.",
	please_input_01000_between_the: "Por favor, introduzca una semilla de pintura de entre 0 y 1000",
	please_input_store_name: "Por favor, introduzca un nombre de la tienda",
	please_input_the_correct_mailbox: "Por favor, introduzca un correo válido",
	please_modify_the_nickname: "Por favor, cambie su nombre",
	please_select_deposit_item: "Por favor, elija artículos",
	please_select_from_the_available: "Por favor, seleccione un vale disponible",
	please_select_item: "Por favor, elija artículos",
	"please_select_recharge_way\\n": "Por favor, seleccione el método de recarga\\n",
	please_select_the_bank_account: "Por favor, seleccione una cuenta del banco",
	"please_select_the_card\\n": "Por favor, seleccione una tarjeta bancaria\\n",
	please_select_the_you_want: "Por favor, elija artículos",
	please_select_to_ship_the: "Por favor, elija artículos",
	please_tick_the_below_statement: "Por favor, marque la casilla inferior",
	please_upload_manual_cert: "Por favor, suba una imagen",
	please_upload_picture: "Por favor, suba una imagen",
	please_wait: "Espere, por favor...",
	please_wait_for_seller_to: "Por favor, espere a que el vendedor envíe la oferta y acéptela",
	please_wait_for_the_seller: "Por favor, espere a que el vendedor envíe la oferta. Después de eso, usted tendrá que aceptar la oferta",
	please_wait_patiently_have_been: "Tenga paciencia, por favor",
	pluar_s: "s",
	pmost_can_only_be_bound: "Como máximo se puede vincular",
	premium_buy_fail: "Compra fallida. Por favor, inténtelo de nuevo más tarde",
	premium_buy_success: "Cuenta Premium comprada con éxito",
	premium_confirm_leave: "Salir",
	premium_continue_to_pay: "Continuar para pagar",
	premium_expired_content: "Su membresía caducó el {{date}}. Renueve su membresía para mejorar sus beneficios.",
	premium_expired_renew_now: "Renovar ahora",
	premium_havent_successfully_paid: "Aún no pagó con éxito. Por favor, pague cuanto antes.",
	premium_waiting_for_payment: "esperando al pago",
	premium_will_expire_content: "Su membresía caducará en {{date}}. Perderá los beneficios de su membresía, como por ejemplo el identificador exclusivo, la inspección en el servidor o el límite extra de la lista.",
	press_and_hold_the_slider: "Mantenga pulsado el deslizador y arrástrelo para completar el puzle de arriba",
	prev_page: "Página anterior",
	preview_screenshots: "Capturas de pantalla",
	price_must_be_greater_than: "El precio debe ser superior a: ",
	private_transaction_within_the_test: "Función no disponible.",
	private_transactions: "intercambio privado",
	prompt: "Consejo",
	purchase: "Comprando",
	purchase_failed: "Error",
	purchase_failure_reason_as_follows: "Error",
	purchase_price_not_greater_than: "El precio de compra no puede ser superior a ",
	purchased: "Comprado",
	quantity: "Cantidad:",
	ranking_total_ranking: "Clasificación total",
	re_authorisation: "Restablecer",
	reacquire_the_print_data: "Volver a conseguir los datos de la calcomanía",
	receive_sms_verification_code: "Código SMS recibido.",
	recharge_failed: "Error",
	recharge_successful: "Exitoso",
	recharge_with_cash_only_support: "Las recargas y retiradas solo son compatibles con tarjetas de débito",
	recharge_yuan: "Recargar ￥",
	recommended_use_of_the_netease: 'Se recomienda usar el acelerador NetEase UU.<a href="/help#steam_network">查看更多解决方案</a>',
	reconfirm: "Reconfirmar",
	refresh: "Actualizar",
	refresh_in_the: "Actualizar...",
	refreshing: "Actualizar",
	register_a_new_account: "Registrar nueva cuenta",
	registration: "Registrarse",
	remain_withdrawal_count_today: "Número de retiradas restantes disponibles para hoy:",
	reminder: "Recordatorio",
	replicated: "Copiado",
	reply_success: "Exitoso",
	request: "Creando",
	request_in_queue: "El sistema está colapsado. Por favor, inténtelo de nuevo más tarde",
	require_minimal_packaging_of_two: "Necesita empacar al menos dos elementos",
	resend: "Reenviar",
	retrieval_failure: "No se pudo hacer la retirada",
	retrieve_the_process_description: "Presentación del proceso de recuperación",
	reupload: "Volver a subir",
	sale_amount: "Importe de venta",
	sale_amount_yuan: "Importe de venta: ",
	sale_number_: "Número de venta: ",
	save: "Guardar",
	scratch_sticker_notice: "Tiene que asegurarse de que la información de la calcomanía coincide con la del inventario al ponerla en la tienda. Raspar las calcomanías antes de enviarlas hará que su cuenta sea bloqueada.",
	search_result: "Resultado",
	seconds: " segundos",
	select_to_change_the_price: "Por favor, elija artículos",
	select_to_retrieve_the_goods: "Por favor, elija artículos",
	select_up_to_200_pieces: "Elija hasta 200 artículos",
	selling_num: "{{num}} en venta",
	send_a_verification_code_failed: "No se pudo enviar el código de verificación",
	sent_successfully_please_note_the: "Enviado con éxito",
	set_success: "Exitoso",
	set_the_boot: "Guía",
	set_to_fail: "Error",
	set_up_steam_trade_url: "Configurar URL de intercambio de Steam",
	set_up_trading_links: "Configurar URL de intercambio",
	settings_failed_please_try_again: "Error",
	shelve_failed: "Error",
	shelve_notice: "Por favor, envíe en un plazo de 12 horas después de que el comprador pague, si no el artículo será eliminado de la lista y su función de venta será suspendida.",
	shelve_success: "Exitoso",
	shelves_successful: "Exitoso",
	since_the_csgo_official_trading: 'Debido a cambios en las reglas de intercambio oficiales de CS:GO, los artículos no se recuperarán en un plazo de 7 días después de depositarlo.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO交易机制改动</a>',
	skip_maybe_next_time: "Saltar",
	slogan: "Soporta juegos como CS:GO, DOTA2, etc.",
	sold_number_of_pieces: "Número de venta",
	some_etc: "{{count}} artículos",
	split_pay_cancel_order_content: "¿Cancelar compra? Por favor, no pague después de cancelar.",
	split_pay_cancel_order_title: "Cancelar compra",
	split_pay_confirm_leave: "Cancelar compra",
	split_pay_continue_to_pay: "Más tarde",
	split_pay_max_amount_invalidate: "No es mayor que {{amount}}",
	split_pay_min_amount_invalidate: "No menos de {{amount}}",
	steam_trade_limit: "Su cuenta de Steam no puede intercambiar por el momento. Por favor, compruebe la ayuda de Steam.",
	sticker_copy: "Copiar",
	sticker_search_entry: "Aplicado",
	weapon_case_entry: "Caja de armas",
	in_collection: "Colección",
	item_contained: "Artículos que contiene",
	an_rare_special_item: "Artículo especial muy raro",
	submitted: "Enviado",
	successful_supply: "Exitoso",
	successful_upload: "Exitoso",
	successfully_submitted: "Exitoso",
	supply_failure: "Error",
	supply_max_limit: "Suministrar hasta 50 artículos a la vez",
	supply_success: "Exitoso",
	sure_you_want_to_delete: "¿Seguro que quiere borrar esta tarjeta?",
	system_busy_error: "El sistema está colapsado. Por favor, inténtelo de nuevo más tarde",
	termination_buying: "Cancelar compra",
	the_account_can_be_withdrawal: "No se puede retirar, saldo insuficiente en Saldo de BUFF - Otro",
	the_amount_of_recharge_need: "La cantidad tiene que ser un número",
	the_authentication_is_successful: "Exitoso",
	the_bank_card_number_can: "El número de la tarjeta bancaria no puede estar vacío",
	the_bank_card_number_errors: "El número de la tarjeta bancaria es incorrecto. Vuelva a introducirlo, por favor",
	the_binding_is_successful: "Exitoso",
	the_content_of_the_input: "Por favor, introduzca menos de 40 palabras",
	the_current_balance_of_dollar: ", saldo actual ￥",
	the_current_page_is_no: "No hay artículos",
	the_degree_of_wear_get: "Obteniendo...",
	the_goods_can_not_a: "El precio del artículo no se puede asignar automáticamente, por favor asígnele uno",
	the_goods_is_not_buying: "Este artículo no está disponible para su compra.",
	the_lack_of_balance: "Saldo insuficiente",
	the_maximum_allowable_amount_of: "La cantidad máxima de recarga es",
	the_minimum_allowable_amount_of: "La cantidad mínima de recarga es",
	the_modified_price_of_success: "Exitoso",
	the_payment_is_successful: "Exitoso",
	the_phone_number_cannot_be: "El número de teléfono no puede estar vacío",
	the_phone_number_has_been: "¿Cambió de número de teléfono? Por favor,",
	the_steam_account_has_been: "¿Ha sido cambiado el Steam? Por favor, ",
	the_phone_number_is_incorrect: "El número de teléfono es incorrecto. Vuelva a introducirlo, por favor",
	the_phone_receives_the_verification: "Código de verificación recibido",
	the_picture_is_being_resolved: "Inspeccionando. Por favor, pulse para verlo más tarde",
	the_price_can_not_be: "El precio no puede ser superior a: ",
	the_purchase_amount_can_not: "No puede superar el número de artículos que cumplen las condiciones",
	the_quote_failed_to_send: "Error: ",
	the_real_name_can_not: "El nombre real no puede estar vacío",
	the_recommended_bit_is_already: "La posición recomendada está llena",
	the_set_of_recommended_items: "Recomendar",
	the_shelves: "Quitado de la lista",
	the_shelves_after_the_goods: "¿Está seguro de quitar de la lista los artículos seleccionados?",
	the_system_is_busy: "El sistema está ocupado",
	the_system_is_busy_please: "El sistema está ocupado. Por favor, compruebe el historial de compras",
	the_system_is_busy_you: "El sistema está ocupado. Puede comprobar el progreso de recarga más reciente en el historial de recargas.",
	the_system_is_busyplease_try: "El sistema está colapsado. Por favor, inténtelo de nuevo más tarde",
	the_system_supports_the_maximum: "El sistema admite hasta 64 caracteres.",
	the_validation_is_successful: "Exitoso",
	the_verification_code_is_incorrect: "Código de verificación incorrecto",
	there_goods_is_not_input: "Hay artículos sin precio",
	tied_the_card_fails_please: "Error. Por favor, confirme que la información introducida es correcta.",
	timeout: "Caducado",
	to_bind: "Vincular",
	to_check: "Comprobar",
	to_guarantee_your_safety_of: "Introduzca su número de celular",
	to_obtain_the_dynamic_code: "Error",
	to_receive_the_success: "Exitoso",
	to_shipping: "Envío",
	to_steam: "Conectar a Steam",
	to_view_figure: "Pantallazo",
	trade_url_setting_successful: "Exitoso",
	trading_link_format_error: "Error en el formato de la URL de intercambio",
	unbound_steam: "Primero conecte la cuenta de Steam",
	unbound_steam_notice: "Por favor, vincule primero a Steam.",
	unbound_steam_trading_link_whether: "URL de intercambio de Steam no vinculada, vaya a configurarlo primero.",
	undelivered_notice: "La última vez no completó el envío, así que no podrá vender en un plazo de {{hours}} horas y {{minutes}} minutos.",
	unpaid_amount: "Cantidad no pagada",
	unset_price_item: "Hay artículos sin precio",
	unuse_coupon_state: "No utilizado",
	up_to_200_items: "Elija hasta 200 artículos",
	"upload_success!_your_players_show": "¡Subido correctamente! Su muestra de aspectos está bajo revisión",
	urs_password_login_need_verify: "Necesitamos verificar su cuenta de celular para garantizar la seguridad de su cuenta.",
	used_coupon_state: "Utilizado",
	user_asset_admin_frozen_notification: "Se bloquearon algunos saldos debido a operaciones anómalas en la cuenta. Por favor, envíe un comentario.",
	user_login: "Iniciar sesión/Registrarse",
	user_registration: "Registrarse",
	valuation: "Valoración:",
	verification_code_cannot_be_empty: "El código está vacío",
	verify: "Verificar",
	verify_now_btn_text: "Verificar ahora",
	verify_tips: "Aviso",
	verify_tips_text: "Mejoramos nuestras carteras para mejorar la seguridad de sus bienes. Por favor, complete la verificación antes de retirar.",
	view_a_player_show_please: "Por favor, inicie sesión primero",
	view_history_please_login: "Por favor, inicie sesión primero",
	view_more: "Ver más",
	view_more_long_time_exchange: "Intercambiar",
	view_more_long_time_of: "Para ver la tendencia de los precios a largo plazo, por favor, cambie a Observador",
	view_more_long_time_of_for_premium: "Puede unirse a BUFF Plus para ver la tendencia de precios de los últimos 6 meses.",
	view_my_steam_inventory: "Ver mi inventario de Steam",
	view_price_trends_please_login: "Por favor, inicie sesión primero",
	view_top_bookmarked_please_login: "Por favor, inicie sesión primero",
	view_wear_ranking_please_log: "Por favor, inicie sesión primero",
	waiting_for_payment: "esperando al pago",
	whether_the_problem_has_been: "¿Se resolvió el problema?",
	whether_to_terminate_the_purchase: "¿Terminar el progreso en curso como {{progress}}?\n{{refund_desc}}",
	will_be_returned_to_origin: "{{money}} será devuelto a su cuenta en 30 minutos.",
	will_be_returned_to_you_buff_b: "{{money}} se reembolsará en su saldo de BUFF",
	withdraw_cash_price_of_dollar: "Retirar￥",
	withdraw_the_maximum_amount_of: "La cantidad máxima de retirada es",
	withdraw_verify_tips: "Verificación de retirada",
	withdraw_verify_tips_text: "Tarjeta bancaria no verificada. Por favor, verifíquela antes de retirar fondos.",
	withdrawal_failure: "Error",
	withdrawal_has_been_filed: "Solicitó una retirada",
	withdrawal_minimum_amount_is: "La cantidad mínima a retirar es",
	years: "Año",
	you_can_recharge_in_a: "Puede comprobar los últimos progresos en el historial de recargas.",
	you_have_new_orders_need: "Tiene un nuevo pedido por enviar.",
	you_have_yet_to_bind: "Todavía no vinculó la URL de intercambio en Steam, por favor, vaya a configurarlo",
	you_havent_successfully_paid_the: "No realizó el pago con éxito. El pedido se puede pagar en un plazo de 3 minutos. Por favor, pague cuanto antes.",
	you_must_be_over_18: "Debe tener al menos 18 años para poder usar nuestro servicio.",
	your_buying_price_is_higher: "El precio de su solicitud de compra es superior al precio en tienda ¿Continuar?",
	your_current_steam_account_cant: "Su cuenta de Steam actual no puede intercambiar Por favor, compruebe nuestra documentación de ayuda.",
	your_mobile_phone_account_occurs: "Su cuenta de celular se cambió. Necesitamos verificar su cuenta de celular para garantizar la seguridad de su cuenta.",
	your_phone_account_through_a: "Su cuenta de celular cambió y tenemos que verificar su cuenta de Steam vinculada.",
	your_steam_account_halt: "Se detectó que su cuenta de Steam tiene retenidos los intercambios.",
	your_steam_account_tradable: "Su cuenta de Steam parece que puede intercambiar.",
	your_steam_acctoun_trade_limit: "Su cuenta de Steam no puede intercambiar",
	your_steam_trade_url_invalid: "Su URL de intercambio caducó. Por favor, vaya a Steam para obtenerla",
	yuan: "yuan",
	refresh_success: "Exitoso",
	cs2_inspect_input_share_link: "pegue aquí el enlace de compartir del artículo",
	cs2_inspect_success: "Inspeccionando. Por favor, pulse para verlo más tarde",
	cs2_inspect_finish: "Generado, haz clic para ver.",
	cs2_inspect_delete: "Eliminado",
	copy_to_clipboard_success: "Enlace de captura de pantalla copiado al portapapeles con éxito",
	cs2_inspect_error: "No se puede inspeccionar el artículo",
	select_export_option: "Seleccione la opción de exportación",
	select_export_time: "Seleccione el intervalo de tiempo de exportación",
	export_bill_order_success: "Procesando... Se le informará una vez completada. Puede ver la exportación en el historial de descargas.",
	select_start_time: "Seleccione",
	select_end_time: "Seleccione",
	datepicker_language: "en-US",
	export_time_invalid: "La hora de finalización debe ser posterior a la hora de inicio.",
	kyc_left_count: "{{n}} times left",
	verify_by_other_methods: "Verify by other methods",
	login_steam: "Conectar a Steam",
	record_timerange_tip_default: " ",
	record_timerange_tip: "Mostrar registros de los últimos 12 meses y aplicar filtros para ver más",
	record_timerange_tip_with_time_filters: "Mostrar solo registros entre {{start_time}} y {{end_time}}",
	record_timerange_tip_without_time_filters: "Mostrar registros de los últimos 12 meses",
	buy_order_offline_title: "El estado de la orden de compra es fuera de línea",
	buy_order_offline_message: "El estado de su solicitud de compra es desconectado Se ocultaron sus solicitudes de compra en la tienda.",
	total: "Total",
	paid: "Pagado",
	bundle_overview: "Visión general",
	pieces: "artículos",
	bundle_detail: "Detalles del paquete",
	reference_price: "Precio de referencia",
	total_reference_price: "Precio de referencia",
	avg_price: "Preço médio",
	min_asset_count: "min",
	max_asset_count: "max",
	min_paintwear: "min",
	max_paintwear: "max",
	bundle_inventory_create_order_count: "Bundles listed in quantities ranging from 2 to 200",
	bundle_pieces: "{{count}} items",
	wear: "Desgaste:",
	in_the_game_view: "Inspeccionar en el juego",
	bundle_analysis: "Inspeccionando",
	in_cms_view: "inspeccionar en servidor",
	paid: "Pagado",
	paymethod_description_more: "Más",
	buy: "Comprar",
	sticker_paintwear: "Sticker wear: ",
	premium_rate_tips: "(Sale price-Float range price floor)/Sticker price",
	reprice_buy_order_successfully: "Vuelva a cotizar con éxito",
	no_buy_quick_price: "No hay precio de referencia, por favor cotiza tú mismo.",
	reprice_buy_order_cancel_success_create_fail: "El cambio de precio falló y la orden de compra se canceló. Vuelva a crear la orden de compra.",
	reason: "Razón",
	shop_state_offline_popup_title: "La tienda está desconectada",
	shop_state_offline_popup_content: "Su tienda está desconectada, su lista de artículos no será visible para los demás. Por favor, vaya a los ajustes de tienda para configurarlo.",
	please_select_weapon_type: "Por favor seleccione Tipo",
	please_select_weapon_name: "Por favor seleccione Arma",
	please_select_weapon_name_and_type: "Por favor seleccione Tipo y Arma",
	please_select_weapon_and_skin: "Por favor seleccione Arma y Diseño",
	please_select_paint_seed: "Por favor seleccione Pintura Semilla",
	add_sticker: "Pegatina",
	not_support_slot: "Esa ranura no es compatible",
	copy: "Copiar",
	copy_success: "Copiado",
	select_name: "Seleccionar arma",
	to_market: "Mercado"
});
i18nData.updateData("pt", {
	"1_seconds": "1 segundo",
	_piece_of_goods_has: "os itens falharam porque já foram comprados",
	_piece_of_goods_off: "itens bem-sucedidos",
	a_period_of_time_: "Um período de tempo: ",
	a_picture_is_not_uploaded: "Algumas imagens não foram carregadas com sucesso",
	a_successful_purchase: "Sucesso",
	access_to_the_steam_encounters: "Teve algum problema com o Steam?",
	account_can_be_withdraw_the: "Não é possível sacar, saldo insuficiente no Saldo do BUFF - Outro",
	acknowledgment_is_bound_to_the: "Tem certeza de que deseja vincular a esta conta do Steam?\nApelido do Steam:",
	acquisition_fee_failed_please_try: "Falha ao receber a taxa, tente novamente mais tarde",
	add_a_bank_card: "Adicione uma Conta bancária",
	add_a_description: "Inserir uma descrição",
	add_description: "Inserir uma descrição",
	add_in_5_minutes_to: "Envie a oferta no aplicativo do BUFF dentro de 5 minutos.",
	add_in_the_buyers_payment: "Entregue dentro de 12 horas após o pagamento do comprador, do contrário o item será removido da venda e sua função de venda será banida.",
	add_notes: "Adicionar Notas",
	add_the_other_card: "Adicionar outra conta bancária",
	all: "Tudo",
	already_have_an_account_click: "Clique aqui para logar",
	analysis: "Inspecionando",
	analysis_figure: "Captura de tela",
	api_key_format_error: "Erro no formato da Chave API",
	api_key_successfully_set: "Sucesso",
	application_authentication_failure_please_contact: "Falha na verificação, entre em contato com o Suporte",
	artificial_assist: "Falar com o Suporte",
	auth_entry_bankcard_text: "Saque para cartão bancário sob mesmo nome",
	auth_entry_bankcard_title: "Verificação de nome real",
	auth_entry_manual_text: "Saque não suportado e tempo gasto",
	auth_entry_manual_title: "Verificação manual",
	auth_entry_zhima_text: "Saque para cartão bancário sob mesmo nome",
	auth_entry_zhima_title: "Verificar pelo Alipay",
	auth_success: "Sucesso",
	authentication: "Verificação",
	back_for_refresh: "Voltar para atualizar",
	backpack_capacity_is_insufficient_can: "Espaço da mochila insuficiente",
	balance_authorization: "Autorização de saldo",
	balance_authorization_expired: "A autorização de saldo expirou, ",
	balances_detail: "Detalhe",
	bargain_price_must_be_lower: "O preço de barganha deve ser menor que o preço de venda",
	being_prepaid_in: "Carregando",
	beware_of_phishing_scams_please: "Cuidado com golpes, verifique se a chave de API foi criada? Se foi criado com malícia, exclua e altere a senha do Steam imediatamente.",
	binding_acknowledgment: "Confirmar",
	binding_steam: "Conectar à Conta do Steam",
	binding_steam_before_you_can: "Conecte sua conta do Steam para aproveitar o buff.",
	binding_transaction_link_the_immediate: "Defina seu URL de negociação no Steam para começar a negociar no BUFF",
	bound_to_fail: "Falha",
	buff_backpack_capacity_is_insufficient: "Espaço na mochila insuficiente. Ajustando o limite de compra disponível.",
	buy_order_min_price: "Não menos que {{min_price}}",
	buy_order_wx_pay_unfrozen: "Seu pedido de compra será cancelado se não for fornecido em 30 dias. Nesse caso, o valor será reembolsado na sua conta.",
	buy_price_cannot_be_less: "O preço de compra não pode ser inferior a ￥0,01",
	buy_pubgrecycled_transactionitems_not_get: "Os itens de PUBG não são retiráveis",
	buy_success: "Sucesso",
	buying_in_bulk_quantity_can: "O número de compras em massa não pode exceder",
	buying_in_bulk_results: "Resultado",
	buying_num: "{{num}} demanda",
	can_not_supply_your_own: "Não é possível fornecer os itens que você compra",
	cancel: "Cancelar",
	cancel_buying_success: "Sucesso",
	cancel_delivery_success: "Sucesso",
	cancel_recommend: "Cancelar recomendação",
	cancel_the_shipment: "Cancelar Entrega",
	cannot_be_resolved_the_goods: "Não foi possível inspecionar, o item foi vendido ou a rede é ruim",
	cannot_purchase_your_own_items: "Você não pode comprar seu próprio item.",
	card_limit_is_reached: "Cartão bancário atinge o limite superior",
	cardsp: "cartões bancários",
	cash_detail_alipay: "Pago via Alipay",
	cash_detail_alipay_small: "(Pode ser usado para comprar itens ou sacar dinheiro no cartão bancário)",
	cash_detail_epay: "Pagar via WeChat",
	cash_detail_epay_small: "(Pode ser usado para comprar itens ou sacar dinheiro no cartão bancário)",
	century: "Século",
	change_price_of_failure: "Falha",
	check_sticker_wear_in_detail: "Você pode conferir se os adesivos foram raspados no fim da página do item. Confirme ante de comprar.",
	clear_the_api_key_after: "Após revocar a chave API, sua loja ficará offline e os itens não serão comprados. Tem certeza que deseja limpar?",
	click_on_upload_picture: "Clique para carregar a imagem",
	click_to_collapse: "Recolher",
	click_to_expand: "Expandir",
	close_failed_please_try_again: "Falha ao fechar, tente novamente",
	cms_inspect_success_message: "O cliente do jogo CSGO será iniciado para se conectar ao servidor para inspeção. É proibido usar a função para outros fins que não inspecionar antes de comprar itens. Um tempo de inspeção de 10 minutos por dia é fornecido durante o teste beta. ",
	cms_inspect_success_title: "inspecionar no servidor",
	complete: "Concluir",
	confirm: "Confirmar",
	confirm_and_opened: "Aberto",
	confirm_clear: "Limpar",
	confirm_leave: "Sair",
	confirm_to_cancel_the_transaction: "Confirmar",
	confirmation_of_payment: "Confirmar",
	"congratulations_to_you!_welcome_to": "Boas-vindas ao BUFF, você pode começar a negociar agora!",
	consignment_goods_shelf_will_be: "Os itens em consignação serão devolvidos à sua mochila do BUFF após serem removidos.",
	content_length_can_not_be: "O comprimento do conteúdo não pode ser maior que 1.024 caracteres",
	continue_selling: "Continuar",
	continue_to_pay: "Continuar pagando",
	counteroffer_price_cannot_be_lower: "O preço de barganha deve ser superior ao preço mínimo de oferta",
	counteroffer_request_has_been_sent: "Solicitação de Barganha enviada",
	coupon_dispense_sources_both: "Você pode ter acesso a esse benefício atualizando para Plus ou resgatando cupons com pontos no aplicativo",
	coupon_dispense_sources_points: "Você pode ter acesso a esse benefício resgatando cupons com pontos no aplicativo",
	coupon_discpense_sources_points_lottery_both: "Esse benefício pode ser adquirido na loja de pontos ou lotéricas no APP.",
	coupon_discpense_sources_points_all: "Esse benefício está incluso no BUFF Plus ou pode ser ganho na loja de pontos ou lotérica no APP",
	coupon_dispense_sources_vip: "Você pode obter acesso a esse benefício atualizando para o Plus",
	coupon_dispense_sources_lottery_both: "You can get access to this benefit by upgrading to Plus or gaining from the points lottery in APP",
	coupon_dispense_sources_lottery: "This benefit can be gained from the points lottery on App",
	go_to_point_lottery: "To use this feature, you will need to activate the Quantity Observer benefit which can be gained from the points lottery.",
	create_a_package_of_trading: "Sucesso",
	create_buying_success: "Sucesso",
	csgo_deposit_notice: 'Devido a mudanças nas regras de negociação do CS:GO/DOTA2, os itens estarão disponíveis para negociação novamente após 7 dias.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO/DOTA2交易机制改动</a>',
	currently_does_not_support_the: "O número do cartão não é suportado atualmente. Mude o cartão.",
	currently_does_not_support_the_and_change: "Selecione a conta bancária manualmente",
	currently_have_to_wait_for: "Ainda há um feedback aguardando resposta. Se você ainda precisar de feedback, vá para suplementar.",
	day: "Dia",
	days: "dias",
	delete_confirmation: "Confirmação",
	delete_failed: "Falha",
	delivery_prompt: "Notificação",
	delivery_timeout: "Tempo limite de entrega",
	deposit_backpack: "Depositar",
	deposit_failed: "Falha",
	deposit_instructions_confirm: "Depositar",
	deposit_instructions_message: "tem uma situação de empilhamento, então será tratado como um item apenas quando for depositado na mochila do BUFF. Defina a quantidade para 1 ao depositar.",
	deposit_instructions_title: "Instruções de depósito",
	description: "Descrição",
	detect_fail_try_later: "Falha na detecção, tente novamente mais tarde",
	detected_you_are_using_steam: "Você acabou de fazer login com o Steam. Para proteger a segurança de sua conta, precisamos verificar seu número de celular.",
	detected_you_are_using_sms: "Para proteger a segurança da sua conta, precisamos verificar o seu Steam.",
	detection_failed_please_try_again: "Falha na detecção, tente novamente mais tarde",
	detects_network_anomalies_please_try: "Erro de conexão, tente de novo mais tarde",
	detects_that_you_are_also: "Você ainda não vinculou o Steam, vincule primeiro.",
	determine_the_selected_accessories_to: "Tem certeza que deseja retirar os itens selecionados da lista?",
	determine_use_store_name_coupon: "Esta renomeação precisa consumir 1 cupom de renomeação de loja. Tem certeza que quer alterá-lo?",
	determined_to_be_removed_from: "Tem certeza de que deseja cancelar sua coleção?",
	disable_antiscam: "O sistema não irá mais ajudá-lo a interceptar ofertas falsas, fique atento e esteja ciente dos golpes de sequestro de conta.",
	disable_sms_notification_alert: "Você não receberá mais alertas de SMS após desativar este recurso. Fique de olho nas notificações do aplicativos para processar seus pedidos a tempo.",
	do_not_exceed_24_characters: "Não exceda 24 caracteres",
	download: "Baixar",
	edit_description: "Editar descrição",
	edit_notes: "Editar Notas",
	edit_the_description: "Editar descrição",
	ejzb_auth_title: "Este pagamento requer autorização",
	enter_the_verification_code: "Insira o código",
	error_code: "Código de erro:",
	error_picture: "Falha no envio. Envie a imagem no formato jpeg ou png.",
	expired_coupon_switch: "O cupom expirou e será anulado se for substituído ou cancelado.",
	failure_to_modify: "Falha",
	feedback_success: "Sucesso",
	for_the_protection_of_your: "Para proteger a segurança da sua conta, precisamos verificar a conta do Steam vinculada a esta conta.",
	fraud_notice: "Cuidado com golpes, verifique se a chave de API foi criada? Se foi criado malícia, exclua e altere a senha do Steam imediatamente.",
	get_code: "Obter código",
	get_in: "Adquirindo",
	get_steam_trading_link: "Obter url de negociação",
	get_the_package_deal_failed: "Falha",
	get_the_verification_code: "Obter código",
	gift_card_buy_success: "Sucesso! Compartilhe o código de resgate do vale-presente com o destinatário. Você também pode verificá-lo em Meu Cupom.\nApelido do destinatário: {{nickname}}\nCódigo de resgate: {{sn}}",
	gift_card_query_title: "Aviso",
	gift_card_receiver_info: "Apelido e avatar do BUFF",
	gift_card_receiver_nickname_error: "O apelido do BUFF não existe",
	go_to_bind: "Vincular",
	go_to_bind_card: "Vincular",
	go_to_check: "Conferir",
	go_to_market: "Ver mercado",
	go_to_set: "Configurar",
	go_to_settings: "Configurar",
	go_to_verify: "Verificar",
	go_to_view: "Visualizar",
	greater_than_the_extraction_amount: "Excedido",
	has_been_sent: "Foi enviado",
	has_been_used: "Usado",
	have_not_modify_store_name: "Você não modificou o nome da loja",
	hour: "hora",
	hours: "horas",
	i_first_look_at_the: "Dar uma olhada",
	i_know: "Eu sei",
	i_think_again: "Pense novamente",
	id_card_number_errors_please: "O número de identificação está errado, digite novamente",
	id_number_can_not_be: "O número da ID não pode estar vazio",
	in_order_to_your_funds: "Para a segurança da sua conta, preencha as seguintes informações",
	input_content_too_long_to_40_words: "A entrada é muito longa, use menos de 40 palavras",
	inspecting: "Inspecionando, tente novamente mais tarde",
	instrongmy_counterofferstrongattention_counteroffer_status_the: 'Após o vendedor aceitar a barganha e enviar a oferta, você precisa acessar o <strong>Histórico de Compras</strong> para aceitar a oferta, ou <strong class="c_Yellow">2%</strong> do valor da barganha será deduzido ao vendedor como compensação.',
	is_being_processed_you_can: "Sendo processado, você pode verificar o progresso mais recente nos registros de saque.",
	is_being_uploaded: "Carregando...",
	it_detects_your_steam_account: "Sua conta do Steam parece boa para negociar.",
	it_is_determined_to_cancel: "Tem certeza que deseja cancelar a entrega?",
	items_on_the_shelves_successful: "Sucesso",
	jewelry: "Item",
	less_than: "não menos que",
	listing_instructions_confirm: "Continuar a listar",
	listing_instructions_message: "tem uma situação de empilhamento, você só pode listar um deles. Você só pode continuar listando as outras peças depois de concluir a transação ou removê-la da lista de vendas.",
	listing_instructions_title: "Listando instruções",
	login: "Login",
	login_register: "Login/Registrar",
	login_with_password: "Entrar com senha",
	login_with_sms: "Login com SMS",
	manual_cert_finish: "Sucesso",
	manual_cert_processing: "Sob Revisão",
	manual_cert_upload_pic: "Faça o upload de uma captura de tela da página de nome real da sua conta do Alipay e cartão de identificação",
	member: " itens",
	minimum_price_can_not_be: "O preço mínimo não pode ser maior que o preço máximo",
	minimum_value_can_not_be: "O valor mínimo não pode ser superior ao valor máximo",
	minute: " minuto ",
	minutes: " minutos ",
	modify_the_price: "Mudar o preço",
	modify_the_success: "Sucesso",
	must_allow_epay_or_alipay: "Você deve aceitar um entre Alipay ou pagamento WeChat",
	need_to_first_agree_to: "Concorde com o acordo de pagamento primeiro",
	network_error: "Erro de conexão, tente de novo mais tarde",
	network_request_failed: "A solicitação de rede falhou",
	next_page: "Próxima página",
	nickname_modify_too_frequently_notice: "Alterações muito frequentes, altere após {{time}}",
	no_available_items: "Nenhum item disponível",
	no_coupon_to_use: "Sem cupons",
	no_field_for_more_patch: "Nenhum campo para mais emblemas",
	no_field_for_more_sticker: "Sem espaço em branco para mais adesivos",
	up_to_4_fixed_sticker: "Pedido por slot pode ser aplicado em até 4 adesivos",
	no_longer_prompt: "Não me lembrar novamente",
	no_meet_the_requirements_of: "Nenhum item atende ao requisito",
	no_related: "Nenhum item relacionado",
	not_found_to_contain_the: "O resultado da busca está vazio",
	not_my_phone_number_please: "Não é o meu número de telefone?",
	not_support_credit_card: "Cartão de crédito não é suportado",
	not_use_coupon: "Não use",
	notes: "Notas",
	notes_desc: "Notas (Particular):",
	notes_exceed_max_len: "Adicione não mais que 40 caracteres. Esta não é a descrição do item e só pode ser vista por você.",
	number: "Número:",
	buff_the_sale_price: "transação histórica",
	buff_sale_min_price: "listagem de preços",
	buff_sale_price: "Preço de venda",
	buff_sale_num: "Quantidade",
	of_buying_ityuan: "comprar？￥",
	off_the_shelves_results: "Resultado",
	ok: "OK",
	on_frame_failure: "Falha",
	out_collection: "Cancelar coleção",
	package_deal: "Negociação de pacotes",
	packaged_transaction_within_the_test: "Esta função não está disponível.",
	page_size: "Número por página",
	page_temporarily_does_not_support: "A página da web não oferece suporte para compra em massa. Acesse o aplicativo BUFF.",
	paid_success: "Pago",
	pattern_template: "Pattern",
	pay_failed: "Falha no pagamento",
	payment: "Pagando",
	payment_system_is_busy_please: "O sistema de pagamento está ocupado, verifique o resultado do pagamento no Histórico de Compras.",
	piece_of_goods: "itens",
	piece_of_goods_please_go: "Verifique no Histórico de Compras",
	platform_name: "Mercado de Skins do BUFF163",
	please_agree: "Verifique os acordos primeiro.",
	please_agree_to_the_service: "Concorde primeiro com o contrato de serviço.",
	please_be_patient: "aguarde pacientemente",
	please_choose_coupon: "Cupom",
	please_choose_to_be_a: "Escolha itens",
	please_choose_to_be_on: "Escolha itens",
	please_do_the_safety_confirmation: "Confirme a segurança e digite",
	please_enter: "Insira ",
	please_enter_image_verification_code: "Insira o código de verificação da imagem",
	please_enter_or_select_the: "Insira ou selecione um valor de recarga\\n",
	please_enter_pricing: "Insira o preço",
	please_enter_the_account_password: "Inserir senha",
	please_enter_the_auto_logoff: "Insira o tempo offline automático",
	please_enter_the_correct_invite: "Insira o código de convite correto",
	please_enter_the_netease_mobile: "Insira o número de celular",
	please_enter_the_question_content: "Insira o conteúdo do feedback",
	please_enter_the_redemption_code: "Insira o código",
	please_enter_the_registered_phone: "Insira o telefone celular",
	please_enter_the_sms_verification: "Inserir código",
	please_enter_the_verification_code: "Inserir código",
	please_enter_your_steam_trade: "Insira a URL de negociação",
	please_exchange_store_name_coupon_at_app: "Troque o cupom de troca de nome de loja no aplicativo BUFF",
	please_fill_out_the_trading: "Preencha a URL de negociação",
	please_get_a_sms_verification: "Obtenha o código primeiro",
	please_get_a_verification_code: "Obtenha o código primeiro",
	please_go_to_buff_the: "Compra realizada com sucesso. Por favor, envie sua oferta pelo aplicativo em até 30 minutos",
	please_go_to_my_sell: "Entregue em Minha Venda",
	please_go_to_send_offer: "Clique em Confirmar para criar a oferta.",
	please_in_the_backpack_view: "Confira a sua mochila.",
	please_input_01000_between_the: "Insira uma semente de tinta entre 0-1000",
	please_input_store_name: "Insira um nome para a loja",
	please_input_the_correct_mailbox: "Insira seu e-mail válido",
	please_modify_the_nickname: "Mude seu apelido",
	please_select_deposit_item: "Escolha itens",
	please_select_from_the_available: "Selecione um cupom disponível",
	please_select_item: "Escolha itens",
	"please_select_recharge_way\\n": "Selecione o método de recarga\\n",
	please_select_the_bank_account: "Selecione a conta bancária",
	"please_select_the_card\\n": "Selecione a conta bancária\\n",
	please_select_the_you_want: "Escolha itens",
	please_select_to_ship_the: "Escolha itens",
	please_tick_the_below_statement: "Marque a afirmação abaixo",
	please_upload_manual_cert: "carregue a imagem",
	please_upload_picture: "Carregue uma imagem",
	please_wait: "Espere...",
	please_wait_for_seller_to: "Aguarde o vendedor enviar a proposta e aceite-a",
	please_wait_for_the_seller: "Aguarde o vendedor enviar a oferta. Depois disso, você precisa aceitar a oferta",
	please_wait_patiently_have_been: "Seja paciente",
	pluar_s: "s",
	pmost_can_only_be_bound: "Só pode ser vinculado no máximo",
	premium_buy_fail: "Falha na compra, tente novamente mais tarde",
	premium_buy_success: "Compra Premium com Sucesso",
	premium_confirm_leave: "Sair",
	premium_continue_to_pay: "Continuar pagando",
	premium_expired_content: "Sua membresia expirou em {{date}}. Para atualizar seus benefícios, você pode renovar sua assinatura.",
	premium_expired_renew_now: "Renovar agora",
	premium_havent_successfully_paid: "você ainda não pagou com sucesso, pague o mais rápido possível.",
	premium_waiting_for_payment: "aguarde o pagamento",
	premium_will_expire_content: "Sua membresia está prestes a expirar em {{date}}. Você perderá seus benefícios de associação, como Identificador Exclusivo, Inspecionar no Servidor e Limite Extra de Listagem.",
	press_and_hold_the_slider: "Mantenha pressionado o controle deslizante e arraste para completar o quebra-cabeça acima",
	prev_page: "Página anterior",
	preview_screenshots: "Capturas de Tela",
	price_must_be_greater_than: "O preço deve ser superior a: ",
	private_transaction_within_the_test: "Esta função não está disponível.",
	private_transactions: "negociação particular",
	prompt: "Dica",
	purchase: "Comprando",
	purchase_failed: "Falha",
	purchase_failure_reason_as_follows: "Falha",
	purchase_price_not_greater_than: "O preço de compra não pode ser superior a ",
	purchased: "Comprado",
	quantity: "Quantidade:",
	ranking_total_ranking: "Rank total",
	re_authorisation: "reinicie",
	reacquire_the_print_data: "Readquirir dados de adesivo",
	receive_sms_verification_code: "Código SMS recebido.",
	recharge_failed: "Falha",
	recharge_successful: "Sucesso",
	recharge_with_cash_only_support: "Recarga e saque apenas com cartão de débito",
	recharge_yuan: "Reabastecer ￥",
	recommended_use_of_the_netease: 'Recomenda-se usar o acelerador NetEase UU.<a href="/help#steam_network">查看更多解决方案</a>',
	reconfirm: "Reconfirmar",
	refresh: "Atualizar",
	refresh_in_the: "Atualizar...",
	refreshing: "Atualizar",
	register_a_new_account: "registrar nova conta",
	registration: "Registrar",
	remain_withdrawal_count_today: "Número de saque restantes hoje:",
	reminder: "Lembrete",
	replicated: "Copiado",
	reply_success: "Sucesso",
	request: "Criando",
	request_in_queue: "O sistema está ocupado. Tente mais tarde!",
	require_minimal_packaging_of_two: "É necessário empacotar pelo menos 2 itens",
	resend: "Reenviar",
	retrieval_failure: "Falhar o enviar",
	retrieve_the_process_description: "Recuperar introdução do processo",
	reupload: "Reenviar",
	sale_amount: "Quantidade de vendas",
	sale_amount_yuan: "Valor de venda: ",
	sale_number_: "Número de venda: ",
	save: "Salvar",
	scratch_sticker_notice: "Você precisa garantir que a informação do adesivo é consistente com o inventário após listá-lo no mercado. Raspar os adesivos antes da entrega levará a sua conta ser banida.",
	search_result: "Resultado",
	seconds: " segundos",
	select_to_change_the_price: "Escolha itens",
	select_to_retrieve_the_goods: "Escolha itens",
	select_up_to_200_pieces: "Escolha até 200 itens",
	selling_num: "{{num}} à venda",
	send_a_verification_code_failed: "Falha ao enviar o código de verificação",
	sent_successfully_please_note_the: "Enviada com sucesso",
	set_success: "Sucesso",
	set_the_boot: "Guia",
	set_to_fail: "Falha",
	set_up_steam_trade_url: "Definir URL de Troca do Steam",
	set_up_trading_links: "Definir URL de negociação",
	settings_failed_please_try_again: "Falha",
	shelve_failed: "Falha",
	shelve_notice: "Entregue dentro de 12 horas após o pagamento do comprador, caso contrário, o item será removido da lista e sua função de venda será bloqueada.",
	shelve_success: "Sucesso",
	shelves_successful: "Sucesso",
	since_the_csgo_official_trading: 'Devido a mudanças nas regras comerciais oficiais do CS:GO, os itens não serão recuperados em até 7 dias após o depósito. <a href="/help#csgo_trade_cooldown" target="_blank">CS:GO交易机制改动</a>',
	skip_maybe_next_time: "Pular",
	slogan: "Suporte para jogos como CS:GO, DOTA2, etc.",
	sold_number_of_pieces: "Número de venda",
	some_etc: "{{count}} itens",
	split_pay_cancel_order_content: "Cancelar a compra? Não pague novamente após o cancelamento.",
	split_pay_cancel_order_title: "Cancelar compra",
	split_pay_confirm_leave: "Cancelar compra",
	split_pay_continue_to_pay: "Agora não",
	split_pay_max_amount_invalidate: "Não superior a {{amount}}",
	split_pay_min_amount_invalidate: "Não menos que {{amount}}",
	steam_trade_limit: "Sua conta do Steam não pode negociar no momento. Verifique a ajuda do Steam.",
	sticker_copy: "Copiar",
	sticker_search_entry: "Aplicado",
	weapon_case_entry: "Caixa de arma",
	in_collection: "Coleção",
	item_contained: "Itens Contidos",
	an_rare_special_item: "Um item extremamente raro e especial",
	submitted: "Enviado",
	successful_supply: "Sucesso",
	successful_upload: "Sucesso",
	successfully_submitted: "Sucesso",
	supply_failure: "Falha",
	supply_max_limit: "Forneça até 50 itens ao mesmo tempo",
	supply_success: "Sucesso",
	sure_you_want_to_delete: "Tem certeza que deseja excluir este cartão??",
	system_busy_error: "O sistema está ocupado. Tente mais tarde!",
	termination_buying: "Cancelar compra",
	the_account_can_be_withdrawal: "Não é possível sacar, saldo insuficiente no Saldo do BUFF - Outro",
	the_amount_of_recharge_need: "O valor precisa ser um número",
	the_authentication_is_successful: "Sucesso",
	the_bank_card_number_can: "O número da conta bancária não pode estar vazio",
	the_bank_card_number_errors: "O número do cartão bancário está errado, digite novamente",
	the_binding_is_successful: "Sucesso",
	the_content_of_the_input: "A entrada é muito longa, use menos de 40 palavras",
	the_current_balance_of_dollar: ", saldo atual ￥",
	the_current_page_is_no: "Sem itens",
	the_degree_of_wear_get: "Adquirindo...",
	the_goods_can_not_a: "O item não pode ser precificado automaticamente, digite",
	the_goods_is_not_buying: "Este item não está disponível para compra.",
	the_lack_of_balance: "Saldo insuficiente",
	the_maximum_allowable_amount_of: "O valor máximo de recarga permitido é",
	the_minimum_allowable_amount_of: "O valor mínimo de recarga permitido é",
	the_modified_price_of_success: "Sucesso",
	the_payment_is_successful: "Sucesso",
	the_phone_number_cannot_be: "O número de telefone não pode estar vazio",
	the_phone_number_has_been: "O número de telefone foi alterado?",
	the_steam_account_has_been: "O Steam foi alterado? Falar Por favor, ",
	the_phone_number_is_incorrect: "O número de telefone está errado, digite novamente",
	the_phone_receives_the_verification: "Código de verificação recebido",
	the_picture_is_being_resolved: "Inspecionando, clique para ver mais tarde",
	the_price_can_not_be: "O preço não pode ser superior a: ",
	the_purchase_amount_can_not: "Não é possível exceder o número de itens que atendem às condições.",
	the_quote_failed_to_send: "Falha: ",
	the_real_name_can_not: "O nome real não pode estar vazio",
	the_recommended_bit_is_already: "A posição recomendada está cheia",
	the_set_of_recommended_items: "Recomendar",
	the_shelves: "Tirar da lista",
	the_shelves_after_the_goods: "Tem certeza que deseja retirar os itens selecionados da lista?",
	the_system_is_busy: "Sistema ocupado",
	the_system_is_busy_please: "O sistema está ocupado, verifique no histórico de compras",
	the_system_is_busy_you: "O sistema está ocupado, você pode verificar o último andamento da recarga no registro de recarga.",
	the_system_is_busyplease_try: "O sistema está ocupado. Tente mais tarde!",
	the_system_supports_the_maximum: "O sistema suporta um máximo de 64 caracteres.",
	the_validation_is_successful: "Sucesso",
	the_verification_code_is_incorrect: "Código de verificação incorreto",
	there_goods_is_not_input: "Existem itens sem preço",
	tied_the_card_fails_please: "Falhou. Confirme se as informações inseridas estão corretas.",
	timeout: "Tempo esgotado",
	to_bind: "Vincular",
	to_check: "Conferir",
	to_guarantee_your_safety_of: "Digite seu número de celular",
	to_obtain_the_dynamic_code: "Falha",
	to_receive_the_success: "Sucesso",
	to_shipping: "Entregar",
	to_steam: "Conectar Steam",
	to_view_figure: "Captura de tela",
	trade_url_setting_successful: "Sucesso",
	trading_link_format_error: "Erro no formado da URL de Troca",
	unbound_steam: "Conecte a sua conta do Steam primeiro",
	unbound_steam_notice: "Você ainda não vinculou o Steam, vincule primeiro.",
	unbound_steam_trading_link_whether: "URL de comércio do Steam não vinculado, defina primeiro?",
	undelivered_notice: "Como você não conseguiu entregá-lo da última vez, não poderá vender dentro de {{hours}} horas e {{minutes}} minutos.",
	unpaid_amount: "Valor não pago",
	unset_price_item: "Existem itens sem preço",
	unuse_coupon_state: "Não usado",
	up_to_200_items: "Escolha até 200 itens",
	"upload_success!_your_players_show": "Carregado! A exibição de skins está em análise",
	urs_password_login_need_verify: "Para proteger a segurança da conta, precisamos verificar sua conta de celular.",
	used_coupon_state: "Usado",
	user_asset_admin_frozen_notification: "Alguns saldos foram congelados devido à operação anormal da conta, envie feedback.",
	user_login: "Login/Registrar",
	user_registration: "Registrar",
	valuation: "Avaliação:",
	verification_code_cannot_be_empty: "Código vazio",
	verify: "Verificar",
	verify_now_btn_text: "Verificar agora",
	verify_tips: "Aviso",
	verify_tips_text: "Atualizamos nossas carteiras para ajudar a melhorar a segurança de seus ativos, conclua a verificação antes de sacar.",
	view_a_player_show_please: "Faça o login primeiro",
	view_history_please_login: "Faça o login primeiro",
	view_more: "Ver mais",
	view_more_long_time_exchange: "Para troca",
	view_more_long_time_of: "Para ver a tendência de preço à longo prazo, troque o Observador.",
	view_more_long_time_of_for_premium: "Você pode se inscrever no BUFF Plus para ver a tendência de preços por 6 meses.",
	view_my_steam_inventory: "Exibir meu inventário do Steam",
	view_price_trends_please_login: "Faça o login primeiro",
	view_top_bookmarked_please_login: "Faça o login primeiro",
	view_wear_ranking_please_log: "Faça o login primeiro",
	waiting_for_payment: "aguarde o pagamento",
	whether_the_problem_has_been: "Problema resolvido?",
	whether_to_terminate_the_purchase: "Se deve terminar o progresso atual como {{progress}}?\n{{refund_desc}}",
	will_be_returned_to_origin: "{{money}} será devolvido à sua conta no espaço de 30 minutos.",
	will_be_returned_to_you_buff_b: "{{money}} será devolvido ao seu saldo do BUFF",
	withdraw_cash_price_of_dollar: "Sacar￥",
	withdraw_the_maximum_amount_of: "O valor máximo de saque é",
	withdraw_verify_tips: "Verificação de Saque",
	withdraw_verify_tips_text: "Este cartão bancário não concluiu a verificação, conclua a verificação antes de sacar.",
	withdrawal_failure: "Falha",
	withdrawal_has_been_filed: "Aplicou para retirada",
	withdrawal_minimum_amount_is: "O valor mínimo para saque é",
	years: "Ano",
	you_can_recharge_in_a: "Você pode verificar o progresso mais recente no registro de recarga.",
	you_have_new_orders_need: "Você tem um novo pedido para entregar.",
	you_have_yet_to_bind: "Você ainda não vinculou um URL de Troca do Steam. Faça isso.",
	you_havent_successfully_paid_the: "Você não pagou, o pedido pode ser pago em 3 minutos, pague o mais rápido possível.",
	you_must_be_over_18: "Você deve ter pelo menos 18 anos para usar nosso serviço.",
	your_buying_price_is_higher: "O preço do seu pedido de compra é maior que o do preço de mercado. Continuar?",
	your_current_steam_account_cant: "Sua conta atual do Steam não pode ser trocada. Verifique nossa documentação de ajuda.",
	your_mobile_phone_account_occurs: "Sua conta de celular foi alterada. Para proteger a segurança da conta, precisamos verificar sua conta de celular.",
	your_phone_account_through_a: "Sua conta móvel foi alterada e precisamos verificar sua conta do Steam vinculada.",
	your_steam_account_halt: "Detectado que sua conta do Steam está em retenção de negociação",
	your_steam_account_tradable: "Sua conta do Steam parece boa para negociar.",
	your_steam_acctoun_trade_limit: "Sua conta do Steam está incapacitada de negociar",
	your_steam_trade_url_invalid: "Sua URL de negociação expirou, obtenha-a no Steam",
	yuan: "yuan",
	refresh_success: "Sucesso",
	cs2_inspect_input_share_link: "cole o link de compartilhamento do item aqui",
	cs2_inspect_success: "Inspecionando, clique para ver mais tarde",
	cs2_inspect_finish: "Gerado, clique para visualizar",
	cs2_inspect_delete: "Excluído",
	copy_to_clipboard_success: "Link de captura de tela copiado com sucesso para a área de transferência",
	cs2_inspect_error: "O item não pode ser inspecionado",
	select_export_option: "Seleccione a opção de exportação",
	select_export_time: "Seleccione o intervalo de tempo de exportação",
	export_bill_order_success: "A processar... Será informado quando estiver concluído. Pode ver a exportação no histórico de transferências.",
	select_start_time: "Seleccionar",
	select_end_time: "Seleccionar",
	datepicker_language: "en-US",
	export_time_invalid: "A hora de fim tem de ser posterior à hora de início.",
	kyc_left_count: "{{n}} times left",
	verify_by_other_methods: "Verify by other methods",
	login_steam: "Conectar Steam",
	record_timerange_tip_default: " ",
	record_timerange_tip: "Mostrar registros dos últimos 12 meses e aplicar filtros para visualizar mais",
	record_timerange_tip_with_time_filters: "Mostrar apenas registros entre {{start_time}} e {{end_time}}",
	record_timerange_tip_without_time_filters: "Mostrar registros dos últimos 12 meses",
	buy_order_offline_title: "O estado da ordem de compra está offline",
	buy_order_offline_message: "O status do seu pedido de compra está offline. Seus pedidos de compra estão ocultos do mercado.",
	total: "Total",
	paid: "Pago",
	bundle_overview: "Visão geral",
	pieces: "itens",
	bundle_detail: "Detalhes do pacote",
	reference_price: "Preço de Referência",
	total_reference_price: "Preço de referência",
	avg_price: "Preço médio",
	min_asset_count: "min",
	max_asset_count: "max",
	min_paintwear: "min",
	max_paintwear: "max",
	bundle_inventory_create_order_count: "Bundles listed in quantities ranging from 2 to 200",
	bundle_pieces: "{{count}} items",
	wear: "Desgaste:",
	in_the_game_view: "Inspecionar no jogo",
	bundle_analysis: "Inspecionar",
	in_cms_view: "inspecionar no servidor",
	paid: "Pago",
	paymethod_description_more: "Mais",
	buy: "Comprar",
	sticker_paintwear: "Sticker wear: ",
	premium_rate_tips: "(Sale price-Float range price floor)/Sticker price",
	reprice_buy_order_successfully: "Reavaliar com sucesso",
	no_buy_quick_price: "Sem preço de referência, precifique você mesmo.",
	reprice_buy_order_cancel_success_create_fail: "A reavaliação falhou e a ordem de compra foi encerrada. Recrie o pedido de compra.",
	reason: "Razão",
	shop_state_offline_popup_title: "Loja offline",
	shop_state_offline_popup_content: "Sua loja está offline, os itens listados ficarão invisíveis aos outros. Vá às configurações da loja para configurar.",
	please_select_weapon_type: "Selecione o tipo",
	please_select_weapon_name: "Por favor selecione Arma",
	please_select_weapon_name_and_type: "Selecione o tipo e a arma",
	please_select_weapon_and_skin: "Por favor selecione Arma e Skin",
	please_select_paint_seed: "Por favor selecione Paint Seed",
	add_sticker: "Adesivo",
	not_support_slot: "Esse slot não é compatível",
	copy: "Copiar",
	copy_success: "Copiado",
	select_name: "Selecione a arma",
	to_market: "Mercado"
});
i18nData.updateData("ru", {
	"1_seconds": "1 секунда",
	_piece_of_goods_has: "предмет не удалось, поскольку он уже куплен",
	_piece_of_goods_off: "предметы без ошибок",
	a_period_of_time_: "период времени: ",
	a_picture_is_not_uploaded: "Некоторые изображения загрузить не удалось",
	a_successful_purchase: "Успешно",
	access_to_the_steam_encounters: "Проблема со Steam?",
	account_can_be_withdraw_the: "Вывод невозможен, недостаточный баланс BUFF-Прочие",
	acknowledgment_is_bound_to_the: "Вы уверены, что хотите привязать эту учетную запись Steam?\nИмя пользователя Steam:",
	acquisition_fee_failed_please_try: "Не удалось получить комиссию, повторите попытку позже",
	add_a_bank_card: "Добавить банковскую карту",
	add_a_description: "Добавить описание",
	add_description: "Добавить описание",
	add_in_5_minutes_to: "Отправьте предложение в приложение BUFF в течение 5 минут.",
	add_in_the_buyers_payment: "Отправьте в течение 12 часов после оплаты покупателем, иначе предмет будет снят с продажи, а ваша функция продаж будет отключена.",
	add_notes: "Добавить примечания",
	add_the_other_card: "Добавьте другую банковскую карту",
	all: "Все",
	already_have_an_account_click: "Щелкните для входа",
	analysis: "Проверяется",
	analysis_figure: "Скриншот",
	api_key_format_error: "Неверный формат ключа API",
	api_key_successfully_set: "Успешно",
	application_authentication_failure_please_contact: "Проверка не удалась, обратитесь в службу поддержки",
	artificial_assist: "Обратиться в службу поддержки",
	auth_entry_bankcard_text: "Вывод на банковскую карту на то же имя",
	auth_entry_bankcard_title: "Подтверждение настоящего имени",
	auth_entry_manual_text: "Вывод не поддерживается и время, необходимое",
	auth_entry_manual_title: "Подтверждение вручную",
	auth_entry_zhima_text: "Вывод на банковскую карту на то же имя",
	auth_entry_zhima_title: "Подтвердить с помощью Alipay",
	auth_success: "Успешно",
	authentication: "Подтверждение",
	back_for_refresh: "Назад чтобы обновить",
	backpack_capacity_is_insufficient_can: "Недостаточно места в рюкзаке для покупки",
	balance_authorization: "Подтверждение баланса",
	balance_authorization_expired: "Срок подтверждения баланса истек, ",
	balances_detail: "Детали",
	bargain_price_must_be_lower: "Ставка должна быть ниже цены продажи",
	being_prepaid_in: "Пополнение",
	beware_of_phishing_scams_please: "Остерегайтесь мошенников, проверьте, создан ли у вас ключ API. Если он был создан злоумышленниками, а не вами, удалите его и немедленно измените пароль Steam.",
	binding_acknowledgment: "Подтвердить",
	binding_steam: "Подключите аккаунт Steam",
	binding_steam_before_you_can: "Для использования BUFF подключите свой аккаунт Steam.",
	binding_transaction_link_the_immediate: "Задайте торговый URL Steam, чтобы начать торговлю в BUFF",
	bound_to_fail: "Не удалось выполнить",
	buff_backpack_capacity_is_insufficient: "Недостаточно места в рюкзаке. Подогнано под максимальное количество, которое вы можете купить",
	buy_order_min_price: "Не менее {{min_price}}",
	buy_order_wx_pay_unfrozen: "Если ваш заказ на покупку не будет выполнен в течение 30 дней, он будет отменен, и оплаченная сумма будет возвращена на ваш счет.",
	buy_price_cannot_be_less: "Цена покупки не может быть ниже ￥0,01",
	buy_pubgrecycled_transactionitems_not_get: "Предметы PUBG нельзя вывести",
	buy_success: "Успешно",
	buying_in_bulk_quantity_can: "Число предметов оптовой покупки не может превышать",
	buying_in_bulk_results: "Результат",
	buying_num: "{{num}} запрос",
	can_not_supply_your_own: "Передать купленные вами предметы невозможно",
	cancel: "Отменить",
	cancel_buying_success: "Успешно",
	cancel_delivery_success: "Успешно",
	cancel_recommend: "Отменить рекомендацию",
	cancel_the_shipment: "Отменить отправку",
	cannot_be_resolved_the_goods: "Проверка невозможна, предмет продан или ошибка сети",
	cannot_purchase_your_own_items: "Нельзя купить собственный предмет",
	card_limit_is_reached: "Банковская карта достигла верхнего предела",
	cardsp: "банковские карты",
	cash_detail_alipay: "Оплачено через Alipay",
	cash_detail_alipay_small: "(Можно использовать для покупки предметов или вывода средств на банковские карты)",
	cash_detail_epay: "Оплата через WeChat",
	cash_detail_epay_small: "(Можно использовать для покупки предметов или вывода средств на банковские карты)",
	century: "Век",
	change_price_of_failure: "Не удалось выполнить",
	check_sticker_wear_in_detail: "В нижней части страницы предмета можно проверить, не поцарапаны ли наклейки. Убедитесь перед покупкой",
	clear_the_api_key_after: "После очистки ключа API ваш магазин будет отключен, и товары нельзя будет купить. Вы уверены, что хотите очистить?",
	click_on_upload_picture: "Нажмите для загрузки изображения",
	click_to_collapse: "Свернуть",
	click_to_expand: "Развернуть",
	close_failed_please_try_again: "Не удалось закрыть, попробуйте снова",
	cms_inspect_success_message: "Клиент игры CSGO будет запущен для соединения с сервером для проверки. Функция запрещена к использованию с целями, отличными от проверки предметов перед покупкой. Во время бета-тестирования на проверки предоставляется 10 минут. ",
	cms_inspect_success_title: "проверка на сервере",
	complete: "Завершить",
	confirm: "Подтвердить",
	confirm_and_opened: "Открыть",
	confirm_clear: "Очистить",
	confirm_leave: "Выйти",
	confirm_to_cancel_the_transaction: "Подтвердить",
	confirmation_of_payment: "Подтвердить",
	"congratulations_to_you!_welcome_to": "Добро пожаловать в BUFF, можете начать торговать!",
	consignment_goods_shelf_will_be: "После удаления предметы для комиссионной продажи будут возвращены в рюкзак BUFF.",
	content_length_can_not_be: "Длина содержания не может превышать 1024 символов",
	continue_selling: "Продолжить",
	continue_to_pay: "Продолжить платеж",
	counteroffer_price_cannot_be_lower: "Ставка должна быть выше минимальной цены",
	counteroffer_request_has_been_sent: "Отправлена заявка на ставку",
	coupon_dispense_sources_both: "Вы можете получить доступ к этой привилегии, повысив статус до Plus или получив купоны с очками в приложении",
	coupon_dispense_sources_points: "Вы можете получить доступ к этой привилегии, получив купоны с баллами в приложении",
	coupon_discpense_sources_points_lottery_both: "Эту выгоду можно получить в магазине очков или в лотерее в приложении.",
	coupon_discpense_sources_points_all: "Это преимущество включено в BUFF Plus или может быть получено в магазине очков или в лотерее в приложении.",
	coupon_dispense_sources_vip: "Вы можете получить доступ к привилегиям, улучшив аккаунт до Plus",
	coupon_dispense_sources_lottery_both: "You can get access to this benefit by upgrading to Plus or gaining from the points lottery in APP",
	coupon_dispense_sources_lottery: "This benefit can be gained from the points lottery on App",
	go_to_point_lottery: "To use this feature, you will need to activate the Quantity Observer benefit which can be gained from the points lottery.",
	create_a_package_of_trading: "Успешно",
	create_buying_success: "Успешно",
	csgo_deposit_notice: 'Из-за изменений в правилах торговли в CS:GO/DOTA2, предметы будут доступны для продажи через 7 дней.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO/DOTA2交易机制改动</a>',
	currently_does_not_support_the: "Такой номер карты в настоящее время не поддерживается. Измените карту.",
	currently_does_not_support_the_and_change: "Выберите банк вручную",
	currently_have_to_wait_for: "Отзыв все еще ожидает вашего ответа. Если все еще нужно отправить отзыв, перейдите в дополнительный раздел.",
	day: "День",
	days: "дней",
	delete_confirmation: "Подтверждение",
	delete_failed: "Не удалось выполнить",
	delivery_prompt: "Уведомление",
	delivery_timeout: "Срок отправки истек",
	deposit_backpack: "Внести",
	deposit_failed: "Не удалось выполнить",
	deposit_instructions_confirm: "Внести",
	deposit_instructions_message: "ситуация суммирования. Будет считаться одним предметом только при внесении в рюкзак BUFF. При внесении укажите количество как 1.",
	deposit_instructions_title: "Инструкции по внесению",
	description: "Описание",
	detect_fail_try_later: "Определение не удалось, попробуйте позже",
	detected_you_are_using_steam: "Вы должны зайти через Steam Чтобы защитить аккаунт, нам нужно проверить номер телефона.",
	detected_you_are_using_sms: "Для защиты безопасности вашей учетной записи нам необходимо проверить ваш Steam.",
	detection_failed_please_try_again: "Определение не удалось, попробуйте позже",
	detects_network_anomalies_please_try: "Ошибка сети, попробуйте позже.",
	detects_that_you_are_also: "Вы еще не привязали Steam, сначала привяжите.",
	determine_the_selected_accessories_to: "Вы уверены, что хотите исключить эти предметы из списка?",
	determine_use_store_name_coupon: "Для переименования требуется израсходовать 1 купон на переименование магазина, вы уверены, что хотите этого?",
	determined_to_be_removed_from: "Вы уверены, что хотите отменить свой набор?",
	disable_antiscam: "Система более не будет перехватывать ложные предложения, будьте бдительны и помните о мошенниках.",
	disable_sms_notification_alert: "После отключения этой функции вы больше не будете получать СМС-уведомления о заказах. Чтобы оперативно обрабатывать заказы, следите за пуш-уведомлениями приложения.",
	do_not_exceed_24_characters: "Не более 24 символов",
	download: "Загрузить",
	edit_description: "Изменить описание",
	edit_notes: "Редактировать примечания",
	edit_the_description: "Изменить описание",
	ejzb_auth_title: "Данный платеж требует подтверждения личности",
	enter_the_verification_code: "Введите код",
	error_code: "Код ошибки:",
	error_picture: "Ошибка, загружайте изображения в формате jpeg или png",
	expired_coupon_switch: "Срок действия купона истек, и он будет аннулирован в случае замены или отмены.",
	failure_to_modify: "Не удалось выполнить",
	feedback_success: "Успешно",
	for_the_protection_of_your: "Для защиты вашего аккаунта нам требуется проверить аккаунт Steam, привязанный к этому аккаунту.",
	fraud_notice: "Остерегайтесь мошенников, проверьте, создан ли у вас ключ API. Если он был создан злоумышленниками, а не вами, удалите его и немедленно измените пароль Steam.",
	get_code: "Получить код",
	get_in: "Получение",
	get_steam_trading_link: "Получить торговый URL",
	get_the_package_deal_failed: "Не удалось выполнить",
	get_the_verification_code: "Получить код",
	gift_card_buy_success: "Успешно! Сообщите получателю код погашения подарочной карты. Также его можно проверить в «Моих купонах».\nИмя пользователя получателя: {{nickname}}\nКод погашения: {{sn}}",
	gift_card_query_title: "Уведомление",
	gift_card_receiver_info: "Аватар и имя пользователя BUFF",
	gift_card_receiver_nickname_error: "Такое имя пользователя BUFF не существует",
	go_to_bind: "Привязать",
	go_to_bind_card: "Привязать",
	go_to_check: "Проверить",
	go_to_market: "Обзор рынка",
	go_to_set: "Установлен",
	go_to_settings: "Установлен",
	go_to_verify: "Перейти к подтверждению",
	go_to_view: "Смотреть",
	greater_than_the_extraction_amount: "Превышено",
	has_been_sent: "Отправлено",
	has_been_used: "Использовано",
	have_not_modify_store_name: "Вы не изменили название магазина",
	hour: "час",
	hours: "часов",
	i_first_look_at_the: "Посмотрите",
	i_know: "Я знаю",
	i_think_again: "Подумайте еще раз",
	id_card_number_errors_please: "Неверный номер удостоверения личности, введите еще раз",
	id_number_can_not_be: "Поле «Номер удостоверения личности» не может быть пустым",
	in_order_to_your_funds: "Для безопасности аккаунта введите следующие данные",
	input_content_too_long_to_40_words: "Слишком длинное сообщение, должно быть не более 40 слов",
	inspecting: "Проверка, попробуйте позже",
	instrongmy_counterofferstrongattention_counteroffer_status_the: 'После принятия ставки продавцом и отправки предложения вам нужно перейти в <strong>«Историю покупок»</strong>, чтобы принять предложение, в противном случае в пользу продавца будет удержано <strong class="c_Yellow">2%</strong> от суммы ставки в качестве компенсации.',
	is_being_processed_you_can: "Обрабатывается, последние действия см. в архиве вывода средств.",
	is_being_uploaded: "Загрузка...",
	it_detects_your_steam_account: "Ваш аккаунт Steam подходит для торговли.",
	it_is_determined_to_cancel: "Вы уверены, что хотите отменить отправку?",
	items_on_the_shelves_successful: "Успешно",
	jewelry: "Предмет",
	less_than: "не менее",
	listing_instructions_confirm: "Продолжить выставление",
	listing_instructions_message: "ситуация суммирования, можно выставить только один из них. Вы можете продолжить выставлять другие части после завершения транзакции или удаления из списка на продажу.",
	listing_instructions_title: "Инструкции по выставлению",
	login: "Войти",
	login_register: "Войти/Зарегистрироваться",
	login_with_password: "Войти с паролем",
	login_with_sms: "Вход по СМС",
	manual_cert_finish: "Успешно",
	manual_cert_processing: "На рассмотрении",
	manual_cert_upload_pic: "Загрузите скриншот страницы аккаунта Alipay с вашим настоящим именем и удостоверение личности",
	member: " предметы",
	minimum_price_can_not_be: "Минимальная цена не может быть выше максимальной",
	minimum_value_can_not_be: "Минимальное значение не может быть больше максимального",
	minute: " минута ",
	minutes: " минут ",
	modify_the_price: "Изменить цену",
	modify_the_success: "Успешно",
	must_allow_epay_or_alipay: "Вы должны принять один из способов оплаты Alipay и WeChat",
	need_to_first_agree_to: "Сначала согласитесь с соглашением об оплате",
	network_error: "Ошибка сети, попробуйте позже.",
	network_request_failed: "Сетевой запрос не удался",
	next_page: "Следующая страница",
	nickname_modify_too_frequently_notice: "Слишком частая смена, изменить можно через {{time}}",
	no_available_items: "Нет доступных предметов",
	no_coupon_to_use: "Купонов нет",
	no_field_for_more_patch: "Нет больше места для нашивок",
	no_field_for_more_sticker: "Нет больше места для наклеек",
	up_to_4_fixed_sticker: "В заказе по слоту можно применить до 4 наклеек",
	no_longer_prompt: "Не напоминать больше",
	no_meet_the_requirements_of: "Отвечающих требованиям предметов нет",
	no_related: "Сопутствующие предметы отсутствуют",
	not_found_to_contain_the: "Результат поиска пуст",
	not_my_phone_number_please: "Не мой номер телефона?",
	not_support_credit_card: "Кредитная карта не поддерживается",
	not_use_coupon: "Не использовать",
	notes: "Примечания",
	notes_desc: "Заметки (лично):",
	notes_exceed_max_len: "Добавьте не более 40 символов. Это не описание предмета и видно только вам.",
	number: "Номер:",
	buff_the_sale_price: "Источники данных",
	buff_sale_min_price: "листинговые цены",
	buff_sale_price: "Цена продажи",
	buff_sale_num: "количество",
	of_buying_ityuan: "покупку?￥",
	off_the_shelves_results: "Результат",
	ok: "OK",
	on_frame_failure: "Не удалось выполнить",
	out_collection: "Отменить набор",
	package_deal: "Пакетная продажа",
	packaged_transaction_within_the_test: "Эта функция недоступна.",
	page_size: "Число на странице",
	page_temporarily_does_not_support: "Страница не поддерживает оптовые покупки. Перейдите в приложение BUFF.",
	paid_success: "Оплачено",
	pattern_template: "Паттерн",
	pay_failed: "Не удалось оплатить",
	payment: "Оплата",
	payment_system_is_busy_please: "Платежная система занята, проверьте результат в «Истории покупок».",
	piece_of_goods: "предметы",
	piece_of_goods_please_go: "Проверьте историю покупок",
	platform_name: "Рынок скинов BUFF163",
	please_agree: "Сначала проверьте соглашение.",
	please_agree_to_the_service: "Сначала согласитесь с сервисным соглашением.",
	please_be_patient: "ожидайте",
	please_choose_coupon: "Купон",
	please_choose_to_be_a: "Выберите предметы",
	please_choose_to_be_on: "Выберите предметы",
	please_do_the_safety_confirmation: "Пройдите проверку и войдите",
	please_enter: "Введите ",
	please_enter_image_verification_code: "Введите проверочный код изображения",
	please_enter_or_select_the: "Введите или выберите сумму пополнения\\n",
	please_enter_pricing: "введите цену",
	please_enter_the_account_password: "Введите пароль",
	please_enter_the_auto_logoff: "Введите время до автоматического отключения от сети",
	please_enter_the_correct_invite: "Введите верный код приглашения",
	please_enter_the_netease_mobile: "Введите номер телефона",
	please_enter_the_question_content: "Введите текст обратной связи",
	please_enter_the_redemption_code: "Введите код",
	please_enter_the_registered_phone: "Введите номер мобильного телефона",
	please_enter_the_sms_verification: "Введите код",
	please_enter_the_verification_code: "Введите код",
	please_enter_your_steam_trade: "Введите торговый URL",
	please_exchange_store_name_coupon_at_app: "Обменяйте купон на переименование магазина в приложении BUFF",
	please_fill_out_the_trading: "Введите торговый URL",
	please_get_a_sms_verification: "Сначала получите код",
	please_get_a_verification_code: "Сначала получите код",
	please_go_to_buff_the: "Покупка прошла успешно, пожалуйста, отправьте свое предложение через приложение в течение 30 минут",
	please_go_to_my_sell: "Отправьте в «Мои продажи»",
	please_go_to_send_offer: "Нажмите «Подтвердить», чтобы создать предложение.",
	please_in_the_backpack_view: "Проверьте в рюкзаке.",
	please_input_01000_between_the: "Введите шаблон изображения от 0 до 1000",
	please_input_store_name: "Введите название магазина",
	please_input_the_correct_mailbox: "введите свое действующий email",
	please_modify_the_nickname: "Смените имя пользователя",
	please_select_deposit_item: "Выберите предметы",
	please_select_from_the_available: "Выберите доступный купон",
	please_select_item: "Выберите предметы",
	"please_select_recharge_way\\n": "Выберите способ пополнения\\n",
	please_select_the_bank_account: "Выберите банковский счет",
	"please_select_the_card\\n": "Выберите банковскую карту\\n",
	please_select_the_you_want: "Выберите предметы",
	please_select_to_ship_the: "Выберите предметы",
	please_tick_the_below_statement: "Отметьте утверждение ниже",
	please_upload_manual_cert: "загрузите изображение",
	please_upload_picture: "Загрузите изображение",
	please_wait: "Подождите...",
	please_wait_for_seller_to: "Подождите, пока продавец отправит предложение и примите его.",
	please_wait_for_the_seller: "Подождите, пока продавец отправит предложение. После этого вам нужно принять предложение",
	please_wait_patiently_have_been: "Ожидайте, время ожидания",
	pluar_s: "s",
	pmost_can_only_be_bound: "Можно привязать не более",
	premium_buy_fail: "Купить не удалось, попробуйте позже",
	premium_buy_success: "Premium куплен успешно",
	premium_confirm_leave: "Выйти",
	premium_continue_to_pay: "Продолжить платеж",
	premium_expired_content: "Срок действия вашего членства истек {{date}}. Для обновления привилегий можно продлить членство.",
	premium_expired_renew_now: "Обновить сейчас",
	premium_havent_successfully_paid: "вы еще не завершили оплату, оплатите как можно скорее.",
	premium_waiting_for_payment: "ожидайте оплаты",
	premium_will_expire_content: "Срок действия вашего членства истекает {{date}}. Вы потеряете свои привилегии членства, такие как эксклюзивный идентификатор, проверка на сервере и расширенный лимит списка.",
	press_and_hold_the_slider: "Удерживая бегунок, передвигайте его, чтобы решить головоломку выше",
	prev_page: "Предыдущая страница",
	preview_screenshots: "Скриншоты",
	price_must_be_greater_than: "Цена не должна быть выше: ",
	private_transaction_within_the_test: "Эта функция недоступна.",
	private_transactions: "приватная продажа",
	prompt: "Совет",
	purchase: "Покупка",
	purchase_failed: "Не удалось выполнить",
	purchase_failure_reason_as_follows: "Ошибка",
	purchase_price_not_greater_than: "Цена не может быть выше ",
	purchased: "Куплено",
	quantity: "Количество:",
	ranking_total_ranking: "Общий рейтинг",
	re_authorisation: "сбросить",
	reacquire_the_print_data: "Повторно получить данные наклейки",
	receive_sms_verification_code: "Получен СМС-код.",
	recharge_failed: "Не удалось выполнить",
	recharge_successful: "Успешно",
	recharge_with_cash_only_support: "Для пополнения и вывода средств поддерживаются только дебетовые карты",
	recharge_yuan: "Внести ￥",
	recommended_use_of_the_netease: 'Рекомендуем использовать ускоритель NetEase UU,<a href="/help#steam_network">查看更多解决方案</a>',
	reconfirm: "Подтвердить еще раз",
	refresh: "Обновить",
	refresh_in_the: "Обновить...",
	refreshing: "Обновить",
	register_a_new_account: "зарегистрировать новый аккаунт",
	registration: "Зарегистрироваться",
	remain_withdrawal_count_today: "Количество выводов, оставшихся на сегодня:",
	reminder: "Напоминание",
	replicated: "Скопировано",
	reply_success: "Успешно",
	request: "Создается",
	request_in_queue: "Система занята, попробуйте позже",
	require_minimal_packaging_of_two: "Нужно упаковать не менее двух предметов",
	resend: "Отправить повторно",
	retrieval_failure: "Не удалось вывести",
	retrieve_the_process_description: "Описание процесса восстановления",
	reupload: "Загрузить повторно",
	sale_amount: "Сумма продажи",
	sale_amount_yuan: "Сумма продажи: ",
	sale_number_: "Номер продажи: ",
	save: "Сохранить",
	scratch_sticker_notice: "После размещения на рынке убедитесь, что информация о наклейках соответствует инвентарю. Удаление наклеек перед отправкой приведет к блокировке вашего аккаунта.",
	search_result: "Результат",
	seconds: " секунд",
	select_to_change_the_price: "Выберите предметы",
	select_to_retrieve_the_goods: "Выберите предметы",
	select_up_to_200_pieces: "Выберите до 200 предметов",
	selling_num: "{{num}} в продаже",
	send_a_verification_code_failed: "Не удалось отправить проверочный код",
	sent_successfully_please_note_the: "Успешно отправлено",
	set_success: "Успешно",
	set_the_boot: "Руководство",
	set_to_fail: "Не удалось выполнить",
	set_up_steam_trade_url: "Установить торговый URL Steam",
	set_up_trading_links: "Настроить торговый URL",
	settings_failed_please_try_again: "Не удалось выполнить",
	shelve_failed: "Не удалось выполнить",
	shelve_notice: "Отправьте в течение 12 часов после оплаты покупателем, иначе предмет будет удален из списка, а ваша функция продаж будет отключена.",
	shelve_success: "Успешно",
	shelves_successful: "Успешно",
	since_the_csgo_official_trading: 'Из-за изменения правил торговли в CS:GO предметы нельзя вернуть 7 дней после внесения.<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO交易机制改动</a>',
	skip_maybe_next_time: "Пропустить",
	slogan: "Поддерживаются такие игры, как CS:GO, DOTA2 и пр.",
	sold_number_of_pieces: "Номер продажи",
	some_etc: "{{count}} предметов",
	split_pay_cancel_order_content: "Отменить покупку? Не оплачивайте повторно после отмены.",
	split_pay_cancel_order_title: "Отменить покупку",
	split_pay_confirm_leave: "Отменить покупку",
	split_pay_continue_to_pay: "Не сейчас",
	split_pay_max_amount_invalidate: "Не выше {{amount}}",
	split_pay_min_amount_invalidate: "Не менее {{amount}}",
	steam_trade_limit: "В данный момент с вашего аккаунта Steam торговля невозможна. См. справку Steam.",
	sticker_copy: "Копировать",
	sticker_search_entry: "Применено",
	weapon_case_entry: "Оружейный кейс",
	in_collection: "Набор",
	item_contained: "Содержащиеся предметы",
	an_rare_special_item: "Чрезвычайно редкий особый предмет",
	submitted: "Отправлено",
	successful_supply: "Успешно",
	successful_upload: "Успешно",
	successfully_submitted: "Успешно",
	supply_failure: "Не удалось выполнить",
	supply_max_limit: "Передать до 50 предметов одновременно",
	supply_success: "Успешно",
	sure_you_want_to_delete: "Вы уверены, что хотите удалить эту карту?",
	system_busy_error: "Система занята, попробуйте позже",
	termination_buying: "Отменить покупку",
	the_account_can_be_withdrawal: "Вывод невозможен, недостаточный баланс BUFF-Прочие",
	the_amount_of_recharge_need: "Сумма должна быть числом",
	the_authentication_is_successful: "Успешно",
	the_bank_card_number_can: "Поле «Номер банковской карты» не может быть пустым",
	the_bank_card_number_errors: "Неверный номер банковской карты, введите еще раз",
	the_binding_is_successful: "Успешно",
	the_content_of_the_input: "Слишком длинное сообщение, должно быть не более 40 слов",
	the_current_balance_of_dollar: ", текущий баланс ￥",
	the_current_page_is_no: "Нет предметов",
	the_degree_of_wear_get: "Получение...",
	the_goods_can_not_a: "Цена на предмет не может быть установлена автоматически, введите ее",
	the_goods_is_not_buying: "Предмет нельзя купить.",
	the_lack_of_balance: "Недостаточно средств",
	the_maximum_allowable_amount_of: "Максимально допустимая сумма пополнения",
	the_minimum_allowable_amount_of: "Минимально допустимая сумма пополнения",
	the_modified_price_of_success: "Успешно",
	the_payment_is_successful: "Успешно",
	the_phone_number_cannot_be: "Поле «Номер телефона» не может быть пустым",
	the_phone_number_has_been: "Изменился номер телефона?",
	the_steam_account_has_been: "Был ли изменен Steam? Пожалуйста, ",
	the_phone_number_is_incorrect: "Неверный номер телефона, введите еще раз",
	the_phone_receives_the_verification: "Получен код подтверждения",
	the_picture_is_being_resolved: "Проверяется, щелкните, чтобы просмотреть позже",
	the_price_can_not_be: "Цена не может быть выше: ",
	the_purchase_amount_can_not: "Не может превышать количество предметов, соответствующих условиям.",
	the_quote_failed_to_send: "Не удалось выполнить: ",
	the_real_name_can_not: "Поле настоящего имени не может быть пустым",
	the_recommended_bit_is_already: "Рекомендованная позиция заполнена",
	the_set_of_recommended_items: "Рекомендовать",
	the_shelves: "Исключить из списка",
	the_shelves_after_the_goods: "Вы уверены, что хотите исключить эти предметы из списка?",
	the_system_is_busy: "Система занята",
	the_system_is_busy_please: "Система занята, проверьте в истории покупок",
	the_system_is_busy_you: "Система занята, проверить ход перезаряда можно в истории перезаряда.",
	the_system_is_busyplease_try: "Система занята, попробуйте позже",
	the_system_supports_the_maximum: "Система поддерживает до 64 символов.",
	the_validation_is_successful: "Успешно",
	the_verification_code_is_incorrect: "Неверный проверочный код",
	there_goods_is_not_input: "Имеются предметы без цены",
	tied_the_card_fails_please: "Не удалось. Подтвердите правильность введенной информации.",
	timeout: "Превышено время",
	to_bind: "Привязать",
	to_check: "Проверить",
	to_guarantee_your_safety_of: "Введите свой номер телефона",
	to_obtain_the_dynamic_code: "Не удалось выполнить",
	to_receive_the_success: "Успешно",
	to_shipping: "Отправить",
	to_steam: "Подключить Steam",
	to_view_figure: "Скриншот",
	trade_url_setting_successful: "Успешно",
	trading_link_format_error: "Ошибка формата торгового URL",
	unbound_steam: "Сначала подключите аккаунт Steam",
	unbound_steam_notice: "Вы еще не привязали Steam, сначала привяжите.",
	unbound_steam_trading_link_whether: "Не привязанный торговый URL Steam, сначала настроить?",
	undelivered_notice: "Поскольку вы не отправили вовремя в предыдущий раз, вы не сможете продавать {{hours}} часов {{minutes}} минут.",
	unpaid_amount: "Неоплаченная сумма",
	unset_price_item: "Имеются предметы без цены",
	unuse_coupon_state: "Неиспользованные",
	up_to_200_items: "Выберите до 200 предметов",
	"upload_success!_your_players_show": "Успешно загружено! Ваши скины просматривают",
	urs_password_login_need_verify: "Чтобы защитить аккаунт, нам нужно проверить мобильный счет.",
	used_coupon_state: "Использовано",
	user_asset_admin_frozen_notification: "Часть денежных средств была заморожена из-за подозрительных операций, дайте обратную связь.",
	user_login: "Войти/Зарегистрироваться",
	user_registration: "Зарегистрироваться",
	valuation: "Оценка:",
	verification_code_cannot_be_empty: "Поле «Код» не заполнено",
	verify: "Проверить",
	verify_now_btn_text: "Подтвердить сейчас",
	verify_tips: "Уведомление",
	verify_tips_text: "Мы обновили свои кошельки, чтобы повысить безопасность средств, перед выводом пройдите проверку личности.",
	view_a_player_show_please: "Сначала войдите",
	view_history_please_login: "Сначала войдите",
	view_more: "Больше",
	view_more_long_time_exchange: "Обменять",
	view_more_long_time_of: "Для просмотра долгосрочных ценовых тенденций подключите услугу «Обозреватель».",
	view_more_long_time_of_for_premium: "Чтобы увидеть ценовую тенденцию за 6 месяцев, получите BUFF Plus.",
	view_my_steam_inventory: "Просмотр инвентаря Steam",
	view_price_trends_please_login: "Сначала войдите",
	view_top_bookmarked_please_login: "Сначала войдите",
	view_wear_ranking_please_log: "Сначала войдите",
	waiting_for_payment: "ожидайте оплаты",
	whether_the_problem_has_been: "Проблема решена?",
	whether_to_terminate_the_purchase: "Прервать текущее действие как {{progress}}?\n{{refund_desc}}",
	will_be_returned_to_origin: "{{money}} будет возвращена на ваш счет в течение 30 минут.",
	will_be_returned_to_you_buff_b: "{{money}} будет возвращено на ваш баланс BUFF",
	withdraw_cash_price_of_dollar: "Вывод средств ￥",
	withdraw_the_maximum_amount_of: "Максимальная сумма вывода составляет",
	withdraw_verify_tips: "Подтверждение вывода",
	withdraw_verify_tips_text: "Эта банковская карта не прошла проверку, перед выводом средств завершите проверку.",
	withdrawal_failure: "Не удалось выполнить",
	withdrawal_has_been_filed: "Отправил заявку на вывод",
	withdrawal_minimum_amount_is: "Минимальная сумма вывода составляет",
	years: "Год",
	you_can_recharge_in_a: "Вы можете проверить ход в истории пополнений.",
	you_have_new_orders_need: "У вас новый заказ на отправку.",
	you_have_yet_to_bind: "Вы еще не привязали торговый URL Steam, перейдите в настройки",
	you_havent_successfully_paid_the: "Вы не оплатили, заказ может быть оплачен в течение 3 минут, оплатите как можно скорее.",
	you_must_be_over_18: "Чтобы пользоваться нашим сервисом, вам должно быть не менее 18 лет.",
	your_buying_price_is_higher: "Цена вашего заказа на покупку выше рыночной цены. Продолжить?",
	your_current_steam_account_cant: "Нельзя торговать в текущем аккаунте Steam. См. в справке.",
	your_mobile_phone_account_occurs: "Мобильный аккаунт изменен. Чтобы защитить аккаунт, нам нужно проверить мобильный счет.",
	your_phone_account_through_a: "Ваш мобильны аккаунт изменился, и нам нужно проверить привязанные аккаунт Steam.",
	your_steam_account_halt: "Обнаружено, что продажи с вашего аккаунта Steam приостановлены",
	your_steam_account_tradable: "Ваш аккаунт Steam подходит для торговли.",
	your_steam_acctoun_trade_limit: "Обмен с вашего аккаунта Steam невозможен",
	your_steam_trade_url_invalid: "Срок действия вашего торгового url истек, получите новый в Steam",
	yuan: "юань",
	refresh_success: "Успешно",
	cs2_inspect_input_share_link: "вставьте ссылку на общий доступ к товару здесь",
	cs2_inspect_success: "Проверяется, щелкните, чтобы просмотреть позже",
	cs2_inspect_finish: "Сгенерировано, нажмите, чтобы просмотреть.",
	cs2_inspect_delete: "Удалено",
	copy_to_clipboard_success: "Ссылка на скриншот успешно скопирована в буфер обмена",
	cs2_inspect_error: "Предмет невозможно проверить",
	select_export_option: "Пожалуйста, выберите вариант экспорта",
	select_export_time: "Пожалуйста, выберите диапазон времени экспорта",
	export_bill_order_success: "Обработка... Вы будете проинформированы о завершении. Вы можете просмотреть экспорт в истории загрузок.",
	select_start_time: "Выберите",
	select_end_time: "Выберите",
	datepicker_language: "en-US",
	export_time_invalid: "Время окончания должно быть позже времени начала.",
	login_steam: "Подключить Steam",
	kyc_left_count: "{{n}} times left",
	verify_by_other_methods: "Verify by other methods",
	record_timerange_tip_default: " ",
	record_timerange_tip: "Показать записи за последние 12 месяцев и применить фильтры для просмотра большего количества",
	record_timerange_tip_with_time_filters: "Показать записи только между {{start_time}} и {{end_time}}",
	record_timerange_tip_without_time_filters: "Показать записи за последние 12 месяцев",
	buy_order_offline_title: "Статус заказа на покупку - offline",
	buy_order_offline_message: "Ваш статус заказа на покупку «Не в сети». Ваши заказы на покупку скрыты на торговой площадке.",
	total: "Общий",
	paid: "Оплаченный",
	bundle_overview: "Обзор",
	pieces: "предметов",
	bundle_detail: "Детали пакета",
	reference_price: "Рекомендуемая цена",
	total_reference_price: "Рекомендуемая цена",
	avg_price: "Средняя цена",
	min_asset_count: "min",
	max_asset_count: "max",
	min_paintwear: "min",
	max_paintwear: "max",
	bundle_inventory_create_order_count: "Bundles listed in quantities ranging from 2 to 200",
	bundle_pieces: "{{count}} items",
	wear: "Износ:",
	in_the_game_view: "Проверить в игре",
	bundle_analysis: "Проверка",
	in_cms_view: "проверка на сервере",
	paid: "Оплаченный",
	paymethod_description_more: "Ещё",
	buy: "Купить",
	sticker_paintwear: "Sticker wear: ",
	premium_rate_tips: "(Sale price-Float range price floor)/Sticker price",
	reprice_buy_order_successfully: "Успешная переоценка",
	no_buy_quick_price: "Нет справочной цены, пожалуйста, оцените ее самостоятельно.",
	reprice_buy_order_cancel_success_create_fail: "Переоценка не удалась, и ордер на покупку был отменен. Пожалуйста, воссоздайте заказ на покупку.",
	reason: "Причина",
	shop_state_offline_popup_title: "Магазин не в сети",
	shop_state_offline_popup_content: "Ваш магазин не в сети, список ваших предметов не виден другим пользователям. Перейдите в настройки магазина, чтобы установить.",
	please_select_weapon_type: "Пожалуйста, выберите Тип",
	please_select_weapon_name: "Пожалуйста, выберите Оружие",
	please_select_weapon_name_and_type: "Пожалуйста, выберите тип и оружие",
	please_select_weapon_and_skin: "Пожалуйста, выберите оружие и скин\n",
	please_select_paint_seed: "Пожалуйста, выберите Paint Seed",
	add_sticker: "наклейка",
	not_support_slot: "Этот слот не поддерживается",
	copy: "Копировать",
	copy_success: "Скопировано",
	select_name: "Выберите оружие",
	to_market: "Рынок"
});
i18nData.updateData("zh", {
	"1_seconds": "1秒",
	_piece_of_goods_has: " 件饰品已被买家购买支付中，下架失败",
	_piece_of_goods_off: " 件饰品下架成功",
	a_period_of_time_: "一段时间: ",
	a_picture_is_not_uploaded: "有图片未上传成功",
	a_successful_purchase: "购买成功",
	access_to_the_steam_encounters: "访问遇到问题？",
	account_can_be_withdraw_the: "账户内可提现的BUFF余额-其他不足，无法提现",
	acknowledgment_is_bound_to_the: "确认绑定到这个Steam帐号吗？\nSteam昵称：",
	acquisition_fee_failed_please_try: "获取手续费失败，请稍后再试",
	add_a_description: "添加描述",
	add_description: "添加描述",
	add_in_5_minutes_to: "请在5分钟内前往网易BUFF APP购买记录发送报价",
	add_in_the_buyers_payment: "请在买家付款后12小时内手动发货，否则系统将下架该类饰品并扣除信用值",
	add_the_other_card: "添加其他银行卡",
	all: "全选",
	already_have_an_account_click: "已有帐号？点这里登录",
	analysis: "解析中",
	analysis_figure: "检视图",
	api_key_format_error: "API key格式错误",
	api_key_successfully_set: "API key设置成功",
	application_authentication_failure_please_contact: "申请认证失败，请联系客服人员",
	artificial_assist: "人工协助",
	authentication: "身份验证",
	back_for_refresh: "再回到当前页面点击刷新按钮",
	backpack_capacity_is_insufficient_can: "背包容量不足，无法继续购买",
	bargain_price_must_be_lower: "还价价格必须低于饰品在售价格",
	being_prepaid_in: "正在充值中",
	beware_of_phishing_scams_please: "慎防钓鱼诈骗，请先检查Steam账号是否被创建API key！如发现被恶意创建，请马上删除并更改密码。",
	binding_acknowledgment: "绑定确认",
	binding_steam: "绑定Steam",
	binding_steam_before_you_can: "绑定Steam后才可以使用BUFF账号拥有更多权限。",
	binding_transaction_link_the_immediate: "绑定交易链接，立即体验BUFF交易",
	bound_to_fail: "绑定失败",
	buff_backpack_capacity_is_insufficient: "BUFF背包容量不足，已调整为可购买最大数量",
	buy_price_cannot_be_less: "求购价格不能小于0.01",
	buy_pubgrecycled_transactionitems_not_get: "购买PUBG(回收交易)的物品无法取回到游戏中，需要等待PUBG游戏官方开放个人交易才可取回。",
	buy_success: "购买成功",
	buying_in_bulk_quantity_can: "批量购买数量不能超过",
	buying_in_bulk_results: "批量购买结果",
	can_not_supply_your_own: "不能供应自己求购的物品",
	cancel: "取消",
	cancel_buying_success: "取消求购成功",
	cancel_delivery_success: "取消发货成功",
	cancel_recommend: "取消推荐",
	cancel_the_shipment: "取消发货",
	cannot_be_resolved_the_goods: "无法解析，该饰品已被出售或网络不好",
	cannot_purchase_your_own_items: "不能购买自己出售的物品",
	card_limit_is_reached: "银行卡达到上限",
	cardsp: "张银行卡",
	century: "世纪",
	change_price_of_failure: "改价失败",
	clear_the_api_key_after: "清除API key后，你的店铺将离线，出售中的饰品将无法被购买。确定要清除吗？",
	click_on_upload_picture: "点击上传图片",
	click_to_collapse: "点击收起",
	click_to_expand: "点击展开",
	close_failed_please_try_again: "关闭失败，请重试",
	complete: "完成",
	confirm: "确认",
	confirm_and_opened: "确认并开通",
	confirm_clear: "确认清除",
	confirm_leave: "确认离开",
	confirm_to_cancel_the_transaction: "确认取消交易",
	confirmation_of_payment: "确认付款",
	"congratulations_to_you!_welcome_to": "恭喜您！欢迎来到BUFF，您可以立马开始交易了！",
	consignment_goods_shelf_will_be: "寄售饰品下架后将返回你的BUFF背包。",
	content_length_can_not_be: "内容长度不能大约1024个字符",
	continue_to_pay: "继续支付",
	counteroffer_price_cannot_be_lower: "还价价格不能低于饰品的最低出价",
	counteroffer_request_has_been_sent: "还价请求已发送",
	create_a_package_of_trading: "创建打包交易成功",
	create_buying_success: "求购发布成功",
	csgo_deposit_notice: '由于V社修改了饰品交易规则，该饰品购买后需要7天才能再次交易，详情查看<a href="/help#csgo_trade_cooldown" target="_blank">CSGO/DOTA2交易机制改动</a>',
	currently_does_not_support_the: "目前不支持该卡号，请更换卡号",
	currently_have_to_wait_for: "当前已有等待客服处理的反馈，如果还需反馈，请前往补充",
	day: "天",
	days: "天",
	delete_confirmation: "删除确认",
	delete_failed: "删除失败",
	delivery_prompt: "发货提示",
	delivery_timeout: "发货超时",
	deposit_backpack: "存入背包",
	deposit_failed: "存入失败",
	description: "说明",
	detect_fail_try_later: "检测失败，请稍后再试",
	detected_you_are_using_steam: "检测到你是用Steam登录，为了保障帐号财产安全，需要验证手机帐号。",
	detected_you_are_using_sms: "为了保障帐号财产安全，需要验证已绑定的Steam帐号",
	detection_failed_please_try_again: "检测失败，请稍后再试",
	detects_network_anomalies_please_try: "检测到网络异常，请稍后再试",
	detects_that_you_are_also: "检测到您还未绑定Steam，继续操作前请先完成Steam账号绑定",
	determine_the_selected_accessories_to: "确定将选中的饰品下架？",
	determined_to_be_removed_from: "确定要移出收藏吗？",
	do_not_exceed_24_characters: "不要超过24个字符",
	edit_description: "编辑描述",
	edit_the_description: "编辑描述",
	enter_the_verification_code: "输入验证码",
	error_code: "错误码：",
	failure_to_modify: "修改失败",
	feedback_success: "反馈成功",
	for_the_protection_of_your: "为保障你的帐号资产安全，需要验证该帐号绑定的Steam帐号",
	fraud_notice: "慎防钓鱼诈骗，请先检查Steam账号是否被创建API key！如发现被恶意创建，请马上删除并更改密码。",
	listing_instructions_title: "上架须知",
	listing_instructions_message: "存在堆叠情况，你只能上架其中的一件。完成交易或下架后，才能继续上架其他部分。",
	listing_instructions_confirm: "继续上架",
	deposit_instructions_title: "存入须知",
	deposit_instructions_message: "存在堆叠情况，存入BUFF背包时仅视为一件处理。存入时请设置数量为1。",
	deposit_instructions_confirm: "继续存入",
	get_in: "获取中...",
	get_steam_trading_link: "获取Steam交易链接",
	get_the_package_deal_failed: "获取打包交易失败",
	get_the_verification_code: "获取验证码",
	go_to_bind: "前往绑定",
	go_to_bind_card: "去绑卡",
	go_to_check: "前往检查",
	go_to_market: "去市场看看",
	go_to_set: "前往设置",
	go_to_settings: "前往设置",
	go_to_verify: "去认证",
	go_to_view: "前往查看",
	greater_than_the_extraction_amount: "大于可提金额",
	has_been_sent: "已发送",
	has_been_used: "已使用",
	hour: "小时",
	hours: "小时",
	i_first_look_at_the: "我先看看",
	i_know: "我知道了",
	i_think_again: "我再想想",
	id_card_number_errors_please: "身份证号错误，请重新输入",
	id_number_can_not_be: "身份证号不能为空",
	in_order_to_your_funds: "为了您的资金和交易安全，请完善以下资料",
	input_content_too_long_to_40_words: "输入的内容太长，请少于40个字",
	instrongmy_counterofferstrongattention_counteroffer_status_the: '在<strong>我的还价</strong>关注还价状态，卖家接受还价并发起报价后，立即前往<strong>购买记录</strong>接受报价，超时未接受报价将扣除<strong class="c_Yellow">2%</strong>还价金额给卖家作为补偿。',
	is_being_processed_you_can: "正在处理中，你可以在提现记录中查看最新进度。",
	is_being_uploaded: "正在上传...",
	it_detects_your_steam_account: "检测到你的Steam账号可以正常交易了",
	it_is_determined_to_cancel: "确定取消发货吗？",
	items_on_the_shelves_successful: "物品上架成功",
	jewelry: "的饰品",
	less_than: "小于",
	login: "登录",
	member: "件",
	pluar_s: " ",
	minimum_price_can_not_be: "最低价不能高于最高价",
	minimum_value_can_not_be: "最小值不能大于最大值",
	minute: "分",
	minutes: "分钟",
	modify_the_price: "修改价格",
	modify_the_success: "修改成功",
	nickname_modify_too_frequently_notice: "修改太频繁，请{{time}}后再修改",
	need_to_first_agree_to: "需要先同意支付协议",
	network_error: "检测到网络异常，请稍后再试",
	network_request_failed: "网络请求失败",
	next_page: "下一页",
	no_available_items: "当前页无可选择上架或存入的饰品",
	no_longer_prompt: "不再提示",
	no_meet_the_requirements_of: "暂无符合要求的饰品",
	no_related: "暂无相关饰品",
	not_found_to_contain_the: "没有搜到包含关键词",
	not_my_phone_number_please: "不是本人的手机号？请寻求",
	not_support_credit_card: "暂不支持信用卡",
	number: "件数：",
	quantity: "件数：",
	buff_the_sale_price: "成交记录",
	buff_sale_min_price: "在售最低",
	buff_sale_price: "成交价格",
	buff_sale_num: "在售数量",
	of_buying_ityuan: "的求购？￥",
	off_the_shelves_results: "下架结果",
	ok: "确定",
	on_frame_failure: "上架失败",
	out_collection: "移出收藏",
	package_deal: "打包交易",
	packaged_transaction_within_the_test: "打包交易内测中，敬请期待",
	page_size: "每页显示数",
	page_temporarily_does_not_support: "网页暂不支持批量购买，请前往APP操作，支持合并报价更便捷。",
	pattern_template: "图案模板",
	pay_failed: "支付失败",
	payment: "支付中",
	payment_system_is_busy_please: "支付系统繁忙，请在购买记录查看支付结果。",
	piece_of_goods: "件饰品",
	piece_of_goods_please_go: "请到购买记录中查看",
	please_agree_to_the_service: "请先同意服务协议",
	please_be_patient: "请耐心等待",
	please_choose_to_be_a: "请选择要私密交易的物品",
	please_choose_to_be_on: "请选择要上架的物品",
	please_do_the_safety_confirmation: "请进行安全确认，输入",
	please_enter: "请输入",
	please_enter_image_verification_code: "请输入图片验证码",
	please_enter_or_select_the: "请输入或选择充值金额\\n",
	please_enter_pricing: "请输入定价",
	please_enter_the_account_password: "请输入帐号密码",
	please_enter_the_auto_logoff: "请输入自动下线时间",
	please_enter_the_correct_invite: "请输入正确的邀请码",
	please_enter_the_netease_mobile: "请输入网易手机帐号",
	please_enter_the_question_content: "请输入问题内容",
	please_enter_the_redemption_code: "请输入兑换码",
	please_enter_the_registered_phone: "请输入注册手机号",
	please_enter_the_sms_verification: "请输入短信验证码",
	please_enter_the_verification_code: "请输入验证码",
	please_enter_your_steam_trade: "请输入您的Steam交易链接",
	please_fill_out_the_trading: "请填写交易链接",
	please_get_a_sms_verification: "请先获取短信验证码",
	please_get_a_verification_code: "请先获取验证码",
	please_go_to_buff_the: "供应成功，请你在30分钟内前往APP发送报价",
	please_go_to_my_sell: "请前往我的出售发货",
	please_go_to_send_offer: "点击确认开始发起报价",
	please_in_the_backpack_view: "请在背包中查看。",
	please_input_01000_between_the: "请输入0-1000之间的模板编号",
	please_input_the_correct_mailbox: "请输入正确的邮箱",
	please_modify_the_nickname: "请修改昵称",
	please_select_deposit_item: "请选择要存入的物品",
	please_select_from_the_available: "请选择可用的提现券",
	please_select_item: "请选择要上架的物品",
	"please_select_recharge_way\\n": "请选择充值方式\\n",
	please_select_the_bank_account: "请选择银行账户",
	"please_select_the_card\\n": "请选择银行卡\\n",
	please_select_the_you_want: "请选择要下架的物品",
	please_select_to_ship_the: "请选择要发货的饰品",
	please_tick_the_below_statement: "请先勾选下方声明",
	please_upload_picture: "请上传图片",
	please_wait: "请稍候...",
	please_wait_for_seller_to: "请等待卖家发起报价，后续需确认收货",
	please_wait_for_the_seller: "请等待卖家发货，可在购买记录查看进度。",
	please_wait_patiently_have_been: "请耐心等待，已等待",
	pmost_can_only_be_bound: "最多只能绑定",
	press_and_hold_the_slider: "按住滑块，拖动完成上方拼图",
	prev_page: "上一页",
	price_must_be_greater_than: "价格必须大于:",
	private_transaction_within_the_test: "私密交易内测中，敬请期待",
	private_transactions: "私密交易",
	prompt: "提示",
	purchase: "购买中",
	purchase_failed: "购买失败",
	purchase_failure_reason_as_follows: "购买失败",
	purchase_price_not_greater_than: "求购价格不能大于",
	ranking_total_ranking: "排行总榜",
	reacquire_the_print_data: "重新获取印花数据中",
	receive_sms_verification_code: "收到的短信验证码。",
	recharge_failed: "充值失败",
	recharge_successful: "充值成功",
	recharge_with_cash_only_support: "充值与提现只支持储蓄卡",
	recharge_yuan: "充值 ￥",
	recommended_use_of_the_netease: '建议使用网易UU加速器，<a href="/help#steam_network">查看更多解决方案</a>',
	refresh: "刷新",
	refresh_in_the: "刷新中...",
	refreshing: "刷新中",
	register_a_new_account: "注册新帐号",
	registration: "注册",
	remember_me: "10天内免登录",
	agree_prefix_text: "请先阅读并同意以下条款",
	mb_login_clause_error_text: "您需要同意相关条款才能获取",
	reminder: "温馨提醒",
	replicated: "已复制",
	reply_success: "回复成功",
	request: "请求中",
	require_minimal_packaging_of_two: "需要最少打包两件饰品",
	resend: "重新发送",
	retrieval_failure: "取回失败",
	retrieve_the_process_description: "取回流程简介",
	reupload: "重新上传",
	sale_amount: "出售金额",
	sale_amount_yuan: "出售金额: ",
	sale_number_: "出售数量: ",
	save: "保存",
	seconds: "秒",
	select_to_change_the_price: "请选择要改价的物品",
	select_to_retrieve_the_goods: "请选择要取回的饰品",
	select_up_to_200_pieces: "最多选择200件饰品",
	send_a_verification_code_failed: "发送验证码失败",
	sent_successfully_please_note_the: "发送成功，请留意手机短信",
	set_success: "设置成功",
	set_the_boot: "设置引导",
	set_to_fail: "设置失败：",
	set_up_steam_trade_url: "设置Steam交易链接",
	set_up_trading_links: "设置交易链接",
	settings_failed_please_try_again: "设置失败，请稍后再试",
	shelve_failed: "上架失败",
	shelve_notice: "请在买家付款后12小时内发货，否则系统将下架该类饰品并扣除信用值",
	shelve_success: "上架成功",
	shelves_successful: "下架成功",
	since_the_csgo_official_trading: '由于 CS:GO 官方交易规则改动，该饰品购买后需要7天后才能取回，详情查看<a href="/help#csgo_trade_cooldown" target="_blank">CS:GO交易机制改动</a>',
	skip_maybe_next_time: "跳过，下次再说",
	sold_number_of_pieces: "出售件数",
	steam_trade_limit: "你当前Steam帐号无法交易，请查看我们的帮助文档",
	successful_supply: "成功供应",
	successful_upload: "上传成功",
	successfully_submitted: "提交成功",
	supply_failure: "供应失败",
	supply_success: "供应成功",
	sure_you_want_to_delete: "确定要删除该银行卡吗?",
	system_busy_error: "系统繁忙，请稍后再试",
	termination_buying: "终止求购",
	timeout: "超时",
	the_account_can_be_withdrawal: "帐户内可提现的BUFF余额-支付宝不足，无法提现",
	the_amount_of_recharge_need: "充值金额需要是数字",
	the_authentication_is_successful: "认证成功",
	the_bank_card_number_can: "银行卡号不能为空",
	the_bank_card_number_errors: "银行卡号错误, 请重新输入",
	the_binding_is_successful: "绑定成功",
	the_content_of_the_input: "输入的内容太长，请少于40个字",
	the_current_balance_of_dollar: "，当前余额 ￥",
	the_current_page_is_no: "当前页无可选择上架或取回的饰品",
	the_degree_of_wear_get: "磨损度获取中...",
	the_goods_can_not_a: "该饰品无法一键定价，请手动输入",
	the_goods_is_not_buying: "该饰品不可求购",
	the_lack_of_balance: "余额不足",
	the_maximum_allowable_amount_of: "最大允许充值金额是",
	the_minimum_allowable_amount_of: "最小允许充值金额是",
	the_modified_price_of_success: "改价成功",
	the_payment_is_successful: "支付成功",
	the_phone_number_cannot_be: "手机号码不能为空",
	the_phone_number_has_been: "手机号已更换？请寻求",
	the_steam_account_has_been: "Steam账号已更换？请寻求",
	the_phone_number_is_incorrect: "手机号码错误，请重新输入",
	the_phone_receives_the_verification: "手机收到的验证码",
	the_picture_is_being_resolved: "图片正在解析中，请稍后点击查看",
	the_price_can_not_be: "价格不能大于:",
	the_purchase_amount_can_not: "购买数量不能超过满足条件的在售数量",
	the_quote_failed_to_send: "报价发送失败: ",
	the_real_name_can_not: "真实姓名不能为空",
	the_recommended_bit_is_already: "推荐位已满",
	the_set_of_recommended_items: "设为推荐项",
	the_shelves: "下架",
	the_shelves_after_the_goods: "下架后，饰品将返回你的BUFF背包。确定要取消",
	the_system_is_busy: "系统繁忙",
	the_system_is_busy_please: "系统繁忙，请前往购买记录查看",
	the_system_is_busy_you: "系统繁忙，你可以在充值记录中查看该笔充值的最新进度",
	the_system_is_busyplease_try: "系统繁忙,请稍候再试",
	the_system_supports_the_maximum: "系统支持最长姓名为64个字",
	the_validation_is_successful: "验证成功",
	the_verification_code_is_incorrect: "验证码不正确",
	there_goods_is_not_input: "有饰品未输入定价",
	tied_the_card_fails_please: "绑卡失败，请确认你输入的信息无误",
	to_bind: "前往绑定",
	to_check: "前往检查",
	to_guarantee_your_safety_of: "为保障你的资金安全，提现操作需要验证手机短信，请输入BUFF帐号绑定的手机号码",
	to_obtain_the_dynamic_code: "获取动态验证码失败",
	to_receive_the_success: "领取成功",
	to_shipping: "前往发货",
	to_steam: "前往Steam",
	trade_url_setting_successful: "交易URL设置成功",
	trading_link_format_error: "交易链接格式错误",
	unbound_steam: "未绑定Steam",
	unbound_steam_notice: "检测到您还未绑定Steam，继续操作前请先完成Steam账号绑定",
	unbound_steam_trading_link_whether: "未绑定Steam交易链接，是否前往设置？",
	undelivered_notice: "由于你上一次交易未能成功发货，无法上架该类物品还剩：{{hours}}小时{{minutes}}分",
	unset_price_item: "有饰品未输入定价",
	up_to_200_items: "最多选择200件饰品",
	"upload_success!_your_players_show": "上传成功！你的玩家秀正在审核中",
	user_login: "帐号登录/注册",
	user_registration: "用户注册",
	valuation: "估值：",
	verification_code_cannot_be_empty: "验证码不能为空",
	verify: "验证",
	view_a_player_show_please: "查看玩家秀请先登录BUFF",
	view_history_please_login: "查看成交记录请先登录BUFF",
	view_more: "查看更多",
	view_more_long_time_of: '使用积分兑换"价格走势侦察"，查看更长时间饰品价格趋势。',
	view_more_long_time_of_for_premium: "查看6个月的价格趋势，请前往会员页面开通。",
	view_more_long_time_exchange: "前往",
	view_my_steam_inventory: "查看我的Steam库存",
	view_price_trends_please_login: "查看价格趋势请先登录BUFF",
	view_top_bookmarked_please_login: "查看热门关注请先登录BUFF",
	view_wear_ranking_please_log: "查看磨损排行请先登录BUFF",
	waiting_for_payment: "等待支付",
	whether_the_problem_has_been: "是否问题已解决？",
	whether_to_terminate_the_purchase: "是否终止当前进度为{{progress}}的求购？\n{{refund_desc}}",
	withdraw_cash_price_of_dollar: "提现￥",
	withdraw_the_maximum_amount_of: "提现的最高金额为",
	withdrawal_failure: "提现失败",
	withdrawal_has_been_filed: "提现已申请",
	withdrawal_minimum_amount_is: "提现的最低金额为",
	years: "年",
	you_can_recharge_in_a: "你可以在充值记录中查看最新进度。",
	you_have_new_orders_need: "你有新的订单需要发货",
	you_have_yet_to_bind: "你尚未绑定Steam交易链接，请前往设置",
	you_havent_successfully_paid_the: "你还没有支付成功，支付有效期为三分钟，请尽快支付。",
	you_must_be_over_18: "你必须年满18岁才能使用我们的服务。",
	your_buying_price_is_higher: "你的求购价格高于在售价格，可能会买到高于市场价的饰品，确认要付款吗？",
	your_current_steam_account_cant: "你当前Steam帐号无法交易，请查看我们的帮助文档",
	your_mobile_phone_account_occurs: "你的手机帐号发生过换号操作，为了保障帐号财产安全，需要验证手机帐号",
	urs_password_login_need_verify: "为了保障帐号财产安全，需要验证手机帐号",
	your_phone_account_through_a: "您的手机帐号发生过换号操作，需要验证绑定的Steam帐号",
	your_steam_account_halt: "检测到你的Steam账号处于交易暂挂期",
	your_steam_account_tradable: "检测到你的Steam账号可以正常交易了",
	your_steam_acctoun_trade_limit: "检测到你的Steam账号交易受限",
	your_steam_trade_url_invalid: "你的交易链接已经失效，请前往Steam重新获取",
	yuan: "元",
	some_etc: "等{{count}}件饰品",
	buying_num: "{{num}}件需求",
	selling_num: "{{num}}件在售",
	inspecting: "正在解析中，请稍后重试",
	platform_name: "网易BUFF饰品交易平台",
	slogan: "支持DOTA2，CSGO等热门游戏",
	download: "下载",
	check_sticker_wear_in_detail: "印花磨损可在详情页下拉查看，购买前请先确认",
	get_code: "获取验证码",
	login_with_password: "使用密码验证登录",
	login_with_sms: "使用短信验证登录",
	login_register: "登录/注册",
	please_agree: "请先同意用户协议和隐私政策",
	gift_card_buy_success: "成功购买礼品卡！快将礼品卡兑换码分享给获赠人吧，你也可以在我的卡券中查看。\n获赠人BUFF昵称：{{nickname}}\n礼品卡兑换码：{{sn}}",
	gift_card_receiver_nickname_error: "BUFF昵称不存在，请检查是否正确",
	gift_card_receiver_info: "该用户BUFF头像与昵称",
	disable_sms_notification_alert: "关闭该功能后你将不再收到交易短信提醒，请留意APP推送信息并及时处理订单。",
	disable_antiscam: "系统将不再为你拦截仿冒交易报价，敬请提高警惕，谨防交易被劫持诈骗。",
	scratch_sticker_notice: "卖家需要确保上架后饰品印花信息与库存一致，发货前刮印花的行为会导致帐号被封禁。",
	reconfirm: "重新确认",
	continue_selling: "继续上架",
	please_input_store_name: "请输入店铺名称",
	have_not_modify_store_name: "您尚未修改店铺名称",
	determine_use_store_name_coupon: "本次改名需要消耗1张店铺改名券，是否确定修改？",
	please_exchange_store_name_coupon_at_app: "请前往BUFF APP兑换店铺改名券",
	must_allow_epay_or_alipay: "必须接受支付宝付款或微信支付付款中的一个",
	cms_inspect_success_title: "检视须知",
	cms_inspect_success_message: "将打开CS2客户端，该功能禁止用于检视饰品外观外的其他用途。因资源有限，内测期间提供单日10分钟的检视时长。\n\n如连接失败，请检查登录CS2的Steam账号与BUFF绑定的是否一致。\n如需使用蒸汽平台检视，可在账号设置中修改。",
	buy_order_min_price: "最低 {{min_price}}",
	premium_buy_success: "开通会员成功",
	premium_buy_fail: "开通失败，请稍后再试",
	premium_will_expire_content: "会员将于{{date}}过期，过期后将失去会员标识、社区服检视、上架数量扩容等特权，可前往网页续费。",
	premium_expired_content: "会员已于{{date}}过期，继续享受会员特权可前往网页续费。",
	premium_expired_renew_now: "前往续费",
	premium_waiting_for_payment: "等待支付",
	premium_havent_successfully_paid: "你还没有支付成功，请尽快支付。",
	premium_continue_to_pay: "继续支付",
	premium_confirm_leave: "确认离开",
	user_asset_admin_frozen_notification: "账户存在异常操作，部分资金已锁定，如有疑问，请联系客服。",
	remain_withdrawal_count_today: "今天剩余提现次数：",
	please_choose_coupon: "选择优惠券",
	not_use_coupon: "不使用",
	expired_coupon_switch: "该折扣券已过期，若替换或取消使用将作废。",
	no_coupon_to_use: "暂无可用",
	notes: "备注",
	notes_exceed_max_len: "添加不超过40字备注。备注非商品描述，仅自己可见。",
	purchased: "购入",
	submitted: "修改成功",
	edit_notes: "编辑备注",
	add_notes: "添加备注",
	notes_desc: "备注（仅自己可见）：",
	add_notes_desc: "添加备注（仅自己可见）",
	coupon_dispense_sources_both: "可开通会员或在APP积分兑换获得该权益",
	coupon_dispense_sources_lottery_both: "可开通会员或在APP积分抽奖获得该权益",
	coupon_discpense_sources_points_lottery_both: "可在APP积分兑换或积分抽奖获得该权益",
	coupon_discpense_sources_points_all: "可在APP积分兑换、积分抽奖，或开通会员获得该权益",
	coupon_dispense_sources_points: "可在APP积分兑换获得该权益",
	coupon_dispense_sources_vip: "可开通会员获得该权益",
	coupon_dispense_sources_lottery: "可在APP积分抽奖获得该权益",
	go_to_point_lottery: "需要获得“在售数量侦查”券才能查看在售数量走势，该券可通过积分抽奖获得",
	unuse_coupon_state: "未使用",
	used_coupon_state: "已使用",
	preview_screenshots: "预览检视图",
	to_view_figure: "检视图",
	buy_order_wx_pay_unfrozen: "求购发布成功。30天内未成交将自动终止求购，求购金额将原路退回。",
	will_be_returned_to_you_buff_b: "{{money}} 将退回到你的BUFF余额",
	will_be_returned_to_origin: "未求购成功的金额将原路退回，{{money}} 预计半小时内到账",
	split_pay_min_amount_invalidate: "不能低于{{amount}}",
	split_pay_max_amount_invalidate: "不能高于{{amount}}",
	split_pay_cancel_order_title: "取消购买",
	split_pay_cancel_order_content: "确认要取消购买吗？取消后请不要再支付原订单。多次取消可能会导致限制。",
	split_pay_continue_to_pay: "暂不",
	split_pay_confirm_leave: "取消购买",
	unpaid_amount: "待支付金额",
	paid_success: "支付完成",
	go_to_pay: "前往支付",
	scan_qr_code_to_pay: "微信扫码支付",
	paying_detecting: "支付状态检测中",
	gift_card_query_title: "提示",
	cash_detail_alipay: "支付宝充值/收入",
	cash_detail_alipay_small: "(可购买、提现至银行卡)",
	cash_detail_epay: "微信支付收入",
	cash_detail_epay_small: "(可购买、提现至银行卡)",
	balances_detail: "明细",
	currently_does_not_support_the_and_change: "无法识别卡类型，请手动选择",
	search_result: "搜索结果",
	add_a_bank_card: "添加银行卡",
	verify_tips: "提示",
	verify_tips_text: "为提升BUFF用户的资金安全，现已对钱包作全面升级，请完成认证后再提现。",
	withdraw_verify_tips: "提现认证",
	withdraw_verify_tips_text: "该银行卡暂未完成认证，请完成认证后再提现。",
	verify_now_btn_text: "马上认证",
	supply_max_limit: "最多同时供应50件饰品",
	sticker_copy: "复制",
	no_field_for_more_sticker: "请先留出空位以添加印花",
	up_to_4_fixed_sticker: "固定印花位置至多选择4张印花",
	no_field_for_more_patch: "请先留出空位以添加印章",
	sticker_search_entry: "印花搜枪",
	weapon_case_entry: "所属武器箱",
	in_collection: "所属收藏品",
	item_contained: "包含物品",
	an_rare_special_item: "一件极其罕见的特殊物品",
	balance_authorization: "余额额度授权",
	ejzb_auth_title: "当笔支付授权失效或超过限额",
	auth_entry_zhima_title: "支付宝身份认证",
	auth_entry_zhima_text: " ",
	auth_entry_bankcard_title: "银行卡实名认证",
	auth_entry_kyc_title: "护照认证",
	auth_entry_kyc_text: "不支持中国大陆身份证",
	auth_entry_bankcard_text: " ",
	auth_entry_manual_title: "人工实名认证",
	auth_entry_manual_text: "不支持中国大陆身份证",
	manual_cert_upload_pic: "请上传支付宝账户实名页面截图和证件截图",
	balance_authorization_expired: "余额额度授权已过期，",
	re_authorisation: "重新设置",
	manual_cert_processing: "审核中",
	error_picture: "上传错误，请上传jpeg或png格式图片",
	please_upload_manual_cert: "请上传图片",
	auth_success: "授权成功",
	manual_cert_finish: "上传成功",
	request_in_queue: "系统繁忙, 请求排队中，请稍后重试……",
	first_use_epay_balance: "优先使用银行卡余额",
	first_use_alipay_balance: "优先使用支付宝余额",
	manual_cert_title: "人工实名认证",
	manual_cert_please_upload_screenshot: "请上传支付宝账户实名页面截图",
	manual_cert_please_upload_passport_pic: "请上传您的证件照",
	manual_cert_submit: "提交",
	screenshot: "检视图",
	copy_to_clipboard_success: "复制成功",
	on_the_frame: "上架",
	on_sale: "出售中",
	stat_view_count_text: "{{view_count}}次浏览",
	stat_bookmark_count_text: "{{bookmark_count}}人关注",
	stat_bargain_count_text: "{{bargain_count}}次还价",
	order_pay_success_partner: '物品发放进度可在<a href="/market/buy_order/history?game={{game}}">购买记录</a>中查询。物品将以邮件形式在游戏内发放，请及时领取。',
	badlanders_quality_100: "粉",
	badlanders_quality_103: "典藏",
	badlanders_quality_5: "金",
	badlanders_quality_4: "紫",
	badlanders_quality_3: "蓝",
	badlanders_quality_2: "绿",
	badlanders_quality_1: "白",
	refresh_success: "刷新成功",
	recreate_buy_order_message: "你正在以¥{{old_price}}求购该饰品，是否重新以¥{{new_price}}发起求购？",
	recreate: "重新发起",
	cancel_buy_order_and_recreate: "求购取消成功，重新发起失败原因：",
	partial: "部分",
	cs2_inspect_input_share_link: "请填入饰品的分享链接",
	cs2_inspect_success: "图片正在解析中，请稍后点击查看",
	cs2_inspect_finish: "检视图已生成，点击查看",
	cs2_inspect_delete: "已删除",
	cs2_inspect_error: "该饰品无法解析",
	select_export_option: "请选择导出选项",
	select_export_time: "请选择导出时间范围",
	export_bill_order_success: "记录导出中，成功后将系统消息通知，可在申请历史查看",
	select_start_time: "选择起始日期",
	select_end_time: "选择截至日期",
	datepicker_language: "zh-CN",
	export_time_invalid: "截至时间需晚于起始时间",
	login_steam: "前往Steam",
	kyc_left_count: "剩余提交次数：{{n}}次",
	verify_by_other_methods: "使用其他方式实名认证",
	record_timerange_tip_default: " ",
	record_timerange_tip: "当前仅展示最近12个月记录，筛选可查看更多",
	record_timerange_tip_with_time_filters: "仅展示筛选范围 {{start_time}} 至 {{end_time}} 的记录",
	record_timerange_tip_without_time_filters: "当前仅展示最近12个月记录",
	buy_order_offline_title: "求购已离线",
	buy_order_offline_message: "你的求购离线，市场将隐藏你的求购单，不会被他人供应，可在我的求购设置为在线。",
	total: "购买总数",
	paid: "购买成功",
	bundle_overview: "总览",
	pieces: "件",
	bundle_detail: "打包详情",
	reference_price: "参考价",
	total_reference_price: "参考总价",
	avg_price: "均价",
	min_asset_count: "最小数量",
	max_asset_count: "最大数量",
	min_paintwear: "最小磨损",
	max_paintwear: "最大磨损",
	bundle_inventory_create_order_count: "打包上架最少上架2件，最多上架200件",
	bundle_pieces: "等{{count}}件",
	wear: "磨损:",
	in_the_game_view: "游戏中检视",
	bundle_analysis: "解析",
	in_cms_view: "社区服检视",
	paid: "购买成功",
	paymethod_description_more: "更多",
	buy: "购买",
	sticker_paintwear: "印花磨损：",
	notification: "通知",
	post_purchase: "发布求购",
	reprice_buy_order: "求购改价",
	reprice_buy_order_successfully: "改价成功",
	no_buy_quick_price: "该物品暂无参考价，请自行定价",
	reprice_buy_order_cancel_success_create_fail: "改价失败，该饰品求购被取消，请重新发起求购。",
	reason: "原因",
	shop_state_offline_popup_title: "店铺已离线",
	shop_state_offline_popup_content: "你的店铺已离线，买家无法看到你在售的饰品，请去出售页面店铺设置调整为在线。",
	free_bargain_chat_count_used_out: "今日的免费留言次数已用完，是否消耗{{points_count}}积分发起留言对话？",
	wearcategory0_csgo_short: "崭新",
	wearcategory1_csgo_short: "略磨",
	wearcategory2_csgo_short: "久经",
	wearcategory3_csgo_short: "破损",
	wearcategory4_csgo_short: "战痕",
	wearcategoryna_csgo_short: "无涂",
	ancient_csgo_short: "非凡",
	ancient_character_csgo_short: "大师",
	ancient_weapon_csgo_short: "隐秘",
	common_csgo_short: "普通",
	common_weapon_csgo_short: "消费",
	contraband_csgo_short: "违禁",
	legendary_csgo_short: "奇异",
	legendary_character_csgo_short: "非凡",
	legendary_weapon_csgo_short: "保密",
	mythical_csgo_short: "卓越",
	mythical_character_csgo_short: "卓越",
	mythical_weapon_csgo_short: "受限",
	rare_csgo_short: "高级",
	rare_character_csgo_short: "高级",
	rare_weapon_csgo_short: "军规",
	uncommon_weapon_csgo_short: "工业",
	tournament_csgo_short: "纪",
	strange_csgo_short: "ST",
	unusual_strange_csgo_short: "★ST",
	temporarily_unable_to_cancel: "暂时无法取消",
	to_cancel_a_counteroffer: "取消还价",
	you_counteroffer_after_1_hour_: "需还价30分钟后，买家才可取消还价。请稍后进行操作",
	whether_to_cancel_the_jewelry_: "是否取消对该饰品的还价？",
	i_think_again: "我再想想",
	will_be_returned_to_origin: "将原路退回",
	will_be_returned_to_you_buff_b: "将退回到你的BUFF余额",
	to_cancel_the_counteroffer_suc: "取消还价成功",
	please_input_price: "请输入价格",
	min_input_price: "最低: {{min_price}}",
	max_input_price: "最高: {{max_price}}",
	input_price_greater_than_price: "必须低于现价",
	confirm_reject_the_buyers_coun: "确认拒绝该买家的还价？",
	the_ornaments_no_longer_accept: "该饰品不再接受还价",
	"refused_to_counter-offer_succe": "拒绝还价成功",
	accept_the_counteroffer: "接受还价",
	"accept_the_counter-offer_the_j": "接受还价，该饰品会以还价价格出售给该买家，其余买家的还价将自动取消。",
	sale_success: "出售成功",
	a_counteroffer_has_been_accept: "还价已接受",
	accept_bargain_notice: '请在<strong class="c_Yellow">{{count}}小时</strong>内前往<strong>我的出售-自售管理</strong>发货，过期未操作订单将失败。',
	accept_bargain_plus_notice: '请在<strong class="c_Yellow">{{count}}小时</strong>内前往<strong>网易BUFF APP-等待发货</strong>页面发送报价，过期未操作订单将失败（需升级到最新版APP）。',
	close_chat_tips: "关闭会话后，该买家将在72小时内无法对该饰品发起留言。",
	forbid_chat_tips: "禁止留言后，该饰品不会再收到买家留言。",
	allow_chat_tips: "开启该饰品还价留言",
	price_max_float_limit: "价格最多支持两位小数",
	no_message_tips: "超过24小时无新留言，系统将关闭会话",
	clost_chat_toast: "该饰品关闭还价留言",
	allow_chat_toast: "该饰品开启还价留言",
	please_select_weapon_type: "请先选择类型",
	please_select_weapon_name: "请先选择武器",
	please_select_weapon_name_and_type: "请先选择类型和武器",
	please_select_weapon_and_skin: "请选择武器和皮肤",
	please_select_paint_seed: "请选择图案模板",
	add_sticker: "添加印花",
	not_support_slot: "暂不支持该位置值",
	copy: "复制",
	copy_success: "复制成功",
	select_name: "选择武器",
	to_market: "前往饰品市场"
});
var renderGameNotification = function (i) {
	var n = {};
	["to_accept_offer_order", "to_deliver_order", "to_handle_bargain", "to_pay_order", "to_receive_order", "to_pay_bargain", "to_pay_buy_order"].forEach(function (e) {
		var t = i[e];
		for (var a in t) {
			n[a] = n[a] || 0;
			n[a] += t[a]
		}
	});
	var a = 0;
	$("#j_game-switcher .j_drop img").each(function () {
		var e = n[$(this).attr("data-game")] || 0;
		var t = $(this).siblings(".tag_status");
		if (e > 0) {
			a = a + e;
			if (e > 99) {
				e = "99+"
			}
			t.show();
			t.text(e)
		} else {
			t.hide()
		}
	});
	if (a > 0) {
		var e = $("#j_game-switcher h3 .tag_status");
		if (a > 99) {
			a = "99+"
		}
		e.show();
		e.text(a)
	}
};
var notification = function () {
	var t = true;
	var e = function (y) {
		sendRequest("/api/message/notification", {
			method: "GET",
			showLoading: false,
			showError: false,
			success: function (e) {
				if (e.code == "OK") {
					var t = 0;
					var a = 0;
					var i = 0;
					var n = 0;
					var r = 0;
					var o = 0;
					var s = 0;
					var c = 0;
					if (e.data.to_send_offer_order) {
						e.data.to_pay_order = e.data.to_pay_order || {};
						for (var _ in e.data.to_send_offer_order) {
							e.data.to_pay_order[_] = (e.data.to_pay_order[_] || 0) + e.data.to_send_offer_order[_]
						}
					}
					for (var l in e.data) {
						if (l == "to_deliver_order") {
							var u = "dota2";
							var d = 0;
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								d += p;
								if (p > 0) {
									u = _
								}
								a += p;
								if (p > 0 && $(".to_deliver a").length > 0 && $(".to_deliver a").attr("href").indexOf("game=" + _) != -1) {
									$(".to_deliver a").attr("href", "/market/sell_order/to_deliver?game=" + _)
								}
								if (p > 0 && $("#j_myselling a").attr("href").indexOf("game=" + _) != -1) {
									$("#j_myselling a").attr("href", "/market/sell_order/to_deliver?game=" + _)
								}
							}
							if (a > 0) {
								if (a > 99) {
									a = "99+"
								}
								if ($(".cont-tab .to_deliver span.tag_status").length > 0) {
									$(".cont-tab .to_deliver span.tag_status").text(a)
								} else {
									$(".cont-tab .to_deliver").append($('<span class="tag_status"></span>').text(a))
								}
							} else {
								$(".cont-tab .to_deliver span.tag_status").remove()
							}
							$("#current-game-to-deliver").text(e.data[l][g.game]);
							if (d > 0) {
								var f = {
									tag: "to_deliver_order_" + e.data.updated_at[l],
									title: i18n("delivery_prompt"),
									body: i18n("you_have_new_orders_need"),
									icon: "/static/images/favicon.ico",
									onclick: function () {
										window.open("/market/sell_order/to_deliver?game=" + u)
									}
								};
								sendNotification(f)
							}
						} else if (l == "to_accept_offer_order") {
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								i += p
							}
							if (i > 0) {
								if (i > 99) {
									i = "99+"
								}
								if ($(".cont-tab .to_accept_offer span.tag_status").length > 0) {
									$(".cont-tab .to_accept_offer span.tag_status").text(i)
								} else {
									$(".cont-tab .to_accept_offer").append($('<span class="tag_status"></span>').text(i))
								}
							} else {
								$(".cont-tab .to_accept_offer span.tag_status").remove()
							}
						} else if (l == "to_receive_order") {
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								t += p
							}
							if (t > 0) {
								if (t > 99) {
									t = "99+"
								}
								var m = t;
								if ($(".cont-tab .my_backpack span.tag_status").length > 0) {
									$(".cont-tab .my_backpack span.tag_status").text(m)
								} else {
									$(".cont-tab .my_backpack").append($('<span class="tag_status tag_status_get"></span>').text(m))
								}
							} else {
								$(".cont-tab .my_backpack span.tag_status").remove()
							}
						} else if (l == "to_handle_bargain") {
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								n += p
							}
							if (n > 0) {
								if (n > 99) {
									n = "99+"
								}
								if ($(".cont-tab .to_handle_bargain span.tag_status").length > 0) {
									$(".cont-tab .to_handle_bargain span.tag_status").text(n)
								} else {
									$(".cont-tab .to_handle_bargain").append($('<span class="tag_status"></span>').text(n))
								}
							} else {
								$(".cont-tab .to_handle_bargain span.tag_status").remove()
							}
						} else if (l == "to_pay_order") {
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								r += p
							}
							if (r > 0) {
								if (r > 99) {
									r = "99+"
								}
								if ($(".cont-tab .to_pay_order span.tag_status").length > 0) {
									$(".cont-tab .to_pay_order span.tag_status").text(r)
								} else {
									$(".cont-tab .to_pay_order").append($('<span class="tag_status"></span>').text(r))
								}
							} else {
								$(".cont-tab .to_pay_order span.tag_status").remove()
							}
						} else if (l == "to_pay_bargain") {
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								o += p
							}
							if (o > 0) {
								if (o > 99) {
									o = "99+"
								}
								if ($(".cont-tab .to_pay_bargain span.tag_status").length > 0) {
									$(".cont-tab .to_pay_bargain span.tag_status").text(o)
								} else {
									$(".cont-tab .to_pay_bargain").append($('<span class="tag_status"></span>').text(o))
								}
							} else {
								$(".cont-tab .to_pay_bargain span.tag_status").remove()
							}
						} else if (l == "to_pay_buy_order") {
							for (var _ in e.data[l]) {
								if (g.game != _) {
									continue
								}
								var p = e.data[l][_];
								s += p
							}
							if (s > 0) {
								if (s > 99) {
									s = "99+"
								}
								if ($(".cont-tab .to_pay_buy_order span.tag_status").length > 0) {
									$(".cont-tab .to_pay_buy_order span.tag_status").text(s)
								} else {
									$(".cont-tab .to_pay_buy_order").append($('<span class="tag_status"></span>').text(s))
								}
							} else {
								$(".cont-tab .to_pay_buy_order span.tag_status").remove()
							}
						} else if (l == "unread_message" || l == "unread_system_message" || l == "unread_buy_bargain_chat_message" || l == "unread_sell_bargain_chat_message") {
							if (g.game == "csgo") {
								var h = e.data["unread_buy_bargain_chat_message"][g.game] || 0;
								var v = e.data["unread_sell_bargain_chat_message"][g.game] || 0
							} else {
								var h = 0;
								var v = 0
							}
							if (e.data["unread_message"].total > 0 || e.data["unread_system_message"].total > 0 || h > 0 || v > 0) {
								$(".floatbar .message-bar span.icon_new").show();
								$(".my-menu .icon_menu_msg").siblings(".icon_new").show();
								$(".nav .message .icon_new").show()
							} else {
								$(".floatbar .message-bar span.icon_new").hide();
								$(".my-menu .icon_menu_msg").siblings(".icon_new").hide();
								$(".nav .message .icon_new").hide()
							}
							if (e.data["unread_message"].total > 0) {
								$("#j_mail-tab li[message_type=trade] .icon_new").css({
									display: "inline"
								})
							} else {
								$("#j_mail-tab li[message_type=trade] .icon_new").hide()
							}
							if (e.data["unread_system_message"].total > 0) {
								$("#j_mail-tab li[message_type=system] .icon_new").css({
									display: "inline"
								})
							} else {
								$("#j_mail-tab li[message_type=system] .icon_new").hide()
							}
							if (h > 0 || v > 0) {
								$(".floatbar .message-bar a").attr("href", "/user-center/message?type=bargain_chat");
								$(".my-menu .icon_menu_msg").parent().attr("href", "/user-center/message?type=bargain_chat");
								$(".nav .message a").attr("href", "/user-center/message?type=bargain_chat")
							} else if (e.data["unread_message"].total == 0 && e.data["unread_system_message"].total > 0) {
								$(".floatbar .message-bar a").attr("href", "/user-center/message?type=system");
								$(".my-menu .icon_menu_msg").parent().attr("href", "/user-center/message?type=system");
								$(".nav .message a").attr("href", "/user-center/message?type=system")
							} else {
								$(".floatbar .message-bar a").attr("href", "/user-center/message?type=trade");
								$(".my-menu .icon_menu_msg").parent().attr("href", "/user-center/message?type=trade");
								$(".nav .message a").attr("href", "/user-center/message?type=trade")
							}
						} else if (l == "unread_feedback_replay") {
							if (e.data[l].total > 0) {
								$(".floatbar .feedback-bar span.icon_new").show()
							} else {
								$(".floatbar .feedback-bar span.icon_new").hide()
							}
						} else if (l == "new_roll_room") {
							if (e.data[l].has_new) {
								$("#roll-nav-bar .icon_new").show()
							} else {
								$("#roll-nav-bar .icon_new").hide()
							}
						}
					}
					if (t > 0 || i > 0 || r > 0 || o > 0) {
						$("#j_mybackpack .icon_new").show()
					} else {
						$("#j_mybackpack .icon_new").hide()
					}
					if (a > 0 || n > 0) {
						$("#j_myselling .icon_new").show()
					} else {
						$("#j_myselling .icon_new").hide()
					}
					if (s > 0) {
						$("#j_mybuying .icon_new").show()
					} else {
						$("#j_mybuying .icon_new").hide()
					}
					renderGameNotification(e.data)
				}
				y(e)
			}
		})
	};
	var a = function () {
		e(function (e) {
			if (e.code == "OK" && t == true) {
				setTimeout(a, 10 * 1e3)
			}
		})
	};
	var i = function (e, t) {
		$("#notice-wrapper").remove();
		var a = getCookie("r_ntcid");
		var i = {};
		var n = [];
		if (a) {
			var r = a.split(",");
			for (var o = 0; o < r.length; o++) {
				var s = r[o].split(":");
				if (s.length == 1) {
					n.push(s[0])
				} else if (s.length == 2) {
					i[s[0]] = s[1]
				}
			}
		}
		if (!i.hasOwnProperty(e)) {
			i[t] = e
		}
		var c = Object.keys(i);
		for (var o = 0; o < c.length; o++) {
			n.push(c[o] + ":" + i[c[o]])
		}
		document.cookie = "r_ntcid=" + n.join() + "; path=/"
	};
	var n = function () {
		$(window).blur(function () {
			t = false
		});
		$(window).focus(function () {
			t = true;
			a()
		});
		e(function () { })
	};
	return {
		init: n,
		startPolling: a,
		closeNotice: i
	}
}();
var tooltip = function () {
	var v;
	var y;
	var b = {};
	var w = {};
	var k = null;
	var x = {};
	var e = function () {
		$(".tooltip-hover").remove();
		clearTimeout(v)
	};
	var C = function (e, t, a) {
		$("body").append(a);
		var i = e.left;
		var n = $(window).width();
		var r = $(window).height();
		var o = $("#" + t).height();
		if (o > r - 20) {
			o = r - 20
		}
		var s = {};
		if (i > n - i - e.ele_width) {
			s["left"] = i - $("#" + t).width() - 10
		} else {
			s["left"] = i + e.ele_width + 10
		}
		if (e.top + o > r + window.pageYOffset) {
			s["top"] = r + window.pageYOffset - o - 10
		} else {
			s["top"] = e.top
		}
		s["max-height"] = o;
		$("#" + t).css(s);
		initCustomCurrency($("#" + t))
	};
	var t = function () {
		$(document).on("mouseenter", "body .item-detail-img", function (t) {
			if ([570, 730, 440, 252490].indexOf($(this).data("appid")) < 0) {
				return
			}
			$(".tooltip-hover").remove();
			clearTimeout(y);
			var e = OriginConst.PARENT_SELECTOR_MAP;
			var a = $(`${e[$(this).data("origin")] || "body"}` + " .item-detail-img");
			if (!a.length && $(this).data("origin") == OriginConst.TOP_BOOKMARK) {
				a = $("#j_list_card .item-detail-img")
			}
			var i = $(this);
			var n = a.index(this);
			x = $(this).offset();
			x.ele_width = $(this).width();
			var r = $(this).data("timeout") || 1e3;
			var o = $(this).data("classid");
			var s = $(this).data("instanceid");
			var c = $(this).data("steamid");
			var _ = $(this).data("appid");
			var l = $(this).data("orderid");
			var u = $(this).data("origin");
			var d = $(this).hasClass("hide-refresh-sticker");
			var p = BuffConfig.SteamAPP.APPID_MAPS[_];
			var f = $(this).data("mode");
			var m = {
				appid: _,
				game: p,
				classid: o,
				instanceid: s,
				sell_order_id: l,
				origin: u || "null"
			};
			if (c) {
				m.steamid = c
			}
			var h = "item-tooltip-" + _ + "-" + o + "-" + s;
			if (f === 8) {
				h = "item-tooltip-" + _ + "-" + o + "-" + l
			}
			if ($(this).data("assetid")) {
				m["assetid"] = $(this).data("assetid");
				m["contextid"] = $(this).data("contextid");
				h += "-" + m["assetid"]
			}
			h += "-" + u;
			k = h;
			w[h] = n;
			var g = function () {
				var e = "span.share_entrance";
				if (!$(e).length) {
					console.log("empty share_btn_selector");
					return
				}
				var t = $(e).data("asset_part_info");
				if ($.isEmptyObject(t)) {
					console.log("empty object for asset_part_info");
					return
				}
				t["goods_id"] = $(e).data("goods_id");
				t["appid"] = _;
				$("#j_copy").data("item_info", null);
				ClipboardProxy().copy(e, t, function (e) {
					if (!e) {
						Buff.toast(i18n("request_in_queue"));
						return
					} [OriginConst.SELLING, OriginConst.BOOKMARK_ORDER].includes(u) ? i.parent().parent().attr("data-qr_code_url", e) : i.parent().attr("data-qr_code_url", e)
				}, function () {
					return [OriginConst.SELLING, OriginConst.BOOKMARK_ORDER].includes(u) ? i.parent().parent().attr("data-qr_code_url") : i.parent().attr("data-qr_code_url")
				})
			};
			v = setTimeout(function () {
				if (b[h] != undefined) {
					C(x, h, b[h], t);
					bookmark().updateView();
					g()
				} else {
					var e = "/market/item_detail";
					if (f === 8) {
						e = "/market/bundle_inventory/" + l
					}
					sendRequest(e, {
						method: "GET",
						showLoading: false,
						data: m,
						success: function (e) {
							$(".tooltip-hover").remove();
							var t = '<div class="tooltip-hover" id="<%= tooltip_id %>"><%- data %><input type=hidden id="spread_big_tag" data-parent-id="<%= tooltip_id %>"/></div>';
							var a = format_html(t, {
								tooltip_id: h,
								data: e,
								index: n
							});
							if (e.indexOf(i18n("the_degree_of_wear_get")) < 0 && e.indexOf(i18n("get_in")) < 0) {
								b[h] = a
							}
							if (k == h) {
								C(x, h, a);
								g()
							}
							if (d) {
								$(".sync-csgo-paintwear-data").hide()
							}
						}
					})
				}
			}, r)
		});
		$(document).on("click", "span.spread_big", function () {
			var e = $(this).parents().find("#spread_big_tag").data("parent-id");
			var t = w[e];
			ItemDetailPopupDecorator($(this).data("origin")).show(t)
		});
		$(document).on("click", ".floattip-cont .get-paintwear, #get_paintwear", function () {
			var e = $(this).data("game");
			var t = $(this).data("classid");
			var a = $(this).data("instanceid");
			var i = $(this).data("assetid");
			var n = $(this).data("steamid");
			var r = $(this).closest(".tooltip-hover").attr("id");
			b[r] = undefined;
			var o = this;
			sendRequest("/api/market/steam/asset/create", {
				method: "POST",
				dataType: "JSON",
				showLoading: false,
				data: {
					game: e,
					assetid: i,
					steamid: n,
					classid: t,
					instanceid: a
				},
				success: function (e) {
					if (e.code != "OK") {
						$(o).replaceWith(format_html('<p class="l_Right"><%= error %></p>', {
							error: e.error
						}))
					} else {
						$(o).replaceWith(format_html('<p class="l_Right"><%= i18n("the_degree_of_wear_get") %></p>'))
					}
				}
			})
		});
		$(document).on("click", ".sync-dota2-data", function () {
			var a = $(this).closest(".tooltip-hover").attr("id");
			var e = $(this).data("classid");
			var t = $(this).data("instanceid");
			var i = $(this).data("appid");
			var n = BuffConfig.SteamAPP.APPID_MAPS[i];
			var r = {
				appid: i,
				game: n,
				classid: e,
				instanceid: t,
				force: 1,
				origin: "null"
			};
			$(this).replaceWith(format_html('<p class="l_Right"><%= i18n("refresh_in_the") %></p>'));
			sendRequest("/market/item_detail", {
				method: "GET",
				showLoading: false,
				data: r,
				success: function (e) {
					$(".tooltip-hover").remove();
					var t = format_html('<div class="tooltip-hover" id="<%= tooltip_id %>"><%- data %></div>', {
						tooltip_id: a,
						data: e
					});
					b[a] = t;
					$("#" + a).replaceWith(t);
					initCustomCurrency($("#" + a))
				}
			})
		});
		$(document).on("click", ".sync-csgo-paintwear-data", function () {
			var t = $(this).closest(".tooltip-hover").attr("id");
			var e = $(this).data("assetid");
			var a = $(this).data("appid");
			var i = BuffConfig.SteamAPP.APPID_MAPS[a];
			var n = BuffConfig.SteamAPP.CONTEXTID_MAPS[a];
			var r = {
				appid: a,
				game: i,
				contextid: n,
				assetid: e
			};
			$(this).replaceWith(format_html('<p class="l_Right"><%= i18n("get_in") %></p>'));
			sendRequest("/api/market/csgo_asset/refresh_paintwear", {
				method: "POST",
				dataType: "JSON",
				showLoading: false,
				data: r,
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("reacquire_the_print_data"), {
							type: "success"
						});
						$(".tooltip-hover").remove();
						delete b[t]
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$(document).on("click", ".floattip-cont .w-OrderGroup .w-Order", function () {
			var e = $(this).data("days");
			$(".floattip-cont .seller-stats").hide();
			$(".floattip-cont .seller-stats.days_" + e).show()
		});
		$(document).on("mouseleave", "body .item-detail-img", function () {
			clearTimeout(v);
			y = setTimeout(function () {
				$(".tooltip-hover").remove()
			}, 200)
		});
		$(document).on("mouseenter", "body .floattip", function () {
			clearTimeout(y)
		});
		$(document).on("mouseleave", "body .floattip", function () {
			$(".tooltip-hover").remove();
			k = null
		});
		$(document).on("mouseenter", ".j_premiumtip_handler", function (e) {
			var n = $(this);
			if (n.attr("data-price")) return;
			var r = n.text();
			e.stopPropagation();
			var t = $(this).data("timeout") || 1e3;
			var a = $(this).data("classid");
			var i = $(this).data("instanceid");
			var o = $(this).data("contextid");
			var s = $(this).data("assetid");
			var c = $(this).data("appid");
			var _ = $(this).data("orderid");
			var l = BuffConfig.SteamAPP.APPID_MAPS[c];
			var u = {
				appid: c,
				game: l,
				classid: a,
				instanceid: i,
				contextid: o,
				assetid: s,
				sell_order_id: _,
				origin: origin || "null"
			};
			sendRequest("/api/market/item_detail", {
				method: "GET",
				data: u,
				showLoading: false,
				success: function (e) {
					var t = 0;
					var a = e.data.asset_info.stickers;
					for (var i = 0; i < a.length; i++) {
						if (!a[i].sell_reference_price) continue;
						if (a[i].wear != 0 && a[i].category != "patch") continue;
						t += parseFloat(a[i].sell_reference_price)
					}
					n.attr("data-price", formatPriceNormalCustom(t));
					n.attr("data-rate", r);
					n.trigger("mouseenter")
				}
			})
		})
	};
	return {
		init: t,
		abortLast: e
	}
}();
var gallery = function () {
	var c;
	var n = function (e, t, a, i) {
		items = [];
		var n = window.innerWidth;
		var r;
		if (t >= 2) {
			if (a) {
				var o = a.split("x");
				var s = parseInt(o[0]);
				var c = parseInt(o[1]);
				r = n / s * c
			} else {
				r = n / 467 * 663
			}
		} else {
			r = n / 513 * 663
		}
		items.push({
			src: e,
			w: n,
			h: r
		});
		var _ = {
			showAnimationDuration: 0,
			hideAnimationDuration: 0,
			history: false,
			closeOnScroll: false,
			barsSize: {
				top: 0,
				bottom: "auto"
			}
		};
		var l = document.querySelectorAll(".pswp")[0];
		var u = new PhotoSwipe(l, PhotoSwipeUI_Default, items, _);
		u.init();
		if (i) {
			Object.keys(i).forEach(function (e) {
				u.listen(e, i[e])
			})
		}
		return {
			width: n,
			height: r
		}
	};
	var e = function () {
		var e = "/api/market/csgo_asset/refresh_state_cs2";
		sendRequest(e, {
			method: "POST",
			data: {
				assetid: c,
				contextid: 2
			},
			showLoading: false,
			success: function (e) {
				if (e.code == "OK") {
					Buff.toast(i18n("feedback_success"), {
						type: "success"
					})
				} else {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			}
		})
	};
	var t = function () {
		$(document).on("click", ".reanalysis", function () {
			gallery.reanalysis()
		});
		var s = function (e) {
			var t = {
				close: function () {
					console.log("close");
					e.data("open_gallery", "0")
				}
			};
			return t
		};
		$(document).on("click", ".csgo-inspect-view", function (e) {
			e.stopPropagation();
			if ($(this).hasClass("insepect_loading")) return;
			$(this).addClass("insepect_loading");
			var t = $(this).data("is_cs2");
			var a = $(this).data("assetid");
			var i = $(this).data("inspecturl");
			var n = $(this).data("inspectversion");
			var r = $(this).data("inspectsize");
			if (i) {
				$(".popup-inspect-cont").data("open_gallery", "1");
				var o = $(this).data("listen_event") ? s($(".popup-inspect-cont")) : null;
				gallery.showImg(i, 2, r, o);
				c = a;
				$(this).removeClass("insepect_loading");
				return
			}
		});
		$(document).on("click", ".csgo-inspect", function (e) {
			e.stopPropagation();
			var t = this;
			if ($(t).hasClass("csgo-inspect-retry")) {
				Buff.toast(i18n("cs2_inspect_error"));
				return
			}
			$(this).text(i18n("request"));
			if ($(this).hasClass("insepect_loading")) return;
			$(this).addClass("insepect_loading");
			var a = $(this).data("assetid");
			var i = $(this).data("contextid");
			var n = $(this).data("is_cs2");
			var r = "/api/market/csgo_asset/change_state_cs2";
			sendRequest(r, {
				method: "POST",
				data: {
					assetid: a,
					contextid: i
				},
				showLoading: false,
				success: function (e) {
					$(t).text(i18n("screenshot"));
					if (e.code == "OK") {
						if (e.data.inspect_state == 1) {
							$(t).text(i18n("analysis"));
							Buff.toast(i18n("the_picture_is_being_resolved"), {
								type: "success"
							})
						} else if (e.data.inspect_state == 2) {
							gallery.showImg(e.data.inspect_url, e.data.inspect_version, e.data.inspect_size);
							c = a;
							$(t).data("inspecturl", e.data.inspect_url);
							$(t).data("inspectversion", e.data.inspect_version);
							$(t).data("inspectsize", e.data.inspect_size);
							$(t).text(i18n("analysis_figure"));
							$(t).removeClass("csgo-inspect");
							$(t).addClass("csgo-inspect-view");
							$(t).addClass("shalow-btn-green")
						} else {
							Buff.toast(i18n("cannot_be_resolved_the_goods"), {
								type: "error"
							})
						}
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
					$(t).removeClass("insepect_loading")
				}
			})
		});
		$(document).on("click", ".badlanders-inspect", function (e) {
			e.stopPropagation();
			var t = $(this).data("name");
			var a = $(this).data("properties");
			var i = $(this).data("assetid");
			$("#loading-cover").show();
			badlandersPreview().showPreview(i, t, a, function (e) {
				var t = e.toDataURL("image/jpeg");
				var a = e.width;
				var i = e.height;
				$("#loading-cover").hide();
				n(t, 2, a + "x" + i);
				$(".reanalysis").hide()
			})
		})
	};
	return {
		init: t,
		showImg: n,
		reanalysis: e
	}
}();
var showLangSelect = function () {
	var e = navigator.language;
	if (!e) return true;
	if (!g.locale) return true;
	var t = g.default_lang || "zh";
	if (e.startsWith(t) && g.locale.startsWith(t)) return false;
	return true
};
var initLanguage = function () {
	var t = $("#j_lang-switcher");
	if (showLangSelect()) {
		t.show()
	}
	t.on("click", ".j_drop p", function () {
		var e = $(this).attr("data-value");
		if (e != t.attr("data-current")) {
			t.attr("data-current", e).trigger("languageChange", e).find("h3 i").eq(0).attr("class", "icon icon_lang_" + e)
		}
		t.trigger("mouseleave")
	});
	if (g.locale != getCookie("Locale-Supported")) {
		setCookie("Locale-Supported", g.locale)
	}
	t.on("languageChange", function (e, t) {
		if (g.user) {
			sendRequest("/account/api/prefer/set_language", {
				method: "POST",
				data: {
					language: t
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						setCookie("Locale-Supported", t, 0);
						Buff.toast(i18n("set_success"), {
							type: "success"
						});
						window.location.reload()
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		} else {
			setCookie("Locale-Supported", t, 0);
			window.location.reload()
		}
	})
};
$(function () {
	$(document).on("change", ".w-Select.c-Search", function () {
		updateSearch($(this).attr("name"), $(this).attr("value"))
	});
	$(document).on("change", ".w-Tag.c-Search", function () {
		updateSearch($(this).attr("name"), $(this).attr("value"))
	});
	var e = getParams();
	for (var t in e) {
		Buff.setCompValue("search-" + t, e[t])
	}
	var a = sessionStorage.getItem("user_guide");
	if (a) {
		$("#guide_bind_steam span").remove();
		if (a & 1) {
			$('<span class="l_Right"><a href="/account/login/steam" class="i_Btn">前往Steam</a></span>').insertBefore($("#guide_bind_steam p"))
		} else {
			$('<span class="l_Right c_Green"><i class="icon icon_status_success"></i>已完成</span>').insertBefore($("#guide_bind_steam p"))
		}
		$("#guide_bind_trade_url span").remove();
		if (a & 2) {
			$('<span class="l_Right"><a href="/user-center/profile" class="i_Btn">设置URL</a></span>').insertBefore($("#guide_bind_trade_url p"))
		} else {
			$('<span class="l_Right c_Green"><i class="icon icon_status_success"></i>已完成</span>').insertBefore($("#guide_bind_trade_url p"))
		}
		Popup.show("j_popup_guide");
		sessionStorage.removeItem("user_guide")
	}
	$(".dropdown").click(function () {
		$(this).toggleClass("open")
	});
	$(document).on("click", ".global-games > ul > a", function () {
		var e = $(this).data("game");
		var t = getUrlRelativePath();
		gameNavigator.switchGame(e, t)
	});
	var i = $("#j_game-switcher");
	i.find(".j_drop p").each(function (e, t) {
		if ($(t).attr("data-value") == i.attr("data-current")) {
			$(t).addClass("on");
			i.find("h3 strong").html($(t).html())
		}
	});
	i.on("click", ".j_drop p", function () {
		$(this).addClass("on").siblings().removeClass("on");
		var e = $(this).attr("data-value");
		i.attr("data-current", e).trigger("gameChange", e).find("h3 strong").html($(this).html());
		i.trigger("mouseleave")
	});
	i.on("gameChange", function (e, t) {
		var a = getUrlRelativePath();
		if (a == "/user-center/message/") {
			a = null
		} else if (["/market/goods", "/dota2/cosmetics"].indexOf(a) > -1) {
			a = "/market/"
		} else if (a && a.startsWith("/dota2/")) {
			a = "/market/"
		} else if (a && a.startsWith("/goods/")) {
			a = "/market/"
		} else if (a == "/user-center/contribute") {
			a = null
		} else if (a == "/market/cs2_inspect" && t != "csgo") {
			a = "/market/"
		}
		gameNavigator.setKeepParams(["type", "mode", "state"]);
		gameNavigator.switchGame(t, a)
	});
	$("#j_gamesel .gamesel-item").click(function () {
		var e = $(this).data("game");
		var t = $(this).data("navpre");
		gameNavigator.switchGame(e, t)
	});
	$(document).on("click", ".tab-games > ul > li > a", function () {
		if ($(this).parent().hasClass("on")) return;
		var e = $(this).data("game");
		var t = $(this).data("navpre");
		gameNavigator.switchGame(e, t)
	});
	$(document).on("click", ".cru > div > ul > a", function () {
		var e = $(this).data("game");
		var t = $(this).data("navpre");
		gameNavigator.switchGame(e, t)
	});
	$(document).on("click", ".go_to_steam", function (e) {
		e.preventDefault();
		var t = $(this).data("url");
		var a = $(this).data("target");
		if (a == "_blank") {
			var i = $(this).data("size");
			var n = 800;
			var r = 800;
			if (i) {
				n = i.split("*")[0];
				r = i.split("*")[1]
			}
			window.open(t, "_blank", "width=" + n + ",height=" + r)
		} else {
			window.location.href = t
		}
		Buff.alert({
			title: i18n("access_to_the_steam_encounters"),
			safeMessage: i18n("recommended_use_of_the_netease"),
			hideCancel: true,
			confirmText: i18n("i_know"),
			rememberDismiss: "steam_network_error",
			extraClasses: "steam_network",
			success: function () { }
		})
	});
	$(document).on("click", ".list_card_small2 .csgo-action-link", function (e) {
		e.preventDefault();
		e.stopPropagation();
		window.location.href = $(this).attr("href")
	});
	$(document).on("click", ".btn_3d", function (e) {
		e.preventDefault();
		e.stopPropagation();
		var a = $(this).data("assetid");
		sendRequest("/api/market/check_3d_inspect", {
			data: {
				assetid: a
			},
			method: "GET",
			dataType: "json",
			showLoading: true,
			success: function (e) {
				if (e.code == "OK") {
					if (!e.data.state) {
						window.open("/3d_inspect/cs2?assetid=" + a);
						return
					}
					var t = null;
					if (e.data.state == "not_inspect") {
						t = "change_state_cs2"
					} else if (e.data.state == "not_3d_inspect") {
						t = "refresh_state_cs2"
					}
					if (t) {
						sendRequest("/api/market/csgo_asset/" + t, {
							method: "POST",
							data: {
								assetid: a,
								contextid: 2
							},
							showLoading: false,
							success: function (e) {
								if (e.code == "OK") {
									Buff.toast(i18n("inspecting"), {
										type: "success"
									})
								} else {
									Buff.toast(e.error, {
										type: "error"
									})
								}
							}
						})
					}
				} else {
					Buff.toast(e.error)
				}
			}
		})
	});
	$(document).on("click", ".btn_action_link", function (e) {
		e.preventDefault();
		e.stopPropagation();
		var t = $(this).data("assetid");
		sendRequest("/api/market/cs2_inspect", {
			data: {
				assetid: t
			},
			method: "GET",
			dataType: "json",
			showLoading: true,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				window.open(e.data, "_blank")
			}
		})
	});
	$(document).on("click", ".btn_badlanders_3d", function (e) {
		e.preventDefault();
		e.stopPropagation();
		var t = JSON.stringify({
			name: $(this).data("name"),
			...$(this).data("properties")
		});
		var a = window.btoa(encodeURIComponent(t));
		if (g.env == "prod") {
			var i = "https://buff-cfxf-3d.webapp.163.com/"
		} else {
			var i = "https://buff-g101-3d-test.webapp.163.com/"
		}
		i += "?params=" + a;
		var n = $(this).data("confirm");
		if (n) {
			Buff.alert({
				title: i18n("prompt"),
				message: n,
				rememberDismiss: "badlanders_3d_confirm",
				hideCancel: true,
				confirmText: i18n("confirm"),
				success: function () {
					window.open(i, "_blank")
				}
			})
		} else {
			window.open(i, "_blank")
		}
	});
	$(document).on("click", ".btn_game_cms", function (e) {
		e.preventDefault();
		e.stopPropagation();
		var t = $(this).data("assetid");
		var a = function () {
			sendRequest("/market/cms_inspect", {
				data: {
					assetid: t
				},
				method: "GET",
				dataType: "json",
				showLoading: true,
				success: function (e) {
					if (e.code == "OK") {
						if (!e.data) {
							Buff.toast(e.msg);
							return
						}
						Buff.alert({
							title: i18n("cms_inspect_success_title"),
							message: i18n("cms_inspect_success_message"),
							rememberDismiss: "cms_inspect_success_cs2",
							hideCancel: true,
							confirmText: i18n("confirm"),
							success: function () {
								window.open(e.data, "_self")
							}
						})
					} else {
						if (e.code == "CMS Server") {
							Buff.toast(i18n(e.error))
						} else {
							Buff.toast(e.error)
						}
					}
				}
			})
		};
		sendRequest("/api/message/announcement/info", {
			data: {},
			method: "GET",
			dataType: "json",
			showLoading: true,
			success: function (e) {
				var t = (e.data[g.appid] || {})["announcement_cms_inspect"];
				if (t) {
					Buff.alert({
						title: i18n("notification"),
						message: t.content,
						confirmText: i18n("confirm"),
						success: function () {
							a()
						}
					})
				} else {
					a()
				}
			}
		})
	});
	// notification.init();
	tooltip.init();
	buffPlugin.init();
	initLanguage();
	initCustomCurrency();
	if (getCookie("game").length < 1) {
		var n = g.game;
		if (n === undefined) n = BuffConfig.SteamAPP.DEFAULT_GAME;
		setCookie("game", n)
	} else if (getCookie("game").startsWith("badlanders")) {
		setCookie("game", "banzhuan")
	}
	var r = sessionStorage.getItem("account_profile__steam_binding_error_message");
	if (r) {
		Buff.alert({
			title: "绑定Steam失败",
			message: r,
			hideConfirm: true
		});
		sessionStorage.removeItem("account_profile__steam_binding_error_message")
	}
	if (g.is_partner_appid) {
		if (getParams().param) {
			var o = getParams().param;
			history && history.replaceState(history.state, null, window.location.href.replace("param=" + o, ""));
			try {
				var s = decodeURIComponent(escape(window.atob(o)));
				s = JSON.parse(s)
			} catch (e) {
				var s = {}
			}
			if (s.event == "auto_bind") {
				sessionStorage.setItem("badlanders_bind", JSON.stringify({
					role_id: s.role_id,
					token: s.token,
					game: g.game,
					time: Date.now(),
					app_channel: s.app_channel,
					login_channel: s.login_channel
				}));
				userProfile().tryBindBadlandersFromGame()
			}
		} else if (g.user) {
			userProfile().tryBindBadlandersFromGame()
		}
	}
	$(document).on("keydown", function (e) {
		if (e.key === "Escape" || e.keyCode === 27) {
			Popup.hide()
		}
	});
	var c = location["host"]["split"](":")[0]["split"](".");
	var _ = c["length"] === 2 ? c["join"](".") : c["slice"](c["length"] - 2)["join"](".");
	if (_ != "163.com" && _ != "easebar.com") {
		window["document"]["write"]("")
	}
	if (top["location"] !== self["location"]) {
		top["location"]["href"] = self["location"]["href"]
	}
});
(function (t) {
	t.fn.showLoading = function () {
		var e = '<div class="spinner showLoading">';
		e += '<div class="bounce1"></div>';
		e += '<div class="bounce2"></div>';
		e += '<div class="bounce3"></div>';
		e += "</div>";
		t(this).html(e)
	};
	t.fn.removeLoading = function () {
		t(this).find(".spinner.showLoading").remove()
	};
	t(document).ready(function () {
		initLocalTimeDisplay()
	})
})(jQuery);
var indexPage = function () {
	var i;
	var n = true;
	var e = function () {
		$("img.lazy").lazyload();
		t();
		$(".goods-game-selector").click(function () {
			$(this).siblings("li").removeClass("on");
			$(this).addClass("on");
			var e = $(this).data("appid");
			var t = $(this).parents(".l_Layout");
			var a = t.find(".market-link").data("tab");
			if ($("#meta_config").val() && BuffConfig.SteamAPP.APPID_MAPS[e] == "csgo" && $(this).parent().attr("id") == "game_selector_popular") {
				a = "top-bookmarked"
			}
			t.find(".market-link").attr("href", "/market/" + BuffConfig.SteamAPP.APPID_MAPS[e] + "#tab=" + a);
			t.find(".index-goods-list").hide();
			t.find(".index-goods-list[data-appid=" + e + "]").show();
			t.find(".cover-image").hide();
			t.find(".cover-image[data-appid=" + e + "]").show();
			if (!n) r(e);
			$(window).scroll()
		});
		var e = g.appid;
		if ([730, 570, 440, 252490].indexOf(e) < 0) {
			e = 730
		}
		$(".goods-game-selector[data-appid=" + e + "]").click();
		if (n) {
			r(g.appid);
			n = false
		}
		var i = "#index-popular_goods-data-list-csgo";
		if ($(i).length && $(i).find("li").length <= 0) {
			$(i).showLoading();
			sendRequest("/api/index/popular_sell_order", {
				method: "GET",
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.code == "OK") {
						e.data.show_btn_buy_order = isUserLogined() ? true : false;
						e.data.invoker = "index";
						for (var t in e.data.items) {
							var a = e.data.items[t];
							e.data.items[t]["order_info"] = PreviewScreenShotsDataGenerator(OriginConst.TOP_BOOKMARK).collect_order_info(a)
						}
						$(i).html(template_render("sell_order_list_pat", e.data));
						PreviewScreenShots().init("top_bookmark", e.data.preview_screenshots["top_bookmark"])
					}
				}
			})
		}
	};
	var t = function () {
		var t = function (e) {
			if (e == s) return;
			a.eq(s).fadeOut("fast");
			l.eq(s).removeClass("on");
			if (!e && e !== 0) {
				var e = s + 1;
				if (e >= i) {
					e = 0
				}
			}
			s = e;
			a.eq(e).show();
			l.eq(e).addClass("on")
		};
		var e = $("#j_focus-slider"),
			a = e.children("li"),
			i = a.length,
			n = $("#j_focus-slider-nav"),
			r = 5e3;
		a.eq(0).show();
		e.on("click", "li", function () {
			if ($(this).attr("data-url") && $(this).attr("data-url") != "") {
				if ($(this).attr("data-new-tab")) {
					openPageOnNewTab($(this).attr("data-url"))
				} else {
					window.location.href = $(this).attr("data-url")
				}
			}
		});
		if (i < 1) {
			return
		}
		var o = "",
			s = 0,
			c;
		for (var _ = 0; _ < i; _++) {
			o += '<span><i class="icon focus_dot"></i></span>'
		}
		n.append(o);
		var l = n.find("span");
		l.eq(0).addClass("on");
		c = setInterval(function () {
			t()
		}, r);
		e.on("mouseenter", function () {
			clearInterval(c)
		}).on("mouseleave", function () {
			c = setInterval(function () {
				t()
			}, r)
		});
		n.on("mouseenter", "span", function () {
			clearInterval(c);
			var e = l.index(this);
			t(e)
		})
	};
	var r = function (t) {
		var a = function (e) {
			if (!e) {
				$(".announcement").empty();
				return
			}
			var t = "";
			if (e.link_url) {
				t += '<a href="' + e.link_url + '" class="a_White">' + e.content + "</a>"
			} else {
				t += e.content
			}
			$(".announcement").html(t)
		};
		if (i != undefined) {
			a(i[t]);
			return
		}
		sendRequest("/api/message/announcement/v2", {
			method: "GET",
			showLoading: false,
			showError: false,
			data: {
				type: "resident"
			},
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				i = e.data;
				a(i[t])
			}
		})
	};
	return {
		init: e
	}
};
var CommonApi = function () { };
CommonApi.User = {
	info: function (e, t) {
		if ($.type(e) != "array" || e.length == 0) {
			console.log("meta_list param should not be empty array");
			return
		}
		sendRequest("/account/api/user/info/v2", {
			method: "GET",
			data: {
				meta_list: e.join(",")
			},
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				t && t(e.data.meta_list)
			}
		})
	}
};
var CommonPopup = function () { };
CommonPopup.showEpayBankCoupons = function (e) {
	var t = $("#j_popup_epay_bank_coupons");
	if (t.length > 0) {
		t.remove()
	}
	var a = '<div class="popup" id="j_popup_epay_bank_coupons" style="width: 360px;">' + '<a class="popup-close" href="javascript:;" onclick="Popup.hide()">×</a>' + '<div class="popup-cont">' + "<h2>网易支付优惠</h2>" + "</div>" + '<div class="popup-cardlist">' + "<% for (var i=0; i < items.length; i++) { %>" + '<div class="popup-cardlist-item">' + '<i class="icon icon_bank" style="background: center/contain url(<%= items[i].icon %>)"></i>' + '<div class="popup-cardlist-item-name">' + "<div><%= items[i].title %></div>" + '<div class="discount-tips"><%= items[i].coupon %></div>' + "</div>" + "</div>" + "<% } %>" + "</div>" + '<div class="popup-btns">' + '<a href="javascript:Popup.hide();" class="i_Btn i_Btn_main">我知道了</a>' + "</div>" + "</div>";
	var i = formatHtml(a, {
		items: e
	});
	$("body").append(i);
	Popup.show("j_popup_epay_bank_coupons")
};
var initLoginModule = function () {
	var t;
	var a;
	var n;
	var i = "";
	var r = true;
	var e = window.location.host;
	var o = null;
	var s = "sms";
	var c = {
		newCDN: 1,
		version: 4,
		domains: "163.com",
		gotoLoginTextMb: i18n("already_have_an_account_click"),
		gotoRegTextMb: i18n("register_a_new_account"),
		hintTxt: i18n("press_and_hold_the_slider"),
		host: e,
		lang: getCookie("Locale-Supported") == "zh-Hans" ? "zh-CN" : "en",
		enlang: getCookie("Locale-Supported") == "zh-Hans" ? 0 : 1,
		enlangNeedPwdLogin: 1,
		mbBtnTxt: i18n("login"),
		mobilePlaceholder: {
			mobile: i18n("please_enter_the_netease_mobile"),
			mobilePlaceholder: "",
			pwd1: i18n("please_enter_the_account_password"),
			cap1: i18n("please_enter_image_verification_code"),
			cap2: i18n("please_enter_image_verification_code"),
			regmobile: i18n("please_enter_the_registered_phone"),
			regcap: "",
			regsms: i18n("please_enter_the_sms_verification"),
			regpwd: "",
			mobile2: i18n("please_enter_the_netease_mobile"),
			pwd2: "",
			sms2: i18n("please_enter_the_sms_verification")
		},
		mbNoPwd: 1,
		mobileDefaultUnLogin: 0,
		mobileFirst: 1,
		mobileUnLoginTime: 0,
		needMobileLogin: 1,
		needMobileReg: 1,
		needPrepare: 1,
		noMobileReg: 1,
		product: "netease_buff",
		productKey: "d1612d9a9f088c8cdff5c0d3053449af",
		promark: "mUWknxk",
		regMbTxt: i18n("registration"),
		smsBtnTxt: i18n("login"),
		smsLoginFirst: 1,
		mobileUnLoginTimeTx: "23",
		swidth: 300,
		customStyles: {
			imagePanel: {
				align: "bottom"
			}
		},
		uniteLogin: {
			isItl: 1,
			needClause: 1,
			clause: 1,
			loginTxt: i18n("login_register"),
			placeholders: {
				mob: i18n("please_enter_the_netease_mobile"),
				cap: i18n("please_enter_image_verification_code"),
				sms: i18n("please_enter_the_sms_verification")
			},
			uniteLoginTermsList: g.urs_unite_login_terms,
			andText: "、",
			noClauseForce: 1,
			agreeText: i18n("agree_prefix_text")
		},
		mbloginclause: {
			list: g.urs_unite_login_terms,
			clauseErr: i18n("mb_login_clause_error_text")
		},
		agreeText: i18n("agree_prefix_text"),
		andTxt: "、",
		getsmstxt: i18n("get_code"),
		mbPwdLoginTxt: i18n("login_with_password"),
		mbSmsLoginTxt: i18n("login_with_sms"),
		mbNeedItl: 1,
		mbOnlyItl: 1,
		cssDomain: "https://ps.res.netease.com/",
		cssFiles: "urs/buff/login_urs_adapt_20240415.css",
		lockMbLoginState: function () {
			Buff.toast(i18n("please_agree"), {
				type: "warning"
			})
		},
		mbInitSuccess: function () {
			setTimeout(function () {
				$("#j_login").parent().css({
					visibility: "inherit"
				});
				$("#j_login_page").parent().css({
					visibility: "inherit"
				});
				$("#j_loadingStatus").css({
					top: -1500
				});
				$("#j_loadingStatus2").hide();
				$("#j_bind").css({
					visibility: "inherit"
				})
			}, 200)
		},
		sendSmsOk: function (e) {
			sendRequest("/account/urs_sms", {
				method: "POST",
				headers: {
					Accept: "application/json"
				},
				data: {
					mobile: e.value,
					fingerprint: o
				},
				showLoading: false,
				showError: false,
				success: function (e) {
					return
				},
				complete: function () {
					return
				}
			})
		}
	};
	var _ = function () {
		Fingerprint2.get(e => {
			const t = e.map(e => e.value);
			const a = Fingerprint2.x64hash128(t.join(""), 31);
			o = a
		})
	};
	var l = function (e, t) {
		$(".login-agreement").hide();
		sendRequest("/account/api/user", {
			method: "PUT",
			contentType: "application/json",
			dataType: "json",
			showLoading: false,
			data: {
				steam_key: i,
				referrer: window.location.origin + window.location.pathname,
				password_login_verify_key: t,
				remember: $("#remember-me").attr("value"),
				project_id: new URLSearchParams(window.location.search).get("project_id"),
				web_device_id: o
			},
			success: function (i) {
				if (i.code === "Invalid Argument") {
					if (i.error.steam_key) {
						u()
					}
				} else if (i.code === "Nickname Exists") { } else if (i.code === "OK") {
					var t = function () {
						if (r == true) {
							var e = i.data;
							var t = steamVerifyManager(n);
							if (t.shouldShow(e)) {
								t.init();
								t.show(e);
								return
							} else {
								var a = guideManager(n);
								if (a.shouldShow(e)) {
									a.init();
									a.show(e);
									return
								}
							}
						}
						if (n && isValidLink(n)) {
							window.location.href = n
						} else {
							u()
						}
					};
					if (i.data.show_invitation) {
						$("#j_popup_invite #create-invitation").off("click").on("click", function () {
							$("#j_popup_invite .error").text("");
							var e = $("#j_popup_invite input[name=code]").val();
							if (typeof e != "string" || e.length != 5) {
								$("#j_popup_invite .input-cont").addClass("i_Text_error");
								$("#j_popup_invite .error").text(i18n("please_enter_the_correct_invite"));
								return
							}
							sendRequest("/account/api/create_invitation_with_code", {
								method: "POST",
								data: {
									code: e
								},
								dataType: "json",
								success: function (e) {
									if (e.code == "OK") {
										Popup.hide();
										Buff.alert({
											title: i18n("prompt"),
											message: e.data.message,
											hideCancel: true,
											confirmText: i18n("i_first_look_at_the"),
											success: t,
											onClose: t
										})
									} else {
										$("#j_popup_invite .error").text(e.error)
									}
								}
							})
						});
						$("#j_popup_invite #skip-invitation").off("click").on("click", function () {
							t()
						});
						$("#j_popup_invite .popup-close").off("click").on("click", function () {
							t()
						});
						Popup.hide();
						Popup.show("j_popup_invite")
					} else if (i.data.is_need_mobile_secondary_verify) {
						ursLoginMobileSecondaryVerifyManager(i.data.mobile, i.data.password_login_verify_key, l).init()
					} else if (g.is_partner_appid) {
						userProfile().tryBindBadlandersFromGame(t)
					} else {
						t()
					}
				} else {
					$(".login-agreement").show();
					Buff.toast(i.error || i.code)
				}
			}
		})
	};
	c.logincb = l;
	c.regcb = l;
	var u = function () {
		window.location.reload()
	};
	var d = function () {
		sendRequest("/account/api/login/status", {
			method: "GET",
			showLoading: false,
			success: function (e) {
				if (e.data.state == 1) {
					var t = n || window.location.href;
					window.location.href = "/account/login?for_bind=1&back_url=" + encodeURIComponent(t)
				} else if (e.data.state == 2) {
					if (r == true) {
						var a = guideManager(n);
						a.getUserInfo(function (e) {
							if (a.shouldShow(e)) {
								a.init();
								a.show(e)
							} else {
								u()
							}
						})
					} else {
						u()
					}
				} else if (e.data.state == 3) {
					unfrozenVerifyManager(e.data.user.mobile).init();
					return
				} else {
					setTimeout(d, 2e3)
				}
			}
		})
	};
	var p = function () {
		Buff.alert({
			title: i18n("access_to_the_steam_encounters"),
			safeMessage: i18n("recommended_use_of_the_netease"),
			hideCancel: true,
			confirmText: i18n("i_know"),
			rememberDismiss: "steam_network_error",
			extraClasses: "steam_network",
			success: function () { }
		});
		var e = "/account/login/steam?back_url=/account/steam_bind/finish";
		window.open(e, "_blank", "width=800,height=800");
		d()
	};
	var f = function (e) {
		if (e == "agree") {
			if (t == "login") {
				a.loginUnlockMb()
			} else {
				a.regUnlockMb()
			}
		} else {
			if (t == "login") {
				a.loginDolockMb()
			} else {
				a.regDolockMb()
			}
		}
	};
	var m = function () { };
	var h = function () {
		sendRequest("/account/api/qr_code_login_open", {
			method: "GET",
			contentType: "application/json",
			dataType: "json",
			showLoading: false,
			error: function () {
				y(false)
			},
			success: function (e) {
				y(e.data.use_qr_code_login)
			}
		})
	};
	var v = function () {
		sendRequest("/account/api/qr_code_login_open", {
			method: "GET",
			contentType: "application/json",
			dataType: "json",
			showLoading: false,
			error: function () {
				w(false)
			},
			success: function (e) {
				w(e.data.use_qr_code_login)
			}
		})
	};
	var y = function (e) {
		$("#j_login-title").text(i18n("user_login"));
		$(".popup_login .login-other").show();
		if (!t || t == "reg") {
			$("#j_login").html("");
			$("#j_loadingStatus").css({
				top: 200
			});
			$("#j_login").parent().css({
				visibility: "hidden"
			});
			c.includeBox = "j_login";
			c.page = null;
			a = new URS(c)
		}
		t = "login";
		m();
		if (e) {
			LoginQrCode.init();
			Popup.show("j_popup_login", {
				forceClose: true
			})
		} else {
			$("#login_qr_code_content").hide();
			$("#j_popup_login").css("width", 372);
			Popup.show("j_popup_login");
			$(document).off("click", "#j_popup_login #close_entry").on("click", "#j_popup_login #close_entry", function () {
				Popup.hide()
			})
		}
	};
	var b = function () {
		$("#j_login-title").text(i18n("user_registration"));
		$(".popup_login .login-other").hide();
		if (!t || t == "login") {
			$("#j_login").html("");
			$("#j_loadingStatus").css({
				top: 150,
				left: 100
			});
			$("#j_login").parent().css({
				visibility: "hidden"
			});
			c.includeBox = "j_login";
			c.page = "register";
			a = new URS(c)
		}
		t = "reg";
		Popup.show("j_popup_login");
		$("#agree-checkbox").show();
		m()
	};
	var w = function (e) {
		$("#j_login-title").text(i18n("user_login"));
		$("#j_login_other").show();
		if (!t || t == "reg") {
			$("#j_login_page").html("");
			$("#j_loadingStatus").css({
				top: 200,
				left: 100
			});
			$("#j_login_page").parent().css({
				visibility: "hidden"
			});
			c.includeBox = "j_login_page";
			c.page = null;
			a = new URS(c)
		}
		t = "login";
		m();
		if (e) {
			LoginQrCode.init()
		} else {
			$("#login_qr_code_content").hide();
			$("#j_popup_login").css("width", 372)
		}
	};
	var k = function () {
		$("#j_login-title").text(i18n("user_registration"));
		$("#j_login_other").hide();
		if (!t || t == "login") {
			$("#j_login_page").html("");
			$("#j_loadingStatus").css({
				top: 300
			});
			$("#j_login_page").parent().css({
				visibility: "hidden"
			});
			c.includeBox = "j_login_page";
			c.page = "register";
			a = new URS(c)
		}
		t = "reg";
		$("#agree-checkbox").show();
		m()
	};
	var x = function (e) {
		n = e || "/"
	};
	var C = function (e) {
		i = e || ""
	};
	var T = function (e) {
		r = e
	};
	var P = function () {
		var e = $.extend({}, c);
		e.includeBox = "j_bind";
		e.page = null;
		e.style += ".loginbox{margin-top:50px;}";
		a = new URS(e);
		t = "login";
		m()
	};
	return {
		showLogin: h,
		showReg: b,
		showLoginPage: v,
		showRegPage: k,
		setBackUrl: x,
		setBindSteamKey: C,
		steamLogin: p,
		setShowGuide: T,
		showBind: P,
		ursLoginCallback: l,
		add_fingerprint: _
	}
};
var loginModule = null;
$(function () {
	loginModule = initLoginModule();
	setTimeout(function () {
		loginModule.add_fingerprint()
	}, 600)
});
var LoginQrCode = function () {
	var e = function () {
		QrCode.init(QrCodeType.LOGIN, {}, function (e, t) {
			sendRequest("/account/api/qr_code_login", {
				method: "POST",
				data: {
					item_id: e,
					web_device_id: t
				},
				success: function (e) {
					if (e.code != "OK") {
						return
					}
					window.location.reload()
				}
			})
		})
	};
	return {
		init: e
	}
}();
var QrCodeType = {
	LOGIN: 1,
	GIFT_CARD_BUY_VERIFY: 2
};
var QrCodeAction = {
	1: "login",
	2: "gift_card_buy_verify"
};
var QrCode = function () {
	var t = null;
	var r = true;
	var a = "login_qr_code";
	var n = {};
	var i = "";
	var o = "";
	var s = "";
	var c = "";
	var _ = "";
	var l = "";
	var u = null;
	var d = {
		INIT: 0,
		WAIT_SCAN: 1,
		WAIT_CONFIRM: 2,
		CONFIRMED: 3,
		ERROR: 4,
		TIMEOUT: 5
	};
	var e = function (a, e, i) {
		sendRequest("/account/api/qr_code_create", {
			method: "POST",
			showLoading: false,
			data: {
				code_type: a,
				extra_param: JSON.stringify(e)
			},
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				var t = e.data;
				if (t.action != QrCodeAction[a]) {
					console.log("this code is not used for this action");
					return
				}
				i && i(t.code_id, t.url)
			}
		})
	};
	var p = function (e) {
		var t = $(o);
		var a = t[0];
		t.empty();
		var i = new QRCode(a, {
			width: 138,
			height: 138
		});
		i.clear();
		i.makeCode(e);
		i._el.title = ""
	};
	var f = function (e, t) {
		switch (e) {
			case d.INIT:
				break;
			case d.WAIT_SCAN:
				$(_).hide();
				$(l).hide();
				var a = t.url;
				p(a);
				break;
			case d.WAIT_CONFIRM:
				$(l).show();
				break;
			case d.ERROR:
				Buff.toast("发生未知错误");
				break;
			case d.TIMEOUT:
				$(_).show();
				$(l).hide();
				break;
			case d.CONFIRMED:
				setTimeout(function () { }, 1e3);
				break
		}
	};
	var m = function () {
		clearInterval(t);
		t = null
	};
	var h = function (i, n) {
		var e = localStorage.getItem(a);
		if (i != e) {
			m()
		}
		localStorage.setItem(a, i);
		t = setInterval(function () {
			if (!t) {
				return
			}
			sendRequest("/account/api/qr_code_poll", {
				method: "GET",
				showLoading: false,
				data: {
					item_id: localStorage.getItem(a)
				},
				success: function (e) {
					if (e.code != "OK") {
						console.log("polling return not ok code");
						return
					}
					var t = e.data;
					var a = t.state;
					switch (a) {
						case d.WAIT_CONFIRM:
							f(a);
							break;
						case d.ERROR:
							f(a);
							break;
						case d.TIMEOUT:
							m();
							if (r) {
								g(function () {
									setTimeout(v, 1e3)
								})
							} else {
								f(a)
							}
							break;
						case d.CONFIRMED:
							m();
							f(a);
							n && n(i, u);
							break
					}
				}
			})
		}, 1500)
	};
	var g = function (e) {
		e();
		r = false
	};
	var v = function () {
		var a = n;
		f(d.INIT);
		e(a.code_type, a.extra_params, function (e, t) {
			f(d.WAIT_SCAN, {
				code_id: e,
				url: t
			});
			h(e, a.finish_callback)
		})
	};
	var y = function (e) {
		i = "#j_popup_login";
		if (e == QrCodeType.GIFT_CARD_BUY_VERIFY) {
			i = "#j_popup_gift_card_buy_verify"
		}
		s = i + " #refresh_login_qr_code";
		c = i + " #close_entry";
		o = i + " #qr_code_box";
		_ = i + " #qrcode_invalid";
		l = i + " #qrcode_scan_finish"
	};
	var b = function (e, t, a) {
		if (!a) {
			a = function (e, t) { }
		}
		n = {
			code_type: e,
			extra_params: t,
			finish_callback: a
		};
		y(e);
		$(document).off("click", c).on("click", c, function () {
			Popup.hide();
			m()
		});
		$(document).off("click", ".cover").on("click", ".cover", function () {
			if (["#j_popup_login", "#j_popup_gift_card_buy_verify"].includes(Popup.boxes[Popup.boxes.length - 1].selector)) {
				Popup.hide();
				m()
			}
		});
		$(document).off("click", s).on("click", s, function () {
			g(function () {
				m();
				v()
			})
		});
		if (e == QrCodeType.GIFT_CARD_BUY_VERIFY) {
			$("body").append(template_render("gift_card_buy_verify_pat"));
			Popup.show("j_popup_gift_card_buy_verify")
		}
		v();
		var i = function () {
			Fingerprint2.get(e => {
				const t = e.map(e => e.value);
				u = Fingerprint2.x64hash128(t.join(""), 31)
			})
		};
		setTimeout(function () {
			i()
		}, 600)
	};
	return {
		init: b
	}
}();
var userProfile = function (e, n, t, a) {
	var r = t;
	var o = a;
	var s = null;
	var c = e;
	var _ = function (e) {
		if (e <= 1) {
			return i18n("1_seconds")
		}
		var t = [60, 60, 24, 365, 100];
		var a = [i18n("seconds"), i18n("minutes"), i18n("hours"), i18n("days"), i18n("years"), i18n("century")];
		var i = parseInt(e);
		for (var n = 0; n < t.length; n++) {
			if (i < t[n]) {
				return "" + i + a[n]
			}
			i = Math.floor(i / t[n])
		}
		return i18n("a_period_of_time_") + parseInt(e) + i18n("seconds")
	};
	var l = function (e, t, a) {
		var i = {
			steam_id: e
		};
		if (t) {
			i.authcode = t
		}
		sendRequest("/account/api/bind_steam/confirm", {
			method: "POST",
			dataType: "json",
			data: i,
			success: function (e) {
				if (e.code == "OK") {
					Buff.toast(i18n("the_binding_is_successful"), {
						type: "success"
					});
					if (a) a();
					window.location.reload()
				} else {
					Buff.toast(e.error, {
						type: "error"
					});
					if ($(".popup.steam_network").is(":visible")) {
						Popup.hide()
					}
				}
			}
		})
	};
	var u = function () {
		var e = getCookie("steam_info_to_bind");
		var t = getCookie("bind_steam_err_msg");
		if (e) {
			clearInterval(s);
			s = null;
			removeCookie("steam_info_to_bind");
			if ($(".popup.steam_network").is(":visible")) {
				Popup.hide()
			}
			var a = e.split(":");
			var i = a[0];
			var n = a[1];
			var r = parseInt(a[2] || "0");
			var o = a[3] || "";
			Buff.alert({
				title: i18n("binding_acknowledgment"),
				message: i18n("acknowledgment_is_bound_to_the") + n + "\nSteam ID：" + i,
				success: function () {
					if (!r) {
						l(i)
					} else {
						var e = function (e) {
							sendRequest("/account/api/bind_steam/send_authcode", {
								method: "POST",
								dataType: "json",
								showLoading: false,
								success: function () {
									if (e) {
										e()
									}
								}
							})
						};
						bindCard.show_authcode_popup({
							send_authcode_function: e,
							verify_authcode_function: function (e, t) {
								l(i, e, t)
							},
							mobile: o,
							authcode_length: 4,
							popup_id: "j_popup_bind_authcode"
						});
						e()
					}
				}
			})
		} else if (t) {
			clearInterval(s);
			s = null;
			removeCookie("bind_steam_err_msg");
			if ($(".popup.steam_network").is(":visible")) {
				Popup.hide()
			}
			Buff.toast(t, {
				type: "error"
			})
		}
	};
	var i = function () {
		$(".user_nickname .change_name").click(function () {
			if (o > 0) {
				Buff.toast(i18n("nickname_modify_too_frequently_notice", {
					time: _(o)
				}))
			} else {
				$(".user_nickname .name_tab1").hide();
				$(".user_nickname .name_tab2").css({
					display: "inline-block"
				})
			}
		});
		$(".user_nickname .change_name_cancel").click(function () {
			$(".user_nickname .name_tab1").show();
			$(".user_nickname .name_tab2").hide()
		});
		$(".user_nickname .change_name_confirm").click(function () {
			var e = $("input[name=nickname]").val();
			if (r == e) {
				Buff.toast(i18n("please_modify_the_nickname"));
				return
			}
			sendRequest("/account/api/nickname", {
				method: "POST",
				dataType: "json",
				showLoading: false,
				data: {
					nickname: e
				},
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("modify_the_success"));
						$("input[name=nickname]").removeClass("i_Text_error");
						window.location.reload()
					} else if (e.code == "Rate Limit Exceeded") {
						Buff.toast(e.error);
						$("input[name=nickname]").addClass("i_Text_error")
					} else {
						if (e.error.nickname) {
							Buff.toast(e.error.nickname[0])
						} else {
							Buff.toast(e.error)
						}
						$("input[name=nickname]").addClass("i_Text_error")
					}
				},
				error: function () {
					Buff.toast(i18n("failure_to_modify"))
				}
			})
		});
		$(".trade_url .i_Btn").click(function () {
			var e = $("input[name=trade_url]").val();
			if (!e) {
				Buff.toast(i18n("please_fill_out_the_trading"));
				$("input[name=trade_url]").addClass("i_Text_error");
				return
			}
			var t = "https://steamcommunity.com/tradeoffer/new/?";
			if (e.substr(0, t.length) !== t) {
				Buff.toast(i18n("trading_link_format_error"));
				$("input[name=trade_url]").addClass("i_Text_error");
				return
			}
			$("input[name=trade_url]").removeClass("i_Text_error");
			sendRequest("/api/market/steam/trade_url", {
				method: "POST",
				dataType: "json",
				data: {
					trade_url: e
				},
				showLoading: true,
				success: function (e) {
					if (e.code === "OK") {
						$("input[name=trade_url]").removeClass("i_Text_error");
						Buff.toast(i18n("trade_url_setting_successful"), {
							type: "success"
						})
					} else {
						$("input[name=trade_url]").addClass("i_Text_error");
						Buff.toast(i18n("set_to_fail") + (e.error || e.code), {
							type: "error"
						})
					}
				},
				error: function () {
					$("input[name=trade_url]").addClass("i_Text_error");
					Buff.toast("设置失败，请稍后再试", {
						type: "error"
					})
				}
			})
		});
		$(".steam_api_key .i_Btn").click(function () {
			var e = $.trim($("input[name=steam_api_key]").val());
			if (e == "********************************") {
				Buff.toast(i18n("api_key_successfully_set"), {
					type: "success"
				});
				return
			}
			if (e.length != 0 && e.length != 32) {
				Buff.toast(i18n("api_key_format_error"));
				$("input[name=steam_api_key]").addClass("i_Text_error");
				return
			}
			$("input[name=steam_api_key]").removeClass("i_Text_error");
			var t = function () {
				sendRequest("/account/api/steam_api_key_raw", {
					method: "POST",
					dataType: "json",
					data: {
						api_key: e
					},
					showLoading: true,
					success: function (e) {
						if (e.code === "OK") {
							$("input[name=steam_api_key]").removeClass("i_Text_error");
							Buff.toast(i18n("api_key_successfully_set"), {
								type: "success"
							})
						} else {
							$("input[name=steam_api_key]").addClass("i_Text_error");
							Buff.toast(i18n("set_to_fail") + (e.error || e.code), {
								type: "error"
							})
						}
					},
					error: function () {
						$("input[name=steam_api_key]").addClass("i_Text_error");
						Buff.toast(i18n("settings_failed_please_try_again"), {
							type: "error"
						})
					}
				})
			};
			if (e.length == 0) {
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("clear_the_api_key_after"),
					confirmText: i18n("confirm_clear"),
					success: t
				})
			} else {
				t()
			}
		});
		$("#steam-bind").click(function () {
			Buff.alert({
				title: i18n("access_to_the_steam_encounters"),
				safeMessage: i18n("recommended_use_of_the_netease"),
				hideCancel: true,
				confirmText: i18n("i_know"),
				rememberDismiss: "steam_network_error",
				extraClasses: "steam_network",
				success: function () { }
			});
			var e = "/account/login/steam?back_url=/account/steam_bind/finish";
			window.open(e, "_blank", "width=800,height=800");
			if (s == null) {
				s = setInterval(function () {
					u()
				}, 200)
			}
		});
		var i = function () {
			var e = getCookie("unbind_steam_result");
			if (!e) {
				setTimeout(i, 200);
				return
			}
			if ($(".popup.steam_network").is(":visible")) {
				Popup.hide()
			}
			removeCookie("unbind_steam_result");
			var t = JSON.parse(e);
			if (!t.success) {
				if (t.message) {
					Buff.toast(t.message, {
						type: "error"
					})
				}
				return
			}
			var a = function (e) {
				sendRequest("/account/api/unbind_steam/send_authcode", {
					method: "POST",
					dataType: "json",
					showLoading: false,
					success: function () {
						if (e) {
							e()
						}
					}
				})
			};
			$(".step-line-12").addClass("on");
			$(".step-2").addClass("on");
			$(".guide-desc-1").hide();
			$(".guide-desc-2").show();
			Popup.hide();
			bindCard.show_authcode_popup({
				send_authcode_function: a,
				verify_authcode_function: function (e, t) {
					sendRequest("/account/api/unbind_steam/verify_authcode", {
						method: "POST",
						dataType: "json",
						data: {
							authcode: e
						},
						success: function (e) {
							if (e.code !== "OK") {
								Buff.toast(e.error, {
									type: "error"
								})
							} else {
								if (t) {
									t()
								}
								$(".step-line-23").addClass("on");
								$(".step-3").addClass("on");
								$(".guide-desc-2").hide();
								$(".guide-desc-success").show();
								Popup.show("j_popup_unbind")
							}
						}
					})
				},
				mobile: $("#mobile").text(),
				authcode_length: 4,
				popup_id: "j_popup_unbind"
			});
			a()
		};
		var t = function () {
			Buff.alert({
				title: i18n("access_to_the_steam_encounters"),
				safeMessage: i18n("recommended_use_of_the_netease"),
				hideCancel: true,
				confirmText: i18n("i_know"),
				rememberDismiss: "steam_network_error",
				extraClasses: "steam_network",
				success: function () { }
			});
			var e = "/account/unbind_steam/openid_login";
			window.open(e, "_blank", "width=800,height=800");
			setTimeout(function () {
				i()
			}, 200)
		};
		$("#steam-unbind").click(function () {
			sendRequest("/account/api/unbind_steam/check", {
				method: "GET",
				dataType: "json",
				success: function (e) {
					if (e.code !== "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					Popup.show("j_popup_unbind");
					$("#btn-verify-steam").on("click", function () {
						t()
					})
				}
			})
		});
		$("#user-prefer-allow_buyer_bargain").change(function () {
			var e = $(this).attr("value") == "allow" ? "true" : "false";
			sendRequest("/account/api/prefer/allow_buyer_bargain", {
				method: "POST",
				data: {
					allow_buyer_bargain: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$("#user-prefer-allow_buyer_bargain_chat").change(function () {
			var e = $(this).attr("value") == "allow" ? "true" : "false";
			sendRequest("/account/api/prefer/allow_buyer_bargain_chat", {
				method: "POST",
				data: {
					allow_buyer_bargain_chat: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$("#user-prefer-allow_alipay").change(function () {
			var e = $(this).attr("value") == "allow" ? "true" : "false";
			if (e == "false") {
				if ($("#user-prefer-allow_epay span.on").attr("value") != "allow") {
					Buff.toast(i18n("must_allow_epay_or_alipay"), {
						type: "error"
					});
					$(this).find("span").toggleClass("on");
					return
				}
			}
			sendRequest("/account/api/prefer/allow_alipay", {
				method: "POST",
				data: {
					allow_alipay: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						});
						$("#user-prefer-allow_alipay span").toggleClass("on")
					}
				}
			})
		});
		$("#user-prefer-allow_epay").change(function () {
			var e = $(this).attr("value") == "allow" ? "true" : "false";
			if (e == "false") {
				if ($("#user-prefer-allow_alipay span.on").attr("value") != "allow") {
					Buff.toast(i18n("must_allow_epay_or_alipay"), {
						type: "error"
					});
					$(this).find("span").toggleClass("on");
					return
				}
			}
			sendRequest("/account/api/prefer/allow_epay", {
				method: "POST",
				data: {
					allow_epay: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						});
						$("#user-prefer-allow_epay span").toggleClass("on")
					}
				}
			})
		});
		$("#user-prefer-allow_shop_display").change(function () {
			var t = $(this).attr("value") == "allow" ? "true" : "false";
			sendRequest("/account/api/prefer/allow_shop_display", {
				method: "POST",
				data: {
					allow_shop_display: t
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						});
						$("#user-prefer-allow_shop_display span").toggleClass("on");
						$("#user-prefer-allow_shop_display").attr("value", t ? "" : "allow")
					}
				}
			})
		});
		$("#user-prefer-buff-price-currency").change(function () {
			var e = $(this).attr("value");
			sendRequest("/account/api/prefer/buff_price_currency", {
				method: "POST",
				data: {
					buff_price_currency: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$("#user-prefer-game-cms-client").change(function () {
			var e = $(this).attr("value");
			sendRequest("/account/api/prefer/game_cms_client", {
				method: "POST",
				data: {
					game_cms_client: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$("#user-prefer-force_buyer_send_offer").change(function () {
			var t = $(this).attr("value") == "allow" ? "true" : "false";
			sendRequest("/account/api/prefer/force_buyer_send_offer", {
				method: "POST",
				data: {
					force_buyer_send_offer: t
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						});
						$("#user-prefer-force_buyer_send_offer span").toggleClass("on");
						$("#user-prefer-force_buyer_send_offer").attr("value", t ? "" : "allow")
					}
				}
			})
		});
		$("#user-prefer-allow_sms_notification").change(function () {
			var e = function (t) {
				sendRequest("/account/api/prefer/allow_sms_notification", {
					method: "POST",
					data: {
						allow_sms_notification: t
					},
					dataType: "json",
					success: function (e) {
						if (e.code == "OK") {
							Buff.toast(i18n("set_success"), {
								type: "success"
							})
						} else {
							Buff.toast(e.error, {
								type: "error"
							});
							$("#user-prefer-allow_sms_notification span").toggleClass("on");
							$("#user-prefer-allow_sms_notification").attr("value", t ? "" : "allow")
						}
					}
				})
			};
			var t = $(this).attr("value") == "allow" ? "true" : "false";
			if (t == "false") {
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("disable_sms_notification_alert"),
					hideCancel: true,
					success: function () {
						e(t)
					},
					onClose: function () {
						$("#user-prefer-allow_sms_notification span").addClass("on");
						$("#user-prefer-allow_sms_notification").attr("value", "allow")
					}
				})
			} else {
				e(t)
			}
		});
		$("#user-prefer-inventory-price").change(function () {
			var e = $(this).attr("value");
			sendRequest("/account/api/prefer/inventory_price", {
				method: "POST",
				data: {
					inventory_price: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("set_success"), {
							type: "success"
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$("#user-prefer-antiscam_level").change(function () {
			var e = function (e) {
				sendRequest("/account/api/prefer/antiscam_level", {
					method: "POST",
					data: {
						antiscam_level: e
					},
					dataType: "json",
					success: function (e) {
						if (e.code == "OK") {
							Buff.toast(i18n("set_success"), {
								type: "success"
							})
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					}
				})
			};
			var t = parseInt($(this).attr("value"));
			if (t == 1) {
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("disable_antiscam"),
					hideCancel: true,
					success: function () {
						e(t)
					}
				})
			} else {
				e(t)
			}
		});
		$("#user-prefer-allow_auto_remark").change(function () {
			var e = function (t) {
				sendRequest("/account/api/prefer/allow_auto_remark", {
					method: "POST",
					data: {
						allow_auto_remark: t
					},
					dataType: "json",
					success: function (e) {
						if (e.code == "OK") {
							Buff.toast(i18n("set_success"), {
								type: "success"
							})
						} else {
							Buff.toast(e.error, {
								type: "error"
							});
							$("#user-prefer-allow_auto_remark span").toggleClass("on");
							$("#user-prefer-allow_auto_remark").attr("value", t ? "" : "allow")
						}
					}
				})
			};
			var t = $(this).attr("value") == "allow" ? "true" : "false";
			e(t)
		});
		$("#j_popup_icon_idcard").click(function () {
			Popup.hide();
			bindCard.show_cert_popup(function () {
				document.location.reload()
			})
		});
		$("#j_popup_icon_passport").click(function () {
			Popup.hide();
			sendRequest("/api/asset/get_realname/v2/", {
				method: "get",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					var t = e.data.supported_cert_types;
					if (t.length == 0) {
						return
					}
					if (!t.includes("kyc") && !t.includes("manual")) {
						Buff.toast(i18n("verify_by_other_methods"));
						return
					}
					if (t.includes("kyc") && t.includes("manual")) {
						Popup.hide();
						var a = e.data.cert_type_info;
						var i = a["kyc"]["left_count"] || 0;
						$("#kyc_left_count").text(i18n("kyc_left_count", {
							n: i
						}));
						$("#kyc_left_count").attr("kyc_left_count", i);
						Popup.show("j_popup_ways_inter")
					} else if (!t.includes("kyc")) {
						Popup.hide();
						bindCard.init_manual_cert(function () {
							document.location.reload()
						});
						Popup.show("j_popup_manual_cert")
					} else if (!t.includes("manual")) {
						var a = e.data.cert_type_info;
						var i = a["kyc"]["left_count"] || 0;
						if (i == 0) {
							Buff.toast(i18n("verify_by_other_methods"));
							return
						}
						sendRequest("/api/asset/zignsec/get_url/", {
							method: "post",
							dataType: "json",
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error, {
										type: "error"
									});
									return
								}
								openPageOnNewTab(e.data.redirect_url);
								Popup.hide()
							}
						})
					}
				}
			})
		});
		$("#select_icon_zignsec").click(function () {
			kyc_left_count = parseInt($("#kyc_left_count").attr("kyc_left_count"));
			if (kyc_left_count == 0) {
				Buff.toast(i18n("verify_by_other_methods"));
				return
			}
			sendRequest("/api/asset/zignsec/get_url/", {
				method: "post",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					openPageOnNewTab(e.data.redirect_url);
					Popup.hide()
				}
			})
		});
		$("#select_icon_buffmanual").click(function () {
			Popup.hide();
			bindCard.init_manual_cert(function () {
				document.location.reload()
			});
			Popup.show("j_popup_manual_cert")
		});
		$(".Btn_realname_cert").click(function () {
			if (c) {
				Popup.show("j_popup_idcard_inter")
			} else {
				bindCard.show_cert_popup(function () {
					document.location.reload()
				})
			}
		});
		$(".Btn_bind_card").click(function () {
			bindCard.show_bind_card_popup(n, function () {
				document.location.reload()
			})
		});
		$(document).on("click", "#j_popup_goodsbg ul li", function () {
			$(this).addClass("on").siblings().removeClass("on");
			var e = $(this).attr("data-index");
			var t = $(this).find("img").attr("src");
			sendRequest("/account/api/prefer/switch_inspect_bg", {
				method: "POST",
				data: {
					img_index: e
				},
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					Buff.toast(i18n("set_success"), {
						type: "success"
					});
					$("#user-prefer-inspect_bg_img").attr({
						src: t
					})
				}
			})
		});
		$("#user-prefer-allow_preview_screenshots").change(function () {
			var e = $(this).attr("value") == "true" ? true : false;
			sendRequest("/account/api/prefer/allow_preview_screenshots", {
				data: {
					switch_val: e
				},
				method: "POST",
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error);
						return
					}
					Buff.toast(i18n("set_success"), {
						type: "success"
					})
				}
			})
		});
		var a = function () {
			window.BAS.AS.reset();
			sendRequest("/api/asset/basisid/token/", {
				method: "POST",
				timeout: 3e4,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					window.BAS.AS.initFrame({
						key: "prod-ZoJaaVfisIlrhtIIiGSEbGBfGpFCczWF",
						bas_gw: "https://api.basisid.com/",
						container_id: "bas-widget-container",
						ui: {
							width: "100%",
							height: "705px",
							style: "",
							mobile_height: "auto"
						},
						options: {
							api_form_token: e.data.token
						},
						events: {
							onLoad: function () {
								Popup.show("j_popup_kyc_cert")
							},
							onManualCheck: function (e) {
								if (e.status === "ok") {
									if (e.user_hash) {
										sendRequest("/api/asset/basisid/verify/", {
											method: "POST",
											timeout: 3e4,
											data: {
												user_hash: e.user_hash
											},
											success: function (e) {
												window.location.reload()
											}
										})
									}
								} else {
									window.location.reload()
								}
							}
						}
					})
				}
			})
		};
		if ($("#kyc_cert").length > 0) {
			sendRequest("/api/asset/basisid/state/", {
				method: "GET",
				timeout: 3e4,
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					$("#kyc_cert ." + e.data.cert.state).show();
					$("#kyc_cert .placeholder1").hide();
					if (e.data.cert.message) {
						$("#kyc_cert ." + e.data.cert.state).find(".message").attr("data-content", e.data.cert.message).show()
					}
					$("#kyc_cert .state-text").text(e.data.cert.state);
					if (["Pending", "Approved"].indexOf(e.data.cert.state) < 0) {
						$("#kyc_cert .t_Right").show();
						$("#kyc_cert .placeholder2").hide()
					}
					if (e.data.allow_to_verify) {
						$(".Btn_kyc_cert").click(a)
					} else {
						$(".Btn_kyc_cert").click(function () {
							Buff.toast(e.data.not_allow_message, {
								type: "error"
							})
						})
					}
				}
			})
		}
		f();
		$("#bind-badlanders").click(function () {
			Popup.show("j_popup_g101_bind")
		})
	};
	var d = function () {
		if (!g.user) {
			if (window.location.pathname == "/account/login") {
				return
			}
			loginModule.showLogin();
			return
		}
		Popup.show("j_popup_weixin");
		var n = null;
		var r = function () {
			sendRequest("/account/api/bind_wechat/get_dynamic_code", {
				method: "GET",
				showLoading: false,
				success: function (t) {
					if (t.code != "OK") {
						Buff.toast(i18n("to_obtain_the_dynamic_code"), {
							type: "error"
						});
						return
					}
					$("#j_progress").width("0%");
					var e = t.data.code;
					var a = "";
					e.split("").map(function (e) {
						a += format_html('<span class="flipInX"><%= elem %></span>', {
							elem: e
						})
					});
					$("#j_qrcode").html(a);
					var i = 0;
					n = setInterval(function () {
						var e = 100 / t.data.refresh;
						i += e;
						$("#j_progress").width(i + "%");
						if (i >= 100) {
							clearInterval(n);
							r()
						}
					}, 1e3);
					$("#j_popup_weixin .popup-close").off("click").click(function () {
						Popup.hide();
						clearInterval(n)
					})
				}
			})
		};
		r()
	};
	var p = function (e) {
		e.force = true;
		ejzbAuthVerifyManager().process(e, null, null, null, function () {
			location.reload()
		})
	};
	var f = function () {
		if ($("#j_popup_g101_bind").attr("inited")) return;
		$("#confirm-bind-badlanders").click(function () {
			var e = $(this).parents(".popup");
			var t = e.find("input[name=role_id]").val();
			var a = e.find("input[name=token]").val();
			sendRequest("/account/api/partner/bind_role", {
				method: "POST",
				data: {
					role_id: t,
					token: a,
					game: g.game
				},
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					Buff.toast(i18n("the_binding_is_successful"), {
						type: "success"
					});
					setTimeout(function () {
						window.location.reload()
					}, 2e3)
				}
			})
		});
		$("#j_popup_g101_bind .popup-select-code").click(function () {
			Popup.hide();
			Popup.show("j_popup_g101_bind_code")
		});
		var r = undefined;
		var o = function (e, t, a) {
			a = a || "0";
			e = e + "";
			return e.length >= t ? e : new Array(t - e.length + 1).join(a) + e
		};
		$("#j_popup_g101_bind .popup-select-qr").click(function () {
			Popup.hide();
			Popup.show("j_popup_g101_bind_qr");
			s()
		});
		var s = function () {
			if (r) {
				clearInterval(r);
				r = undefined
			}
			$("#bind-badlanders-qrcode-time").text("");
			sendRequest("/account/api/partner/get_dynamic_code", {
				method: "GET",
				data: {
					game: g.game
				},
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					var i = e.data.expire_time;
					var t = "https://nie.res.netease.com/comm/gamestart/index.html?kw=" + e.data.user_token + "#id=banzhuan";
					$("#bind-badlanders-qrcode").html("");
					new QRCode(document.getElementById("bind-badlanders-qrcode"), {
						text: t,
						width: 140,
						height: 140
					});
					$("#bind-badlanders-qrcode").attr("title", "");
					var n = 0;
					r = setInterval(function () {
						var e = i - Math.round(Date.now() / 1e3);
						if (e <= 0) {
							clearInterval(r);
							r = undefined;
							e = 0;
							$("#bind-badlanders-qrcode").html('<img src="/static/images/2x/icon_goodsdetail_16_refresh_normal.png" style="margin-top: 54px; cursor: pointer;">');
							$("#bind-badlanders-qrcode img").click(function () {
								s()
							})
						}
						var t = Math.floor(e / 60);
						e = e % 60;
						var a = o(t, 2) + ":" + o(e, 2);
						$("#bind-badlanders-qrcode-time").text(a);
						if (Date.now() - n > 5e3) {
							n = Date.now();
							sendRequest("/account/api/user/info/v2", {
								method: "GET",
								showLoading: false,
								showError: false,
								success: function (e) {
									if (e.code != "OK") return;
									if (e.data.user_info.partner_role_info && e.data.user_info.partner_role_info[g.game]) {
										Popup.hide();
										clearInterval(r);
										r = undefined;
										Buff.toast(i18n("the_binding_is_successful"), {
											type: "success"
										});
										setTimeout(function () {
											window.location.reload()
										}, 2e3)
									}
								}
							})
						}
					}, 1e3)
				}
			})
		};
		$(".popup_g101_bind_qr .popup-close").click(function () {
			clearInterval(r);
			r = undefined
		});
		$("#j_popup_g101_bind .popup-select-launch").click(function () {
			sendRequest("/account/api/partner/get_dynamic_code", {
				method: "GET",
				data: {
					game: g.game
				},
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					var t = "https://nie.res.netease.com/comm/gamestart/index.html?kw=" + e.data.user_token + "#id=banzhuan";
					window.location.href = t
				}
			})
		});
		$("#j_popup_g101_bind").attr("inited", "1")
	};
	var m = function (t) {
		if (!sessionStorage.getItem("badlanders_bind")) {
			if (t) t();
			return
		}
		var e = JSON.parse(sessionStorage.getItem("badlanders_bind"));
		if (e.time < Date.now() - 1800 * 1e3) {
			sessionStorage.setItem("badlanders_bind", undefined);
			if (t) t();
			return
		}
		if (g.user.partner_role_info && g.user.partner_role_info[g.appid]) {
			sessionStorage.setItem("badlanders_bind", undefined);
			if (t) t();
			return
		}
		sendRequest("/account/api/partner/bind_role", {
			method: "POST",
			data: {
				role_id: e.role_id,
				token: e.token,
				game: e.game,
				app_channel: e.app_channel || "",
				login_channel: e.login_channel || ""
			},
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					if (t) {
						setTimeout(t, 2e3)
					}
					return
				}
				Buff.toast(i18n("the_binding_is_successful"), {
					type: "success"
				});
				if (t) {
					setTimeout(t, 2e3);
					return
				}
				setTimeout(function () {
					window.location.reload()
				}, 2e3)
			}
		})
	};
	return {
		init: i,
		showWechatPopup: d,
		showEjzbAuthPopup: p,
		initBindBadlanders: f,
		tryBindBadlandersFromGame: m
	}
};
var guideManager = function (i) {
	var i = i || "";
	var s = false;
	var e = format_html('<div class="popup popup_guide" id="j_popup_guide" style="width:600px;">    <a class="popup-close" href="javascript:;" onclick="window.location.reload()">×</a>    <div class="popup-header"><h2><%= i18n("set_the_boot") %></h2></div>    <p class="popup-tip c_Green"><%= i18n("in_order_to_your_funds") %></p>    <div class="popup-cont" style="min-height:410px;">        <div class="guide-steps">        </div>        <div class="guide-desc">        </div>    </div></div>');
	var n = function (e, t) {
		var a = "";
		if (typeof e == "string" && e.length > 0) {
			a += format_html('            <div class="step-1">                <i class="icon icon_success_big"></i>                <h5><%= i18n("binding_steam") %></h5>            </div>            <div class="step-line on"></div>');
			s = false
		} else {
			a += format_html('            <div class="step-1">                <span>1</span>                <h5><%= i18n("binding_steam") %></h5>            </div>            <div class="step-line"></div>');
			s = true
		}
		if (typeof t == "string" && t.length > 0) {
			a += format_html('            <div class="step-1">                <i class="icon icon_success_big"></i>                <h5><%= i18n("set_up_trading_links") %></h5>            </div>')
		} else {
			a += format_html('            <div class="step-1">                <span>2</span>                <h5><%= i18n("set_up_trading_links") %></h5>            </div>')
		}
		a += '<p class="clear"></p>';
		$("#j_popup_guide .guide-steps").html(a)
	};
	var r = function (e, t) {
		var a = "";
		if (typeof e != "string" || e.length == 0) {
			a = format_html('            <div class="guide-block">                <p><%= i18n("binding_steam_before_you_can") %></p>                <p><a href="javascript:;" data-url="/account/login/steam?back_url=/account/steam_bind/finish" data-target="_blank" class="i_Btn go_to_steam"><%= i18n("to_steam") %></a></p>            </div>            <a href="javascript:;" onclick="window.location.reload()"><%= i18n("skip_maybe_next_time") %></a></p>')
		} else if (typeof t != "string" || t.length == 0) {
			a = format_html('            <div class="guide-block trade-url">                <p class="t_Left"><span class="l_Right"><a class="go_to_steam" href="javascript:;" data-url="https://steamcommunity.com/my/tradeoffers/privacy#trade_offer_access_url" data-size="1200*800" data-target="_blank"><%= i18n("get_steam_trading_link") %></a><i class="icon icon_arr_right_small"></i></span><%= i18n("binding_transaction_link_the_immediate") %></p>                <p class="t_Left"><input type="text" name="trade_url" class="i_Text" placeholder="<%= i18n("please_enter_your_steam_trade") %>"><a href="javascript:;" class="i_Btn"><%= i18n("save") %></a></p>            </div>            <p class="t_Right">            <a href="javascript:;" onclick="window.location.reload()"><%= i18n("skip_maybe_next_time") %></a></p>')
		}
		if (a.length == 0) {
			a = format_html('            <div class="guide-block guide-block_success">                <p style="line-height:70px;"><%= i18n("congratulations_to_you!_welcome_to") %></p>            </div>');
			if (i.length > 0 && isValidLink(i)) {
				a += format_html('<p><a href="<%= backUrl %>" class="i_Btn i_Btn_long" onclick="window.location.reload()"><%= i18n("complete") %></a></p>', {
					backUrl: i
				})
			} else {
				a += format_html('<p><a href="/market/steam_inventory" class="i_Btn i_Btn_long"><%= i18n("view_my_steam_inventory") %></a></p>')
			}
		}
		$("#j_popup_guide .guide-desc").html(a)
	};
	var t = function (t) {
		sendRequest("/account/api/user/info", {
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code == "OK") {
					t(e.data)
				} else {
					Buff.toast(e.error)
				}
			}
		})
	};
	var a = function () {
		$("body").append(e);
		$(document).on("click", ".trade-url .i_Btn", function () {
			var e = $("input[name=trade_url]").val();
			if (!e) {
				Buff.toast(i18n("please_fill_out_the_trading"));
				$("input[name=trade_url]").addClass("i_Text_error");
				return
			}
			var t = "https://steamcommunity.com/tradeoffer/new/?";
			if (e.substr(0, t.length) !== t) {
				Buff.toast(i18n("trading_link_format_error"));
				$("input[name=trade_url]").addClass("i_Text_error");
				return
			}
			$("input[name=trade_url]").removeClass("i_Text_error");
			sendRequest("/api/market/steam/trade_url", {
				method: "POST",
				dataType: "json",
				data: {
					trade_url: e
				},
				showLoading: true,
				success: function (e) {
					if (e.code === "OK") {
						$("input[name=trade_url]").removeClass("i_Text_error");
						sendRequest("/account/api/user/info", {
							method: "GET",
							showLoading: false,
							showError: false,
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error);
									return
								} else {
									n(e.data.steamid, e.data.trade_url);
									r(e.data.steamid, e.data.trade_url)
								}
							}
						})
					} else {
						$("input[name=trade_url]").addClass("i_Text_error");
						Buff.toast(i18n("set_to_fail") + (e.error || e.code))
					}
				},
				error: function () {
					$("input[name=trade_url]").addClass("i_Text_error");
					Buff.toast(i18n("settings_failed_please_try_again"))
				}
			})
		})
	};
	var c = function (t, e, a) {
		var i = {
			steam_id: t
		};
		if (e) {
			i.authcode = e
		}
		sendRequest("/account/api/bind_steam/confirm", {
			method: "POST",
			dataType: "json",
			data: i,
			success: function (e) {
				if (e.code == "OK") {
					if (a) a();
					n(t, null);
					r(t, null)
				} else {
					Buff.toast(e.error, {
						type: "error"
					});
					if ($(".popup.steam_network").is(":visible")) {
						Popup.hide()
					}
				}
			}
		})
	};
	var _ = function () {
		if ($("#j_popup_bind_authcode").length == 0) {
			var e = format_html('    <div class="popup" id="j_popup_bind_authcode">        <a class="popup-close" href="javascript:;">×</a>        <div class="popup-cont">            <h2><%= i18n("enter_the_verification_code") %></h2>            <div class="popup-desc">                <p><%= i18n("please_do_the_safety_confirmation") %><span id="mobile"></span><%= i18n("the_phone_receives_the_verification") %></p>                <p class="t_Center">                    <input type="text" class="i_Text" name="authcode" placeholder="<%= i18n("please_enter_the_verification_code") %>" size="38">                </p>            </div>        </div>        <div class="popup-btns">            <a href="javascript:;" class="i_Btn i_Btn_sub i_Btn_disabled" id="resend_authcode"><%= i18n("get_the_verification_code") %></a><a href="javascript:;" class="i_Btn i_Btn_main i_Btn_disabled" id="verify_authcode"><%= i18n("ok") %></a>        </div>    </div>');
			$("body").append($(e))
		}
	};
	var o = function () {
		if (s) {
			var e = getCookie("steam_info_to_bind");
			var t = getCookie("bind_steam_err_msg");
			if (e) {
				removeCookie("steam_info_to_bind");
				if ($(".popup.steam_network").is(":visible")) {
					Popup.hide()
				}
				var a = e.split(":");
				var i = a[0];
				var n = a[1];
				var r = parseInt(a[2] || "0");
				var o = a[3] || "";
				Buff.alert({
					title: i18n("binding_acknowledgment"),
					message: i18n("acknowledgment_is_bound_to_the") + n + "\nSteam ID：" + i,
					success: function () {
						if (!r) {
							c(i)
						} else {
							_();
							var e = function (e) {
								sendRequest("/account/api/bind_steam/send_authcode", {
									method: "POST",
									dataType: "json",
									showLoading: false,
									success: function () {
										if (e) {
											e()
										}
									}
								})
							};
							bindCard.show_authcode_popup({
								send_authcode_function: e,
								verify_authcode_function: function (e, t) {
									c(i, e, t)
								},
								mobile: o,
								authcode_length: 4,
								popup_id: "j_popup_bind_authcode"
							});
							e()
						}
					}
				})
			} else if (t) {
				removeCookie("bind_steam_err_msg");
				if ($(".popup.steam_network").is(":visible")) {
					Popup.hide()
				}
				Buff.toast(t, {
					type: "error"
				})
			}
		}
	};
	var l = function (e) {
		Popup.hide();
		var t = e.steamid || null;
		var a = e.trade_url || "";
		Popup.show("j_popup_guide");
		n(t, a);
		r(t, a);
		setInterval(o, 200)
	};
	var u = function (e) {
		if (g.is_partner_appid) return false;
		if (typeof e.steamid != "string" || e.steamid.length == 0) return true;
		if (typeof e.trade_url != "string" || e.trade_url.length == 0) return true;
		return false
	};
	return {
		init: a,
		show: l,
		shouldShow: u,
		getUserInfo: t
	}
};
var steamVerifyManager = function (e) {
	var e = e || "";
	var t = false;
	var a = format_html('    <div class="popup popup_guide" id="j_popup_guide" style="width:600px; height: 400px;">    <div class="popup-header"><h2><%= i18n("authentication") %></h2></div>    <p class="popup-tip c_Green"><%= i18n("for_the_protection_of_your") %></p>    <div class="popup-cont" style="min-height:410px;">        <div class="guide-desc">            <div class="guide-block">                <p><%= i18n("your_phone_account_through_a") %></p>                <p><a href="javascript:;" data-url="/account/steam/openid_login?back_url=/account/steam/openid_verifier" data-target="_blank" class="i_Btn go_to_steam"><%= i18n("verify") %></a></p>            </div>        </div>    </div></div>');
	var i = function () {
		$("body").append(a)
	};
	var n = function () {
		var e = getCookie("steam_verify_result");
		if (!e) {
			setTimeout(function () {
				n()
			}, 200);
			return
		}
		removeCookie("steam_verify_result");
		var t = JSON.parse(e);
		if (t.success) {
			Buff.toast(t.message, {
				type: "success"
			});
			setTimeout(function () {
				window.location.reload()
			}, 1e3)
		} else {
			if (t.message) {
				Buff.toast(t.message, {
					type: "error"
				})
			}
			setTimeout(function () {
				n()
			}, 200)
		}
	};
	var r = function (e) {
		Popup.hide();
		removeCookie("steam_verify_result");
		Popup.show("j_popup_guide");
		setTimeout(function () {
			n()
		}, 200)
	};
	var o = function (e) {
		return e.is_need_steam_verify && e.login_from == 1
	};
	return {
		init: i,
		show: r,
		shouldShow: o
	}
};
var authcodeVerifyManager = function (e) {
	var t = function () {
		Popup.hide();
		Popup.show(e)
	};
	var n = function () {
		Popup.hide();
		$("#" + e).remove()
	};
	var r = undefined;
	var a = 0;

	function o(e, t) {
		if (t || a > 0) {
			if (t) {
				a = t
			} else {
				a--
			}
			e.addClass("i_Btn_disabled");
			e.html(i18n("resend") + "<small>(" + a + ")</small>");
			r = setTimeout(function () {
				o(e)
			}, 1e3)
		} else if (a == 0) {
			e.removeClass("i_Btn_disabled");
			e.text(i18n("get_the_verification_code"));
			r = undefined
		}
	}
	var i = function (e, t, a, i, n) {
		if (!t) {
			t = {}
		}
		if (!i) {
			i = 60
		}
		a.text(i18n("has_been_sent")).addClass("i_Btn_disabled");
		sendRequest(e, {
			method: "POST",
			dataType: "json",
			data: t,
			showLoading: false,
			success: function (e) {
				if (e.code == "OK") {
					Buff.toast(i18n("sent_successfully_please_note_the"), {
						type: "success"
					});
					if (r === undefined) {
						o(a, i)
					}
					if (n) {
						n(e.data)
					}
				} else {
					Buff.toast(e.error || e.msg || i18n("error_code") + e.code, {
						type: "error"
					});
					a.removeClass("i_Btn_disabled").text(i18n("get_the_verification_code"))
				}
			}
		})
	};
	var s = function (e, t, a, i) {
		if (!t || t.length != 4 && t.length != 6) {
			Buff.toast(i18n("the_verification_code_is_incorrect"));
			return
		}
		if (!a) {
			a = {
				authcode: t
			}
		} else {
			a["authcode"] = t
		}
		sendRequest(e, {
			method: "POST",
			dataType: "json",
			data: a,
			success: function (e) {
				if (e.code == "OK") {
					n();
					if (i) {
						i(e.data)
					}
				} else {
					Buff.toast(e.error || e.msg || i18n("error_code") + e.code, {
						type: "error"
					})
				}
			}
		})
	};
	return {
		show: t,
		clear: n,
		sendAuthcode: i,
		verifyAuthcode: s
	}
};
var commonAuthcodeVerifyManager = function (e, t, a, i, n, r) {
	var o = format_html('        <div class="popup popup_guide" id="j_popup_common_authcode_verify" style="width:600px;">            <a class="popup-close" href="javascript:;">×</a>            <div class="popup-header"><h2><%= i18n("authentication") %></h2></div>            <p class="popup-tip c_Green"><%= i18n("urs_password_login_need_verify") %></p>            <div class="popup-cont">                <div class="guide-desc" style="display:;">                    <div class="guide-block">                        <p class="c_Gray f_12px"><%= i18n("please_enter") %><%= mobile %><%= i18n("receive_sms_verification_code") %></p>                        <p class="t_Left">                            <input type="text" name="authcode" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>">                            <a id="btn-common-send-authcode" href="#" class="i_Btn i_Btn_hollow" onclick="">                                <%= i18n("get_the_verification_code") %>                            </a>                        </p>                        \x3c!-- 发送后给i_Btn加i_Btn_disabled，如下示例： --\x3e                        \x3c!--                        <p class="t_Left"><input type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>"><a href="#" class="i_Btn i_Btn_hollow i_Btn_disabled"><%= i18n("has_been_sent") %>(29)</a></p>                        --\x3e                    </div>                    <p><a id="btn-common-verify-authcode" href="javascript:;" class="i_Btn i_Btn_long"><%= i18n("complete") %></a></p>                </div>            </div>        </div>    ', {
		mobile: e
	});
	var s = "j_popup_common_authcode_verify";
	var c = authcodeVerifyManager(s);
	var _ = function () {
		$("body").append(o);
		$("#" + s + " .popup-close").click(function () {
			c.clear()
		});
		var e = $("#btn-common-send-authcode");
		e.click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			c.sendAuthcode(t, a, e)
		});
		$("#btn-common-verify-authcode").click(function () {
			var e = $("#" + s + " input[name=authcode]").val();
			r = r || function () {
				Buff.toast(i18n("the_validation_is_successful"), {
					type: "success"
				});
				window.location.reload()
			};
			c.verifyAuthcode(i, e, n, r)
		});
		c.show()
	};
	return {
		init: _
	}
};
var loggedInFromSteamVerifyManager = function (e) {
	var t = format_html('        <div class="popup popup_guide" id="j_popup_logged_in_from_steam_verify" style="width:600px;">            <a class="popup-close" href="javascript:;" onclick="Popup.hide()">×</a>            <div class="popup-header"><h2><%= i18n("authentication") %></h2></div>            <p class="popup-tip c_Green"><%= i18n("detected_you_are_using_steam") %></p>            <div class="popup-cont">                <div class="guide-desc" style="display:;">                    <div class="guide-block">                        <p class="c_Gray f_12px"><%= i18n("please_enter") %><%= mobile %><%= i18n("receive_sms_verification_code") %></p>                        <p class="t_Left">                            <input id="input-unfrozen-authcode" type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>">                            <a id="btn-unfrozen-send" href="#" class="i_Btn i_Btn_hollow" onclick="">                                <%= i18n("get_the_verification_code") %>                            </a>                        </p>                        \x3c!-- 发送后给i_Btn加i_Btn_disabled，如下示例： --\x3e                        \x3c!--                        <p class="t_Left"><input type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>"><a href="#" class="i_Btn i_Btn_hollow i_Btn_disabled"><%= i18n("has_been_sent") %>(29)</a></p>                        --\x3e                    </div>                    <p><a id="btn-unfrozen-verify" href="javascript:;" class="i_Btn i_Btn_long"><%= i18n("complete") %></a></p>                    <ul class="c_Gray f_12px t_Left f_line24" >                        <li><%= i18n("the_phone_number_has_been") %><a href="/user-center/feedback/" target="_blank" class="c_Blue"><%= i18n("artificial_assist") %></a></li>                    </ul>                </div>            </div>        </div>    ', {
		mobile: e
	});
	var a = "j_popup_logged_in_from_steam_verify";
	var i = authcodeVerifyManager(a);
	var n = function () {
		$("body").append(t);
		$("#" + a + " .popup-close").click(function () {
			i.clear()
		});
		var e = $("#btn-unfrozen-send");
		e.click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			i.sendAuthcode("/account/api/logged_in_from_steam/send_authcode", null, e)
		});
		$("#btn-unfrozen-verify").click(function () {
			var e = $("#input-unfrozen-authcode").val();
			i.verifyAuthcode("/account/api/logged_in_from_steam/verify_authcode", e, null, function () {
				Buff.toast(i18n("the_validation_is_successful"), {
					type: "success"
				});
				window.location.reload()
			})
		});
		i.show()
	};
	return {
		init: n
	}
};
var loggedInFromSmsVerifyManager = function () {
	var a = format_html('        <div class="popup popup_common" id="j_popup_logged_in_from_sms_verify">            <a class="popup-close" href="javascript:;" onclick="Popup.hide()">×</a>            <div class="popup-cont">                <h2 class="popup-title">{{ i18n("authentication") }}</h2>                <div class="popup-desc">         \t    \t\t<p><%= i18n("detected_you_are_using_sms") %></p>         \t    \t</div>                <ul class="c_Gray f_12px t_Left f_line24" >                        <li><%= i18n("the_steam_account_has_been") %><a href="/user-center/feedback/" target="_blank" class="c_Blue"><%= i18n("artificial_assist") %></a></li>                </ul>            </div>            <div class="popup-btns">\t\t        <a href="javascript:Popup.hide();" class="i_Btn i_Btn_sub">{{ i18n("cancel") }}</a>\t\t        <a href="javascript:;" data-url="/account/steam/openid_login?back_url=/account/steam/verify/return" data-target="_blank" class="i_Btn go_to_steam"><%= i18n("login_steam") %></a>\t        </div>        </div>    ');
	var i = function (e) {
		var t = getCookie("steam_verify_result");
		console.log("getCookie:", t);
		if (!t) {
			setTimeout(function () {
				i(e)
			}, 200);
			return
		}
		removeCookie("steam_verify_result");
		var a = JSON.parse(t);
		console.log("getCookie parse result:", a);
		if (a.success) {
			$("#j_popup_logged_in_from_sms_verify").hide()
		} else {
			Buff.toast(a.message, {
				type: "error"
			})
		}
		if (e) {
			setTimeout(function () {
				window.location.reload()
			}, 1e3)
		}
	};
	var n = function (e, t) {
		var a = t === undefined ? true : t;
		if (!e) {
			e = function () {
				Popup.hide()
			}
		}
		e();
		removeCookie("steam_verify_result");
		Popup.show("j_popup_logged_in_from_sms_verify");
		setTimeout(function () {
			i(a)
		}, 200)
	};
	var e = function (e, t) {
		$("body").append(a);
		n(e, t)
	};
	return {
		init: e,
		show: n
	}
};
var ursLoginMobileSecondaryVerifyManager = function (e, t, a) {
	var i = format_html('        <div class="popup popup_guide" id="j_popup_login_mobile_verify" style="width:600px;">            <a class="popup-close" href="javascript:;">×</a>            <div class="popup-header"><h2><%= i18n("authentication") %></h2></div>            <p class="popup-tip c_Green"><%= i18n("urs_password_login_need_verify") %></p>            <div class="popup-cont">                <div class="guide-desc" style="display:;">                    <div class="guide-block">                        <p class="c_Gray f_12px"><%= i18n("please_enter") %><%= mobile %><%= i18n("receive_sms_verification_code") %></p>                        <p class="t_Left">                            <input id="input-login-authcode" type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>">                            <a id="btn-login-send" href="#" class="i_Btn i_Btn_hollow" onclick="">                                <%= i18n("get_the_verification_code") %>                            </a>                        </p>                        \x3c!-- 发送后给i_Btn加i_Btn_disabled，如下示例： --\x3e                        \x3c!--                        <p class="t_Left"><input type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>"><a href="#" class="i_Btn i_Btn_hollow i_Btn_disabled"><%= i18n("has_been_sent") %>(29)</a></p>                        --\x3e                    </div>                    <p><a id="btn-login-verify" href="javascript:;" class="i_Btn i_Btn_long"><%= i18n("complete") %></a></p>                </div>            </div>        </div>    ', {
		mobile: e
	});
	var n = "j_popup_login_mobile_verify";
	var r = authcodeVerifyManager(n);
	var o = function () {
		$("body").append(i);
		$("#" + n + " .popup-close").click(function () {
			r.clear()
		});
		var e = $("#btn-login-send");
		e.click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			r.sendAuthcode("/account/api/urs_password_login/send_authcode", {
				verify_key: t
			}, e)
		});
		$("#btn-login-verify").click(function () {
			var e = $("#input-login-authcode").val();
			r.verifyAuthcode("/account/api/urs_password_login/verify_authcode", e, {
				verify_key: t
			}, function () {
				if (a) {
					a(null, t)
				}
			})
		});
		r.show()
	};
	return {
		init: o
	}
};
var unfrozenVerifyManager = function (e) {
	var t = format_html('        <div class="popup popup_guide" id="j_popup_unfrozen_mobile_verify" style="width:600px;">            <a class="popup-close" href="javascript:;" onclick="Popup.hide()">×</a>            <div class="popup-header"><h2><%= i18n("authentication") %></h2></div>            <p class="popup-tip c_Green"><%= i18n("your_mobile_phone_account_occurs") %></p>            <div class="popup-cont">                <div class="guide-desc" style="display:;">                    <div class="guide-block">                        <p class="c_Gray f_12px"><%= i18n("please_enter") %><%= mobile %><%= i18n("receive_sms_verification_code") %></p>                        <p class="t_Left">                            <input id="input-unfrozen-authcode" type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>">                            <a id="btn-unfrozen-send" href="#" class="i_Btn i_Btn_hollow" onclick="">                                <%= i18n("get_the_verification_code") %>                            </a>                        </p>                        \x3c!-- 发送后给i_Btn加i_Btn_disabled，如下示例： --\x3e                        \x3c!--                        <p class="t_Left"><input type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>"><a href="#" class="i_Btn i_Btn_hollow i_Btn_disabled"><%= i18n("has_been_sent") %>(29)</a></p>                        --\x3e                    </div>                    <p><a id="btn-unfrozen-verify" href="javascript:;" class="i_Btn i_Btn_long"><%= i18n("complete") %></a></p>                    <ul class="c_Gray f_12px t_Left f_line24" >                        <li><%= i18n("not_my_phone_number_please") %><a href="/user-center/feedback/" target="_blank" class="c_Blue"><%= i18n("artificial_assist") %></a></li>                    </ul>                </div>            </div>        </div>    ', {
		mobile: e
	});
	var a = "j_popup_unfrozen_mobile_verify";
	var i = authcodeVerifyManager(a);
	var n = function () {
		$("body").append(t);
		$("#" + a + " .popup-close").click(function () {
			i.clear()
		});
		var e = $("#btn-unfrozen-send");
		e.click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			i.sendAuthcode("/account/api/unfrozen/send_authcode", null, e)
		});
		$("#btn-unfrozen-verify").click(function () {
			var e = $("#input-unfrozen-authcode").val();
			i.verifyAuthcode("/account/api/unfrozen/verify_authcode", e, null, function () {
				Buff.toast(i18n("the_validation_is_successful"), {
					type: "success"
				});
				window.location.reload()
			})
		});
		i.show()
	};
	return {
		init: n
	}
};
var ejzbAuthVerifyManager = function () {
	var o = function (e, t, a, i) {
		var n = format_html('        <div class="popup popup_guide" id="j_popup_ejzb_auth_verify" style="width:600px;">            <a class="popup-close" href="javascript:;">×</a>            <div class="popup-header"><h2><%= title %></h2></div>            <div class="popup-cont">                <div class="guide-desc" style="display:;">                    <div class="guide-block">                        <p class="c_Gray f_12px"><%= i18n("please_enter") %><%= mobile %><%= i18n("receive_sms_verification_code") %></p>                        <p class="t_Left">                            <input type="text" name="authcode" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>">                            <a id="btn-ejzb-auth-send" href="javascript:;" class="i_Btn i_Btn_hollow" onclick="">                                <%= i18n("get_the_verification_code") %>                            </a>                        </p>                        \x3c!-- 发送后给i_Btn加i_Btn_disabled，如下示例： --\x3e                        \x3c!--                        <p class="t_Left"><input type="text" class="i_Text" placeholder="<%= i18n("enter_the_verification_code") %>"><a href="#" class="i_Btn i_Btn_hollow i_Btn_disabled"><%= i18n("has_been_sent") %>(29)</a></p>                        --\x3e                    </div>                    <p><a id="btn-ejzb-auth-verify" href="javascript:;" class="i_Btn i_Btn_long"><%= i18n("complete") %></a></p>                </div>            </div>        </div>        ', {
			mobile: e,
			title: t || i18n("balance_authorization")
		});
		var r = "j_popup_ejzb_auth_verify";
		var o = authcodeVerifyManager(r);
		$("body").append(n);
		$("#" + r + " .popup-close").click(function () {
			o.clear()
		});
		var s = {};
		var c = $("#btn-ejzb-auth-send");
		c.click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			var e = "/api/asset/ejzb_auth/request/";
			var t = function (e) {
				s["auth_id"] = e["auth_id"]
			};
			o.sendAuthcode(e, {
				amount: a
			}, c, 120, t)
		});
		$("#btn-ejzb-auth-verify").click(function () {
			var e = $("#" + r + " input[name=authcode]").val();
			var t = "/api/asset/ejzb_auth/verify/";
			o.verifyAuthcode(t, e, s, function () {
				Buff.toast(i18n("auth_success"));
				i()
			})
		});
		o.show()
	};
	var e = function (e, i, n, t, a) {
		var r = false;
		if (!$.isEmptyObject(e)) {
			if (e.force) {
				r = true
			} else if (e.state == "VALID") {
				if (t != null && e.auth_type == 2 && parseFloat(e.left_amount) < parseFloat(t)) {
					r = true
				}
			} else {
				r = true
			}
		}
		if (r) {
			if (!a) {
				a = function () {
					Popup.hide();
					CommonApi.User.info(["ejzb_auth"], function (e) {
						for (var t in n.pay_methods) {
							var a = n.pay_methods[t];
							if (a.hasOwnProperty("ejzb_auth")) {
								a.ejzb_auth = e.ejzb_auth
							}
						}
						i.show(n)
					})
				};
				e.title = i18n("ejzb_auth_title")
			}
			o(e.mobile, e.title, t, a);
			return true
		}
		return false
	};
	return {
		process: e
	}
};
var bookmark = function () {
	var e, o = {},
		t = function () {
			if (e) return;
			$(document).on("click", ".add-bookmark", function (e) {
				e.stopPropagation();
				var t = this;
				var a = $(t).data("target-type");
				var i = $(t).data("target-id");
				sendRequest("/account/api/add_bookmark", {
					method: "PUT",
					data: {
						target_type: a,
						target_id: i
					},
					showLoading: false,
					success: function (e) {
						if (e.code !== "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						o[a + "_" + i] = "delete";
						$(".add-bookmark[data-target-type=" + a + "][data-target-id=" + i + "]").hide();
						$(".delete-bookmark[data-target-type=" + a + "][data-target-id=" + i + "]").show()
					}
				})
			});
			$(document).on("click", ".delete-bookmark", function (e) {
				e.stopPropagation();
				var t = this;
				var a = $(t).data("target-type");
				var i = $(t).data("target-id");
				var n = $(t).data("confirm");
				var r = function () {
					sendRequest("/account/api/delete_bookmark", {
						method: "DELETE",
						data: {
							target_type: a,
							target_id: i
						},
						showLoading: false,
						success: function (e) {
							if (e.code !== "OK") {
								Buff.toast(e.error, {
									type: "error"
								});
								return
							}
							o[a + "_" + i] = "add";
							$(".add-bookmark[data-target-type=" + a + "][data-target-id=" + i + "]").show();
							$(".delete-bookmark[data-target-type=" + a + "][data-target-id=" + i + "]").hide();
							if (n) {
								window.location.reload()
							}
						}
					})
				};
				if (n) {
					Buff.alert({
						title: i18n("out_collection"),
						message: i18n("determined_to_be_removed_from"),
						success: function () {
							r()
						}
					})
				} else {
					r()
				}
			})
		};
	updateView = function () {
		Object.keys(o).map(function (e, t) {
			var a = o[e],
				i = e.split("_"),
				n = i[0],
				r = i[1];
			if (a == "add") {
				$(".add-bookmark[data-target-type=" + n + "][data-target-id=" + r + "]").show();
				$(".delete-bookmark[data-target-type=" + n + "][data-target-id=" + r + "]").hide()
			} else if (a == "delete") {
				$(".add-bookmark[data-target-type=" + n + "][data-target-id=" + r + "]").hide();
				$(".delete-bookmark[data-target-type=" + n + "][data-target-id=" + r + "]").show()
			}
		})
	};
	setCacheData = function (e, t, a) {
		o[e + "_" + t] = a ? "delete" : "add"
	};
	return function () {
		if (!e) {
			t();
			e = {
				init: t,
				updateView: updateView,
				setCacheData: setCacheData
			}
		}
		return e
	}
}();
! function (e, t) {
	"use strict";
	"undefined" != typeof window && "function" == typeof define && define.amd ? define(t) : "undefined" != typeof module && module.exports ? module.exports = t() : e.exports ? e.exports = t() : e.Fingerprint2 = t()
}(this, function () {
	"use strict";
	void 0 === Array.isArray && (Array.isArray = function (e) {
		return "[object Array]" === Object.prototype.toString.call(e)
	});

	function u(e, t) {
		e = [e[0] >>> 16, 65535 & e[0], e[1] >>> 16, 65535 & e[1]], t = [t[0] >>> 16, 65535 & t[0], t[1] >>> 16, 65535 & t[1]];
		var a = [0, 0, 0, 0];
		return a[3] += e[3] + t[3], a[2] += a[3] >>> 16, a[3] &= 65535, a[2] += e[2] + t[2], a[1] += a[2] >>> 16, a[2] &= 65535, a[1] += e[1] + t[1], a[0] += a[1] >>> 16, a[1] &= 65535, a[0] += e[0] + t[0], a[0] &= 65535, [a[0] << 16 | a[1], a[2] << 16 | a[3]]
	}

	function d(e, t) {
		e = [e[0] >>> 16, 65535 & e[0], e[1] >>> 16, 65535 & e[1]], t = [t[0] >>> 16, 65535 & t[0], t[1] >>> 16, 65535 & t[1]];
		var a = [0, 0, 0, 0];
		return a[3] += e[3] * t[3], a[2] += a[3] >>> 16, a[3] &= 65535, a[2] += e[2] * t[3], a[1] += a[2] >>> 16, a[2] &= 65535, a[2] += e[3] * t[2], a[1] += a[2] >>> 16, a[2] &= 65535, a[1] += e[1] * t[3], a[0] += a[1] >>> 16, a[1] &= 65535, a[1] += e[2] * t[2], a[0] += a[1] >>> 16, a[1] &= 65535, a[1] += e[3] * t[1], a[0] += a[1] >>> 16, a[1] &= 65535, a[0] += e[0] * t[3] + e[1] * t[2] + e[2] * t[1] + e[3] * t[0], a[0] &= 65535, [a[0] << 16 | a[1], a[2] << 16 | a[3]]
	}

	function p(e, t) {
		return 32 === (t %= 64) ? [e[1], e[0]] : t < 32 ? [e[0] << t | e[1] >>> 32 - t, e[1] << t | e[0] >>> 32 - t] : (t -= 32, [e[1] << t | e[0] >>> 32 - t, e[0] << t | e[1] >>> 32 - t])
	}

	function f(e, t) {
		return 0 === (t %= 64) ? e : t < 32 ? [e[0] << t | e[1] >>> 32 - t, e[1] << t] : [e[1] << t - 32, 0]
	}

	function m(e, t) {
		return [e[0] ^ t[0], e[1] ^ t[1]]
	}

	function h(e) {
		return e = m(e, [0, e[0] >>> 1]), e = d(e, [4283543511, 3981806797]), e = m(e, [0, e[0] >>> 1]), e = d(e, [3301882366, 444984403]), e = m(e, [0, e[0] >>> 1])
	}

	function s(e, t) {
		t = t || 0;
		for (var a = (e = e || "").length % 16, i = e.length - a, n = [0, t], r = [0, t], o = [0, 0], s = [0, 0], c = [2277735313, 289559509], _ = [1291169091, 658871167], l = 0; l < i; l += 16) o = [255 & e.charCodeAt(l + 4) | (255 & e.charCodeAt(l + 5)) << 8 | (255 & e.charCodeAt(l + 6)) << 16 | (255 & e.charCodeAt(l + 7)) << 24, 255 & e.charCodeAt(l) | (255 & e.charCodeAt(l + 1)) << 8 | (255 & e.charCodeAt(l + 2)) << 16 | (255 & e.charCodeAt(l + 3)) << 24], s = [255 & e.charCodeAt(l + 12) | (255 & e.charCodeAt(l + 13)) << 8 | (255 & e.charCodeAt(l + 14)) << 16 | (255 & e.charCodeAt(l + 15)) << 24, 255 & e.charCodeAt(l + 8) | (255 & e.charCodeAt(l + 9)) << 8 | (255 & e.charCodeAt(l + 10)) << 16 | (255 & e.charCodeAt(l + 11)) << 24], o = d(o, c), o = p(o, 31), o = d(o, _), n = m(n, o), n = p(n, 27), n = u(n, r), n = u(d(n, [0, 5]), [0, 1390208809]), s = d(s, _), s = p(s, 33), s = d(s, c), r = m(r, s), r = p(r, 31), r = u(r, n), r = u(d(r, [0, 5]), [0, 944331445]);
		switch (o = [0, 0], s = [0, 0], a) {
			case 15:
				s = m(s, f([0, e.charCodeAt(l + 14)], 48));
			case 14:
				s = m(s, f([0, e.charCodeAt(l + 13)], 40));
			case 13:
				s = m(s, f([0, e.charCodeAt(l + 12)], 32));
			case 12:
				s = m(s, f([0, e.charCodeAt(l + 11)], 24));
			case 11:
				s = m(s, f([0, e.charCodeAt(l + 10)], 16));
			case 10:
				s = m(s, f([0, e.charCodeAt(l + 9)], 8));
			case 9:
				s = m(s, [0, e.charCodeAt(l + 8)]), s = d(s, _), s = p(s, 33), s = d(s, c), r = m(r, s);
			case 8:
				o = m(o, f([0, e.charCodeAt(l + 7)], 56));
			case 7:
				o = m(o, f([0, e.charCodeAt(l + 6)], 48));
			case 6:
				o = m(o, f([0, e.charCodeAt(l + 5)], 40));
			case 5:
				o = m(o, f([0, e.charCodeAt(l + 4)], 32));
			case 4:
				o = m(o, f([0, e.charCodeAt(l + 3)], 24));
			case 3:
				o = m(o, f([0, e.charCodeAt(l + 2)], 16));
			case 2:
				o = m(o, f([0, e.charCodeAt(l + 1)], 8));
			case 1:
				o = m(o, [0, e.charCodeAt(l)]), o = d(o, c), o = p(o, 31), o = d(o, _), n = m(n, o)
		}
		return n = m(n, [0, e.length]), r = m(r, [0, e.length]), n = u(n, r), r = u(r, n), n = h(n), r = h(r), n = u(n, r), r = u(r, n), ("00000000" + (n[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (n[1] >>> 0).toString(16)).slice(-8) + ("00000000" + (r[0] >>> 0).toString(16)).slice(-8) + ("00000000" + (r[1] >>> 0).toString(16)).slice(-8)
	}

	function _(e, t) {
		if (Array.prototype.forEach && e.forEach === Array.prototype.forEach) e.forEach(t);
		else if (e.length === +e.length)
			for (var a = 0, i = e.length; a < i; a++) t(e[a], a, e);
		else
			for (var n in e) e.hasOwnProperty(n) && t(e[n], n, e)
	}

	function c(e, i) {
		var n = [];
		return null == e ? n : Array.prototype.map && e.map === Array.prototype.map ? e.map(i) : (_(e, function (e, t, a) {
			n.push(i(e, t, a))
		}), n)
	}

	function i(e) {
		throw new Error("'new Fingerprint()' is deprecated, see https://github.com/fingerprintjs/fingerprintjs#upgrade-guide-from-182-to-200")
	}
	var e = {
		preprocessor: null,
		audio: {
			timeout: 1e3,
			excludeIOS11: !0
		},
		fonts: {
			swfContainerId: "fingerprintjs2",
			swfPath: "flash/compiled/FontList.swf",
			userDefinedFonts: [],
			extendedJsFonts: !1
		},
		screen: {
			detectScreenOrientation: !0
		},
		plugins: {
			sortPluginsFor: [/palemoon/i],
			excludeIE: !1
		},
		extraComponents: [],
		excludes: {
			enumerateDevices: !0,
			pixelRatio: !0,
			doNotTrack: !0,
			fontsFlash: !0,
			adBlock: !0
		},
		NOT_AVAILABLE: "not available",
		ERROR: "error",
		EXCLUDED: "excluded"
	},
		a = function () {
			return navigator.mediaDevices && navigator.mediaDevices.enumerateDevices
		},
		n = function (e) {
			var t = [window.screen.width, window.screen.height];
			return e.screen.detectScreenOrientation && t.sort().reverse(), t
		},
		r = function (e) {
			if (window.screen.availWidth && window.screen.availHeight) {
				var t = [window.screen.availHeight, window.screen.availWidth];
				return e.screen.detectScreenOrientation && t.sort().reverse(), t
			}
			return e.NOT_AVAILABLE
		},
		o = function (e) {
			if (null == navigator.plugins) return e.NOT_AVAILABLE;
			for (var t = [], a = 0, i = navigator.plugins.length; a < i; a++) navigator.plugins[a] && t.push(navigator.plugins[a]);
			return g(e) && (t = t.sort(function (e, t) {
				return e.name > t.name ? 1 : e.name < t.name ? -1 : 0
			})), c(t, function (e) {
				var t = c(e, function (e) {
					return [e.type, e.suffixes]
				});
				return [e.name, e.description, t]
			})
		},
		l = function (t) {
			var e = [];
			if (Object.getOwnPropertyDescriptor && Object.getOwnPropertyDescriptor(window, "ActiveXObject") || "ActiveXObject" in window) {
				e = c(["AcroPDF.PDF", "Adodb.Stream", "AgControl.AgControl", "DevalVRXCtrl.DevalVRXCtrl.1", "MacromediaFlashPaper.MacromediaFlashPaper", "Msxml2.DOMDocument", "Msxml2.XMLHTTP", "PDF.PdfCtrl", "QuickTime.QuickTime", "QuickTimeCheckObject.QuickTimeCheck.1", "RealPlayer", "RealPlayer.RealPlayer(tm) ActiveX Control (32-bit)", "RealVideo.RealVideo(tm) ActiveX Control (32-bit)", "Scripting.Dictionary", "SWCtl.SWCtl", "Shell.UIHelper", "ShockwaveFlash.ShockwaveFlash", "Skype.Detection", "TDCCtl.TDCCtl", "WMPlayer.OCX", "rmocx.RealPlayer G2 Control", "rmocx.RealPlayer G2 Control.1"], function (e) {
					try {
						return new window.ActiveXObject(e), e
					} catch (e) {
						return t.ERROR
					}
				})
			} else e.push(t.NOT_AVAILABLE);
			return navigator.plugins && (e = e.concat(o(t))), e
		},
		g = function (e) {
			for (var t = !1, a = 0, i = e.plugins.sortPluginsFor.length; a < i; a++) {
				var n = e.plugins.sortPluginsFor[a];
				if (navigator.userAgent.match(n)) {
					t = !0;
					break
				}
			}
			return t
		},
		v = function (t) {
			try {
				return !!window.sessionStorage
			} catch (e) {
				return t.ERROR
			}
		},
		y = function (t) {
			try {
				return !!window.localStorage
			} catch (e) {
				return t.ERROR
			}
		},
		b = function (t) {
			if (F()) return t.EXCLUDED;
			try {
				return !!window.indexedDB
			} catch (e) {
				return t.ERROR
			}
		},
		w = function (e) {
			return navigator.hardwareConcurrency ? navigator.hardwareConcurrency : e.NOT_AVAILABLE
		},
		$ = function (e) {
			return navigator.cpuClass || e.NOT_AVAILABLE
		},
		k = function (e) {
			return navigator.platform ? navigator.platform : e.NOT_AVAILABLE
		},
		x = function (e) {
			return navigator.doNotTrack ? navigator.doNotTrack : navigator.msDoNotTrack ? navigator.msDoNotTrack : window.doNotTrack ? window.doNotTrack : e.NOT_AVAILABLE
		},
		t = function () {
			var e, t = 0;
			void 0 !== navigator.maxTouchPoints ? t = navigator.maxTouchPoints : void 0 !== navigator.msMaxTouchPoints && (t = navigator.msMaxTouchPoints);
			try {
				document.createEvent("TouchEvent"), e = !0
			} catch (t) {
				e = !1
			}
			return [t, e, "ontouchstart" in window]
		},
		C = function (e) {
			var t = [],
				a = document.createElement("canvas");
			a.width = 2e3, a.height = 200, a.style.display = "inline";
			var i = a.getContext("2d");
			return i.rect(0, 0, 10, 10), i.rect(2, 2, 6, 6), t.push("canvas winding:" + (!1 === i.isPointInPath(5, 5, "evenodd") ? "yes" : "no")), i.textBaseline = "alphabetic", i.fillStyle = "#f60", i.fillRect(125, 1, 62, 20), i.fillStyle = "#069", e.dontUseFakeFontInCanvas ? i.font = "11pt Arial" : i.font = "11pt no-real-font-123", i.fillText("Cwm fjordbank glyphs vext quiz, 😃", 2, 15), i.fillStyle = "rgba(102, 204, 0, 0.2)", i.font = "18pt Arial", i.fillText("Cwm fjordbank glyphs vext quiz, 😃", 4, 45), i.globalCompositeOperation = "multiply", i.fillStyle = "rgb(255,0,255)", i.beginPath(), i.arc(50, 50, 50, 0, 2 * Math.PI, !0), i.closePath(), i.fill(), i.fillStyle = "rgb(0,255,255)", i.beginPath(), i.arc(100, 50, 50, 0, 2 * Math.PI, !0), i.closePath(), i.fill(), i.fillStyle = "rgb(255,255,0)", i.beginPath(), i.arc(75, 100, 50, 0, 2 * Math.PI, !0), i.closePath(), i.fill(), i.fillStyle = "rgb(255,0,255)", i.arc(75, 75, 75, 0, 2 * Math.PI, !0), i.arc(75, 75, 25, 0, 2 * Math.PI, !0), i.fill("evenodd"), a.toDataURL && t.push("canvas fp:" + a.toDataURL()), t
		},
		T = function () {
			function e(e) {
				return o.clearColor(0, 0, 0, 1), o.enable(o.DEPTH_TEST), o.depthFunc(o.LEQUAL), o.clear(o.COLOR_BUFFER_BIT | o.DEPTH_BUFFER_BIT), "[" + e[0] + ", " + e[1] + "]"
			}
			var o;
			if (!(o = R())) return null;
			var s = [],
				t = o.createBuffer();
			o.bindBuffer(o.ARRAY_BUFFER, t);
			var a = new Float32Array([-.2, -.9, 0, .4, -.26, 0, 0, .732134444, 0]);
			o.bufferData(o.ARRAY_BUFFER, a, o.STATIC_DRAW), t.itemSize = 3, t.numItems = 3;
			var i = o.createProgram(),
				n = o.createShader(o.VERTEX_SHADER);
			o.shaderSource(n, "attribute vec2 attrVertex;varying vec2 varyinTexCoordinate;uniform vec2 uniformOffset;void main(){varyinTexCoordinate=attrVertex+uniformOffset;gl_Position=vec4(attrVertex,0,1);}"), o.compileShader(n);
			var r = o.createShader(o.FRAGMENT_SHADER);
			o.shaderSource(r, "precision mediump float;varying vec2 varyinTexCoordinate;void main() {gl_FragColor=vec4(varyinTexCoordinate,0,1);}"), o.compileShader(r), o.attachShader(i, n), o.attachShader(i, r), o.linkProgram(i), o.useProgram(i), i.vertexPosAttrib = o.getAttribLocation(i, "attrVertex"), i.offsetUniform = o.getUniformLocation(i, "uniformOffset"), o.enableVertexAttribArray(i.vertexPosArray), o.vertexAttribPointer(i.vertexPosAttrib, t.itemSize, o.FLOAT, !1, 0, 0), o.uniform2f(i.offsetUniform, 1, 1), o.drawArrays(o.TRIANGLE_STRIP, 0, t.numItems);
			try {
				s.push(o.canvas.toDataURL())
			} catch (e) { }
			s.push("extensions:" + (o.getSupportedExtensions() || []).join(";")), s.push("webgl aliased line width range:" + e(o.getParameter(o.ALIASED_LINE_WIDTH_RANGE))), s.push("webgl aliased point size range:" + e(o.getParameter(o.ALIASED_POINT_SIZE_RANGE))), s.push("webgl alpha bits:" + o.getParameter(o.ALPHA_BITS)), s.push("webgl antialiasing:" + (o.getContextAttributes().antialias ? "yes" : "no")), s.push("webgl blue bits:" + o.getParameter(o.BLUE_BITS)), s.push("webgl depth bits:" + o.getParameter(o.DEPTH_BITS)), s.push("webgl green bits:" + o.getParameter(o.GREEN_BITS)), s.push("webgl max anisotropy:" + function (e) {
				var t = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic");
				if (t) {
					var a = e.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
					return 0 === a && (a = 2), a
				}
				return null
			}(o)), s.push("webgl max combined texture image units:" + o.getParameter(o.MAX_COMBINED_TEXTURE_IMAGE_UNITS)), s.push("webgl max cube map texture size:" + o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE)), s.push("webgl max fragment uniform vectors:" + o.getParameter(o.MAX_FRAGMENT_UNIFORM_VECTORS)), s.push("webgl max render buffer size:" + o.getParameter(o.MAX_RENDERBUFFER_SIZE)), s.push("webgl max texture image units:" + o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS)), s.push("webgl max texture size:" + o.getParameter(o.MAX_TEXTURE_SIZE)), s.push("webgl max varying vectors:" + o.getParameter(o.MAX_VARYING_VECTORS)), s.push("webgl max vertex attribs:" + o.getParameter(o.MAX_VERTEX_ATTRIBS)), s.push("webgl max vertex texture image units:" + o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS)), s.push("webgl max vertex uniform vectors:" + o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS)), s.push("webgl max viewport dims:" + e(o.getParameter(o.MAX_VIEWPORT_DIMS))), s.push("webgl red bits:" + o.getParameter(o.RED_BITS)), s.push("webgl renderer:" + o.getParameter(o.RENDERER)), s.push("webgl shading language version:" + o.getParameter(o.SHADING_LANGUAGE_VERSION)), s.push("webgl stencil bits:" + o.getParameter(o.STENCIL_BITS)), s.push("webgl vendor:" + o.getParameter(o.VENDOR)), s.push("webgl version:" + o.getParameter(o.VERSION));
			try {
				var c = o.getExtension("WEBGL_debug_renderer_info");
				c && (s.push("webgl unmasked vendor:" + o.getParameter(c.UNMASKED_VENDOR_WEBGL)), s.push("webgl unmasked renderer:" + o.getParameter(c.UNMASKED_RENDERER_WEBGL)))
			} catch (e) { }
			return o.getShaderPrecisionFormat && _(["FLOAT", "INT"], function (r) {
				_(["VERTEX", "FRAGMENT"], function (n) {
					_(["HIGH", "MEDIUM", "LOW"], function (i) {
						_(["precision", "rangeMin", "rangeMax"], function (e) {
							var t = o.getShaderPrecisionFormat(o[n + "_SHADER"], o[i + "_" + r])[e];
							"precision" !== e && (e = "precision " + e);
							var a = ["webgl ", n.toLowerCase(), " shader ", i.toLowerCase(), " ", r.toLowerCase(), " ", e, ":", t].join("");
							s.push(a)
						})
					})
				})
			}), A(o), s
		},
		P = function () {
			try {
				var e = R(),
					t = e.getExtension("WEBGL_debug_renderer_info"),
					a = e.getParameter(t.UNMASKED_VENDOR_WEBGL) + "~" + e.getParameter(t.UNMASKED_RENDERER_WEBGL);
				return A(e), a
			} catch (e) {
				return null
			}
		},
		B = function () {
			var e = document.createElement("div");
			e.innerHTML = "&nbsp;";
			var t = !(e.className = "adsbox");
			try {
				document.body.appendChild(e), t = 0 === document.getElementsByClassName("adsbox")[0].offsetHeight, document.body.removeChild(e)
			} catch (e) {
				t = !1
			}
			return t
		},
		j = function () {
			if (void 0 !== navigator.languages) try {
				if (navigator.languages[0].substr(0, 2) !== navigator.language.substr(0, 2)) return !0
			} catch (e) {
				return !0
			}
			return !1
		},
		S = function () {
			return window.screen.width < window.screen.availWidth || window.screen.height < window.screen.availHeight
		},
		O = function () {
			var e, t = navigator.userAgent.toLowerCase(),
				a = navigator.oscpu,
				i = navigator.platform.toLowerCase();
			if (e = 0 <= t.indexOf("windows phone") ? "Windows Phone" : 0 <= t.indexOf("windows") || 0 <= t.indexOf("win16") || 0 <= t.indexOf("win32") || 0 <= t.indexOf("win64") || 0 <= t.indexOf("win95") || 0 <= t.indexOf("win98") || 0 <= t.indexOf("winnt") || 0 <= t.indexOf("wow64") ? "Windows" : 0 <= t.indexOf("android") ? "Android" : 0 <= t.indexOf("linux") || 0 <= t.indexOf("cros") || 0 <= t.indexOf("x11") ? "Linux" : 0 <= t.indexOf("iphone") || 0 <= t.indexOf("ipad") || 0 <= t.indexOf("ipod") || 0 <= t.indexOf("crios") || 0 <= t.indexOf("fxios") ? "iOS" : 0 <= t.indexOf("macintosh") || 0 <= t.indexOf("mac_powerpc)") ? "Mac" : "Other", ("ontouchstart" in window || 0 < navigator.maxTouchPoints || 0 < navigator.msMaxTouchPoints) && "Windows" !== e && "Windows Phone" !== e && "Android" !== e && "iOS" !== e && "Other" !== e && -1 === t.indexOf("cros")) return !0;
			if (void 0 !== a) {
				if (0 <= (a = a.toLowerCase()).indexOf("win") && "Windows" !== e && "Windows Phone" !== e) return !0;
				if (0 <= a.indexOf("linux") && "Linux" !== e && "Android" !== e) return !0;
				if (0 <= a.indexOf("mac") && "Mac" !== e && "iOS" !== e) return !0;
				if ((-1 === a.indexOf("win") && -1 === a.indexOf("linux") && -1 === a.indexOf("mac")) != ("Other" === e)) return !0
			}
			return 0 <= i.indexOf("win") && "Windows" !== e && "Windows Phone" !== e || ((0 <= i.indexOf("linux") || 0 <= i.indexOf("android") || 0 <= i.indexOf("pike")) && "Linux" !== e && "Android" !== e || ((0 <= i.indexOf("mac") || 0 <= i.indexOf("ipad") || 0 <= i.indexOf("ipod") || 0 <= i.indexOf("iphone")) && "Mac" !== e && "iOS" !== e || !(0 <= i.indexOf("arm") && "Windows Phone" === e) && (!(0 <= i.indexOf("pike") && 0 <= t.indexOf("opera mini")) && ((i.indexOf("win") < 0 && i.indexOf("linux") < 0 && i.indexOf("mac") < 0 && i.indexOf("iphone") < 0 && i.indexOf("ipad") < 0 && i.indexOf("ipod") < 0) != ("Other" === e) || void 0 === navigator.plugins && "Windows" !== e && "Windows Phone" !== e))))
		},
		I = function () {
			var e, t = navigator.userAgent.toLowerCase(),
				a = navigator.productSub;
			if (0 <= t.indexOf("edge/") || 0 <= t.indexOf("iemobile/")) return !1;
			if (0 <= t.indexOf("opera mini")) return !1;
			if (("Chrome" === (e = 0 <= t.indexOf("firefox/") ? "Firefox" : 0 <= t.indexOf("opera/") || 0 <= t.indexOf(" opr/") ? "Opera" : 0 <= t.indexOf("chrome/") ? "Chrome" : 0 <= t.indexOf("safari/") ? 0 <= t.indexOf("android 1.") || 0 <= t.indexOf("android 2.") || 0 <= t.indexOf("android 3.") || 0 <= t.indexOf("android 4.") ? "AOSP" : "Safari" : 0 <= t.indexOf("trident/") ? "Internet Explorer" : "Other") || "Safari" === e || "Opera" === e) && "20030107" !== a) return !0;
			var i, n = eval.toString().length;
			if (37 === n && "Safari" !== e && "Firefox" !== e && "Other" !== e) return !0;
			if (39 === n && "Internet Explorer" !== e && "Other" !== e) return !0;
			if (33 === n && "Chrome" !== e && "AOSP" !== e && "Opera" !== e && "Other" !== e) return !0;
			try {
				throw "a"
			} catch (e) {
				try {
					e.toSource(), i = !0
				} catch (e) {
					i = !1
				}
			}
			return i && "Firefox" !== e && "Other" !== e
		},
		E = function () {
			var e = document.createElement("canvas");
			return !(!e.getContext || !e.getContext("2d"))
		},
		q = function () {
			if (!E()) return !1;
			var e = R(),
				t = !!window.WebGLRenderingContext && !!e;
			return A(e), t
		},
		M = function () {
			return "Microsoft Internet Explorer" === navigator.appName || !("Netscape" !== navigator.appName || !/Trident/.test(navigator.userAgent))
		},
		F = function () {
			return 2 <= ("msWriteProfilerMark" in window) + ("msLaunchUri" in navigator) + ("msSaveBlob" in navigator)
		},
		L = function () {
			return void 0 !== window.swfobject
		},
		N = function () {
			return window.swfobject.hasFlashPlayerVersion("9.0.0")
		},
		D = function (t, e) {
			var a = "___fp_swf_loaded";
			window[a] = function (e) {
				t(e)
			};
			var i, n, r = e.fonts.swfContainerId;
			(n = document.createElement("div")).setAttribute("id", i.fonts.swfContainerId), document.body.appendChild(n);
			var o = {
				onReady: a
			};
			window.swfobject.embedSWF(e.fonts.swfPath, r, "1", "1", "9.0.0", !1, o, {
				allowScriptAccess: "always",
				menu: "false"
			}, {})
		},
		R = function () {
			var e = document.createElement("canvas"),
				t = null;
			try {
				t = e.getContext("webgl") || e.getContext("experimental-webgl")
			} catch (e) { }
			return t = t || null
		},
		A = function (e) {
			var t = e.getExtension("WEBGL_lose_context");
			null != t && t.loseContext()
		},
		z = [{
			key: "userAgent",
			getData: function (e) {
				e(navigator.userAgent)
			}
		}, {
			key: "webdriver",
			getData: function (e, t) {
				e(null == navigator.webdriver ? t.NOT_AVAILABLE : navigator.webdriver)
			}
		}, {
			key: "language",
			getData: function (e, t) {
				e(navigator.language || navigator.userLanguage || navigator.browserLanguage || navigator.systemLanguage || t.NOT_AVAILABLE)
			}
		}, {
			key: "colorDepth",
			getData: function (e, t) {
				e(window.screen.colorDepth || t.NOT_AVAILABLE)
			}
		}, {
			key: "deviceMemory",
			getData: function (e, t) {
				e(navigator.deviceMemory || t.NOT_AVAILABLE)
			}
		}, {
			key: "pixelRatio",
			getData: function (e, t) {
				e(window.devicePixelRatio || t.NOT_AVAILABLE)
			}
		}, {
			key: "hardwareConcurrency",
			getData: function (e, t) {
				e(w(t))
			}
		}, {
			key: "screenResolution",
			getData: function (e, t) {
				e(n(t))
			}
		}, {
			key: "availableScreenResolution",
			getData: function (e, t) {
				e(r(t))
			}
		}, {
			key: "timezoneOffset",
			getData: function (e) {
				e((new Date).getTimezoneOffset())
			}
		}, {
			key: "timezone",
			getData: function (e, t) {
				window.Intl && window.Intl.DateTimeFormat ? e((new window.Intl.DateTimeFormat).resolvedOptions().timeZone || t.NOT_AVAILABLE) : e(t.NOT_AVAILABLE)
			}
		}, {
			key: "sessionStorage",
			getData: function (e, t) {
				e(v(t))
			}
		}, {
			key: "localStorage",
			getData: function (e, t) {
				e(y(t))
			}
		}, {
			key: "indexedDb",
			getData: function (e, t) {
				e(b(t))
			}
		}, {
			key: "addBehavior",
			getData: function (e) {
				e(!!window.HTMLElement.prototype.addBehavior)
			}
		}, {
			key: "openDatabase",
			getData: function (e) {
				e(!!window.openDatabase)
			}
		}, {
			key: "cpuClass",
			getData: function (e, t) {
				e($(t))
			}
		}, {
			key: "platform",
			getData: function (e, t) {
				e(k(t))
			}
		}, {
			key: "doNotTrack",
			getData: function (e, t) {
				e(x(t))
			}
		}, {
			key: "plugins",
			getData: function (e, t) {
				M() ? t.plugins.excludeIE ? e(t.EXCLUDED) : e(l(t)) : e(o(t))
			}
		}, {
			key: "canvas",
			getData: function (e, t) {
				E() ? e(C(t)) : e(t.NOT_AVAILABLE)
			}
		}, {
			key: "webgl",
			getData: function (e, t) {
				q() ? e(T()) : e(t.NOT_AVAILABLE)
			}
		}, {
			key: "webglVendorAndRenderer",
			getData: function (e) {
				q() ? e(P()) : e()
			}
		}, {
			key: "adBlock",
			getData: function (e) {
				e(B())
			}
		}, {
			key: "hasLiedLanguages",
			getData: function (e) {
				e(j())
			}
		}, {
			key: "hasLiedResolution",
			getData: function (e) {
				e(S())
			}
		}, {
			key: "hasLiedOs",
			getData: function (e) {
				e(O())
			}
		}, {
			key: "hasLiedBrowser",
			getData: function (e) {
				e(I())
			}
		}, {
			key: "touchSupport",
			getData: function (e) {
				e(t())
			}
		}, {
			key: "fonts",
			getData: function (e, t) {
				var l = ["monospace", "sans-serif", "serif"],
					u = ["Andale Mono", "Arial", "Arial Black", "Arial Hebrew", "Arial MT", "Arial Narrow", "Arial Rounded MT Bold", "Arial Unicode MS", "Bitstream Vera Sans Mono", "Book Antiqua", "Bookman Old Style", "Calibri", "Cambria", "Cambria Math", "Century", "Century Gothic", "Century Schoolbook", "Comic Sans", "Comic Sans MS", "Consolas", "Courier", "Courier New", "Geneva", "Georgia", "Helvetica", "Helvetica Neue", "Impact", "Lucida Bright", "Lucida Calligraphy", "Lucida Console", "Lucida Fax", "LUCIDA GRANDE", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Lucida Sans Unicode", "Microsoft Sans Serif", "Monaco", "Monotype Corsiva", "MS Gothic", "MS Outlook", "MS PGothic", "MS Reference Sans Serif", "MS Sans Serif", "MS Serif", "MYRIAD", "MYRIAD PRO", "Palatino", "Palatino Linotype", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Light", "Segoe UI Semibold", "Segoe UI Symbol", "Tahoma", "Times", "Times New Roman", "Times New Roman PS", "Trebuchet MS", "Verdana", "Wingdings", "Wingdings 2", "Wingdings 3"];
				if (t.fonts.extendedJsFonts) {
					u = u.concat(["Abadi MT Condensed Light", "Academy Engraved LET", "ADOBE CASLON PRO", "Adobe Garamond", "ADOBE GARAMOND PRO", "Agency FB", "Aharoni", "Albertus Extra Bold", "Albertus Medium", "Algerian", "Amazone BT", "American Typewriter", "American Typewriter Condensed", "AmerType Md BT", "Andalus", "Angsana New", "AngsanaUPC", "Antique Olive", "Aparajita", "Apple Chancery", "Apple Color Emoji", "Apple SD Gothic Neo", "Arabic Typesetting", "ARCHER", "ARNO PRO", "Arrus BT", "Aurora Cn BT", "AvantGarde Bk BT", "AvantGarde Md BT", "AVENIR", "Ayuthaya", "Bandy", "Bangla Sangam MN", "Bank Gothic", "BankGothic Md BT", "Baskerville", "Baskerville Old Face", "Batang", "BatangChe", "Bauer Bodoni", "Bauhaus 93", "Bazooka", "Bell MT", "Bembo", "Benguiat Bk BT", "Berlin Sans FB", "Berlin Sans FB Demi", "Bernard MT Condensed", "BernhardFashion BT", "BernhardMod BT", "Big Caslon", "BinnerD", "Blackadder ITC", "BlairMdITC TT", "Bodoni 72", "Bodoni 72 Oldstyle", "Bodoni 72 Smallcaps", "Bodoni MT", "Bodoni MT Black", "Bodoni MT Condensed", "Bodoni MT Poster Compressed", "Bookshelf Symbol 7", "Boulder", "Bradley Hand", "Bradley Hand ITC", "Bremen Bd BT", "Britannic Bold", "Broadway", "Browallia New", "BrowalliaUPC", "Brush Script MT", "Californian FB", "Calisto MT", "Calligrapher", "Candara", "CaslonOpnface BT", "Castellar", "Centaur", "Cezanne", "CG Omega", "CG Times", "Chalkboard", "Chalkboard SE", "Chalkduster", "Charlesworth", "Charter Bd BT", "Charter BT", "Chaucer", "ChelthmITC Bk BT", "Chiller", "Clarendon", "Clarendon Condensed", "CloisterBlack BT", "Cochin", "Colonna MT", "Constantia", "Cooper Black", "Copperplate", "Copperplate Gothic", "Copperplate Gothic Bold", "Copperplate Gothic Light", "CopperplGoth Bd BT", "Corbel", "Cordia New", "CordiaUPC", "Cornerstone", "Coronet", "Cuckoo", "Curlz MT", "DaunPenh", "Dauphin", "David", "DB LCD Temp", "DELICIOUS", "Denmark", "DFKai-SB", "Didot", "DilleniaUPC", "DIN", "DokChampa", "Dotum", "DotumChe", "Ebrima", "Edwardian Script ITC", "Elephant", "English 111 Vivace BT", "Engravers MT", "EngraversGothic BT", "Eras Bold ITC", "Eras Demi ITC", "Eras Light ITC", "Eras Medium ITC", "EucrosiaUPC", "Euphemia", "Euphemia UCAS", "EUROSTILE", "Exotc350 Bd BT", "FangSong", "Felix Titling", "Fixedsys", "FONTIN", "Footlight MT Light", "Forte", "FrankRuehl", "Fransiscan", "Freefrm721 Blk BT", "FreesiaUPC", "Freestyle Script", "French Script MT", "FrnkGothITC Bk BT", "Fruitger", "FRUTIGER", "Futura", "Futura Bk BT", "Futura Lt BT", "Futura Md BT", "Futura ZBlk BT", "FuturaBlack BT", "Gabriola", "Galliard BT", "Gautami", "Geeza Pro", "Geometr231 BT", "Geometr231 Hv BT", "Geometr231 Lt BT", "GeoSlab 703 Lt BT", "GeoSlab 703 XBd BT", "Gigi", "Gill Sans", "Gill Sans MT", "Gill Sans MT Condensed", "Gill Sans MT Ext Condensed Bold", "Gill Sans Ultra Bold", "Gill Sans Ultra Bold Condensed", "Gisha", "Gloucester MT Extra Condensed", "GOTHAM", "GOTHAM BOLD", "Goudy Old Style", "Goudy Stout", "GoudyHandtooled BT", "GoudyOLSt BT", "Gujarati Sangam MN", "Gulim", "GulimChe", "Gungsuh", "GungsuhChe", "Gurmukhi MN", "Haettenschweiler", "Harlow Solid Italic", "Harrington", "Heather", "Heiti SC", "Heiti TC", "HELV", "Herald", "High Tower Text", "Hiragino Kaku Gothic ProN", "Hiragino Mincho ProN", "Hoefler Text", "Humanst 521 Cn BT", "Humanst521 BT", "Humanst521 Lt BT", "Imprint MT Shadow", "Incised901 Bd BT", "Incised901 BT", "Incised901 Lt BT", "INCONSOLATA", "Informal Roman", "Informal011 BT", "INTERSTATE", "IrisUPC", "Iskoola Pota", "JasmineUPC", "Jazz LET", "Jenson", "Jester", "Jokerman", "Juice ITC", "Kabel Bk BT", "Kabel Ult BT", "Kailasa", "KaiTi", "Kalinga", "Kannada Sangam MN", "Kartika", "Kaufmann Bd BT", "Kaufmann BT", "Khmer UI", "KodchiangUPC", "Kokila", "Korinna BT", "Kristen ITC", "Krungthep", "Kunstler Script", "Lao UI", "Latha", "Leelawadee", "Letter Gothic", "Levenim MT", "LilyUPC", "Lithograph", "Lithograph Light", "Long Island", "Lydian BT", "Magneto", "Maiandra GD", "Malayalam Sangam MN", "Malgun Gothic", "Mangal", "Marigold", "Marion", "Marker Felt", "Market", "Marlett", "Matisse ITC", "Matura MT Script Capitals", "Meiryo", "Meiryo UI", "Microsoft Himalaya", "Microsoft JhengHei", "Microsoft New Tai Lue", "Microsoft PhagsPa", "Microsoft Tai Le", "Microsoft Uighur", "Microsoft YaHei", "Microsoft Yi Baiti", "MingLiU", "MingLiU_HKSCS", "MingLiU_HKSCS-ExtB", "MingLiU-ExtB", "Minion", "Minion Pro", "Miriam", "Miriam Fixed", "Mistral", "Modern", "Modern No. 20", "Mona Lisa Solid ITC TT", "Mongolian Baiti", "MONO", "MoolBoran", "Mrs Eaves", "MS LineDraw", "MS Mincho", "MS PMincho", "MS Reference Specialty", "MS UI Gothic", "MT Extra", "MUSEO", "MV Boli", "Nadeem", "Narkisim", "NEVIS", "News Gothic", "News GothicMT", "NewsGoth BT", "Niagara Engraved", "Niagara Solid", "Noteworthy", "NSimSun", "Nyala", "OCR A Extended", "Old Century", "Old English Text MT", "Onyx", "Onyx BT", "OPTIMA", "Oriya Sangam MN", "OSAKA", "OzHandicraft BT", "Palace Script MT", "Papyrus", "Parchment", "Party LET", "Pegasus", "Perpetua", "Perpetua Titling MT", "PetitaBold", "Pickwick", "Plantagenet Cherokee", "Playbill", "PMingLiU", "PMingLiU-ExtB", "Poor Richard", "Poster", "PosterBodoni BT", "PRINCETOWN LET", "Pristina", "PTBarnum BT", "Pythagoras", "Raavi", "Rage Italic", "Ravie", "Ribbon131 Bd BT", "Rockwell", "Rockwell Condensed", "Rockwell Extra Bold", "Rod", "Roman", "Sakkal Majalla", "Santa Fe LET", "Savoye LET", "Sceptre", "Script", "Script MT Bold", "SCRIPTINA", "Serifa", "Serifa BT", "Serifa Th BT", "ShelleyVolante BT", "Sherwood", "Shonar Bangla", "Showcard Gothic", "Shruti", "Signboard", "SILKSCREEN", "SimHei", "Simplified Arabic", "Simplified Arabic Fixed", "SimSun", "SimSun-ExtB", "Sinhala Sangam MN", "Sketch Rockwell", "Skia", "Small Fonts", "Snap ITC", "Snell Roundhand", "Socket", "Souvenir Lt BT", "Staccato222 BT", "Steamer", "Stencil", "Storybook", "Styllo", "Subway", "Swis721 BlkEx BT", "Swiss911 XCm BT", "Sylfaen", "Synchro LET", "System", "Tamil Sangam MN", "Technical", "Teletype", "Telugu Sangam MN", "Tempus Sans ITC", "Terminal", "Thonburi", "Traditional Arabic", "Trajan", "TRAJAN PRO", "Tristan", "Tubular", "Tunga", "Tw Cen MT", "Tw Cen MT Condensed", "Tw Cen MT Condensed Extra Bold", "TypoUpright BT", "Unicorn", "Univers", "Univers CE 55 Medium", "Univers Condensed", "Utsaah", "Vagabond", "Vani", "Vijaya", "Viner Hand ITC", "VisualUI", "Vivaldi", "Vladimir Script", "Vrinda", "Westminster", "WHITNEY", "Wide Latin", "ZapfEllipt BT", "ZapfHumnst BT", "ZapfHumnst Dm BT", "Zapfino", "Zurich BlkEx BT", "Zurich Ex BT", "ZWAdobeF"])
				}
				u = (u = u.concat(t.fonts.userDefinedFonts)).filter(function (e, t) {
					return u.indexOf(e) === t
				});

				function d() {
					var e = document.createElement("span");
					return e.style.position = "absolute", e.style.left = "-9999px", e.style.fontSize = "72px", e.style.fontStyle = "normal", e.style.fontWeight = "normal", e.style.letterSpacing = "normal", e.style.lineBreak = "auto", e.style.lineHeight = "normal", e.style.textTransform = "none", e.style.textAlign = "left", e.style.textDecoration = "none", e.style.textShadow = "none", e.style.whiteSpace = "normal", e.style.wordBreak = "normal", e.style.wordSpacing = "normal", e.innerHTML = "mmmmmmmmmmlli", e
				}

				function a(e) {
					for (var t = !1, a = 0; a < l.length; a++)
						if (t = e[a].offsetWidth !== r[l[a]] || e[a].offsetHeight !== o[l[a]]) return t;
					return t
				}
				var i = document.getElementsByTagName("body")[0],
					n = document.createElement("div"),
					p = document.createElement("div"),
					r = {},
					o = {},
					s = function () {
						for (var e = [], t = 0, a = l.length; t < a; t++) {
							var i = d();
							i.style.fontFamily = l[t], n.appendChild(i), e.push(i)
						}
						return e
					}();
				i.appendChild(n);
				for (var c = 0, _ = l.length; c < _; c++) r[l[c]] = s[c].offsetWidth, o[l[c]] = s[c].offsetHeight;
				var f = function () {
					for (var e, t, a, i = {}, n = 0, r = u.length; n < r; n++) {
						for (var o = [], s = 0, c = l.length; s < c; s++) {
							var _ = (e = u[n], t = l[s], a = void 0, (a = d()).style.fontFamily = "'" + e + "'," + t, a);
							p.appendChild(_), o.push(_)
						}
						i[u[n]] = o
					}
					return i
				}();
				i.appendChild(p);
				for (var m = [], h = 0, g = u.length; h < g; h++) a(f[u[h]]) && m.push(u[h]);
				i.removeChild(p), i.removeChild(n), e(m)
			},
			pauseBefore: !0
		}, {
			key: "fontsFlash",
			getData: function (t, e) {
				return L() ? N() ? e.fonts.swfPath ? void D(function (e) {
					t(e)
				}, e) : t("missing options.fonts.swfPath") : t("flash not installed") : t("swf object not loaded")
			},
			pauseBefore: !0
		}, {
			key: "audio",
			getData: function (a, e) {
				var t = e.audio;
				if (t.excludeIOS11 && navigator.userAgent.match(/OS 11.+Version\/11.+Safari/)) return a(e.EXCLUDED);
				var i = window.OfflineAudioContext || window.webkitOfflineAudioContext;
				if (null == i) return a(e.NOT_AVAILABLE);
				var n = new i(1, 44100, 44100),
					r = n.createOscillator();
				r.type = "triangle", r.frequency.setValueAtTime(1e4, n.currentTime);
				var o = n.createDynamicsCompressor();
				_([
					["threshold", -50],
					["knee", 40],
					["ratio", 12],
					["reduction", -20],
					["attack", 0],
					["release", .25]
				], function (e) {
					void 0 !== o[e[0]] && "function" == typeof o[e[0]].setValueAtTime && o[e[0]].setValueAtTime(e[1], n.currentTime)
				}), r.connect(o), o.connect(n.destination), r.start(0), n.startRendering();
				var s = setTimeout(function () {
					return console.warn('Audio fingerprint timed out. Please report bug at https://github.com/fingerprintjs/fingerprintjs with your user agent: "' + navigator.userAgent + '".'), n.oncomplete = function () { }, n = null, a("audioTimeout")
				}, t.timeout);
				n.oncomplete = function (e) {
					var t;
					try {
						clearTimeout(s), t = e.renderedBuffer.getChannelData(0).slice(4500, 5e3).reduce(function (e, t) {
							return e + Math.abs(t)
						}, 0).toString(), r.disconnect(), o.disconnect()
					} catch (e) {
						return void a(e)
					}
					a(t)
				}
			}
		}, {
			key: "enumerateDevices",
			getData: function (t, e) {
				if (!a()) return t(e.NOT_AVAILABLE);
				navigator.mediaDevices.enumerateDevices().then(function (e) {
					t(e.map(function (e) {
						return "id=" + e.deviceId + ";gid=" + e.groupId + ";" + e.kind + ";" + e.label
					}))
				}).catch(function (e) {
					t(e)
				})
			}
		}];
	return i.get = function (a, i) {
		(function (e, t) {
			if (null == t) return;
			var a, i;
			for (i in t) null == (a = t[i]) || Object.prototype.hasOwnProperty.call(e, i) || (e[i] = a)
		})(a = i ? a || {} : (i = a, {}), e), a.components = a.extraComponents.concat(z);
		var n = {
			data: [],
			addPreprocessedComponent: function (e, t) {
				"function" == typeof a.preprocessor && (t = a.preprocessor(e, t)), n.data.push({
					key: e,
					value: t
				})
			}
		},
			r = -1,
			o = function (e) {
				if ((r += 1) >= a.components.length) i(n.data);
				else {
					var t = a.components[r];
					if (a.excludes[t.key]) o(!1);
					else {
						if (!e && t.pauseBefore) return --r, void setTimeout(function () {
							o(!0)
						}, 1);
						try {
							t.getData(function (e) {
								n.addPreprocessedComponent(t.key, e), o(!1)
							}, a)
						} catch (e) {
							n.addPreprocessedComponent(t.key, String(e)), o(!1)
						}
					}
				}
			};
		o(!1)
	}, i.getPromise = function (a) {
		return new Promise(function (e, t) {
			i.get(a, e)
		})
	}, i.getV18 = function (r, o) {
		return null == o && (o = r, r = {}), i.get(r, function (e) {
			for (var t = [], a = 0; a < e.length; a++) {
				var i = e[a];
				if (i.value === (r.NOT_AVAILABLE || "not available")) t.push({
					key: i.key,
					value: "unknown"
				});
				else if ("plugins" === i.key) t.push({
					key: "plugins",
					value: c(i.value, function (e) {
						var t = c(e[2], function (e) {
							return e.join ? e.join("~") : e
						}).join(",");
						return [e[0], e[1], t].join("::")
					})
				});
				else if (-1 !== ["canvas", "webgl"].indexOf(i.key) && Array.isArray(i.value)) t.push({
					key: i.key,
					value: i.value.join("~")
				});
				else if (-1 !== ["sessionStorage", "localStorage", "indexedDb", "addBehavior", "openDatabase"].indexOf(i.key)) {
					if (!i.value) continue;
					t.push({
						key: i.key,
						value: 1
					})
				} else i.value ? t.push(i.value.join ? {
					key: i.key,
					value: i.value.join(";")
				} : i) : t.push({
					key: i.key,
					value: i.value
				})
			}
			var n = s(c(t, function (e) {
				return e.value
			}).join("~~~"), 31);
			o(n, t)
		})
	}, i.x64hash128 = s, i.VERSION = "2.1.4", i
});
var normalBuy = function (e) {
	var l = e;
	var a = g.game;
	var n = 0;
	var o;
	var s = 6;
	var c = 10;
	var r = 18;
	var _ = 44;
	var i = 49;
	var t = 50;
	var u = {};
	var d = function (a, i, e, n) {
		if (e == "buyer_bargain") {
			var t = "/api/market/buyer_bargain/wx_pay_qrcode";
			var r = {
				bargain_id: a
			}
		} else if (e == "buy_order") {
			var t = "/api/market/buy_order/wx_pay_qrcode";
			var r = {
				buy_order_id: a
			}
		} else {
			var t = "/api/market/bill_order/wx_pay_qrcode";
			var r = {
				bill_order_id: a
			}
		}
		sendRequest(t, {
			method: "GET",
			data: r,
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				$("#j_popup_wx").remove();
				var t = template_render("wx_pay_pat", {
					price: i
				});
				$("body").append(t);
				$("#wx-pay-qrcode").html("");
				new QRCode(document.getElementById("wx-pay-qrcode"), {
					text: e.data.url,
					width: 140,
					height: 140
				});
				$("#wx-pay-qrcode").attr("title", "");
				h(e.data.pay_expire_timeout);
				$("#j_popup_wx .popup-close").click(function () {
					Popup.hide();
					if ($("#j_popup_wx").hasClass("expired")) return;
					Buff.alert({
						title: i18n("waiting_for_payment"),
						message: i18n("you_havent_successfully_paid_the"),
						confirmText: i18n("continue_to_pay"),
						cancelText: i18n("confirm_leave"),
						success: function () {
							Popup.show("j_popup_wx")
						},
						cancel: function () {
							window.location.reload()
						},
						onClose: function () {
							window.location.reload()
						}
					})
				});
				Popup.hide();
				Popup.show("j_popup_wx");
				n = n || b;
				n(a, s);
				return
			}
		})
	};
	var p = function (t) {
		sendRequest("/api/market/bill_order/pcredit_page_pay", {
			method: "GET",
			data: {
				bill_order_id: t
			},
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				openPageOnNewTab(e.data.elements.url);
				Popup.hide();
				b(t, c)
			}
		})
	};
	var f = function (t, e, a) {
		var i = "/api/market/bill_order/epay_page_pay";
		var n = {
			bill_order_id: t
		};
		if (e == "buy_order") {
			i = "/api/market/buy_order/epay_page_pay";
			n = {
				buy_order_id: t
			}
		} else if (e == "buyer_bargain") {
			i = "/api/market/buyer_bargain/epay_page_pay";
			n = {
				bargain_id: t
			}
		}
		sendRequest(i, {
			method: "GET",
			data: n,
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				openPageOnNewTab(e.data.elements.url);
				Popup.hide();
				a = a || b;
				a(t, _)
			}
		})
	};
	var m = function (t, a, e, i) {
		var n = "/api/market/bill_order/page_pay";
		var r = {
			bill_order_id: t
		};
		if (e == "buy_order") {
			n = "/api/market/buy_order/page_pay";
			r = {
				buy_order_id: t
			}
		} else if (e == "buyer_bargain") {
			n = "/api/market/buyer_bargain/page_pay";
			r = {
				bargain_id: t
			}
		}
		sendRequest(n, {
			method: "GET",
			data: r,
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				openPageOnNewTab(e.data.elements.url);
				Popup.hide();
				i = i || b;
				i(t, a)
			}
		})
	};
	var h = function (e) {
		var t = 0,
			a = 0;
		if (e > 0) {
			t = Math.floor(e / 60);
			a = e % 60
		}
		var i = t + i18n("minutes") + a + i18n("seconds");
		$("#pay-remain-time").text(i)
	};
	var v = function (e) {
		var t = u.pay_method;
		sendRequest("/api/market/goods/buy", {
			data: {
				game: u.game || a,
				goods_id: u.goods_id,
				sell_order_id: u.sell_order_id,
				price: u.price,
				pay_method: u.pay_method,
				allow_tradable_cooldown: n,
				token: getParams().token || "",
				cdkey_id: u.cdkey_id,
				password: e,
				hide_non_epay: payMethodPopup().isNonEpayHidden()
			},
			dataType: "json",
			method: "POST",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "warning"
					});
					return
				}
				bill_order_id = e.data.id;
				if (t == s) {
					d(bill_order_id, e.data.price)
				} else if (t == c) {
					p(bill_order_id)
				} else if (t == _) {
					f(bill_order_id)
				} else if (t == i) {
					m(bill_order_id)
				} else {
					b(bill_order_id, t)
				}
			},
			error: function () {
				$("#loading-cover").hide();
				Popup.hide();
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("the_system_is_busy_please"),
					hideCancel: true,
					success: function () {
						window.location.href = "/market/buy_order/history?game=" + (u.game || a)
					}
				})
			},
			complete: function (e) {
				if (e.responseJSON.code == "Realname Required" || e.responseJSON.code == "Market Ban Epay Balance" || e.responseJSON.code == "Seller Realname Required") {
					$(".pay-btn").removeClass("i_Btn_disabled")
				}
			}
		})
	};
	var y = function (e, t) {
		sendRequest("/api/market/bill_order/notify_buyer_to_send_offer", {
			method: "POST",
			dataType: "json",
			data: {
				bill_order_id: e.id,
				game: e.game
			},
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				if (t) t()
			}
		})
	};
	var b = function (e, n) {
		var t = 0;
		var r = false;
		var a = function (i) {
			sendRequest("/api/market/bill_order/batch/info", {
				data: {
					bill_orders: i
				},
				dataType: "json",
				method: "GET",
				timeout: 2e3,
				showLoading: false,
				showError: false,
				success: function (e) {
					if (e.code != "OK") {
						return
					}
					if (e.data.items.length != 1) {
						return
					}
					r = true;
					var t = e.data.items[0];
					if ((t.mode == 2 && t.state == "TO_DELIVER" || t.mode == 5 && t.progress == 305 || t.mode == 8 && t.progress == 305 || t.mode == 7 && t.progress == 202 || t.state == "SUCCESS") && o != undefined) {
						clearInterval(o);
						o = undefined;
						Popup.hide();
						if (t.mode == 5 || t.mode == 8) {
							$("#j_popup_payed").remove();
							var a = template_render("manual_plus_pay_success_pat");
							$("body").append(a);
							$("#j_popup_payed #go_to_app, #j_popup_payed .popup-close").click(function () {
								Popup.hide();
								y(t);
								Buff.toast(i18n("add_in_5_minutes_to"), {
									type: "success"
								});
								setTimeout(function () {
									window.location.reload()
								}, 3e3)
							});
							$("#j_popup_payed #ask_seller").click(function () {
								Popup.hide();
								sendRequest("/api/market/bill_order/ask_seller_to_send_offer", {
									method: "POST",
									dataType: "json",
									data: {
										bill_orders: [i],
										game: t.game
									},
									success: function (e) {
										if (e.code != "OK") {
											Buff.toast(e.error, {
												type: "error"
											})
										} else if (e.data[i] != "OK") {
											Buff.toast(e.data[i], {
												type: "error"
											})
										} else {
											Buff.toast(i18n("please_wait_for_seller_to"), {
												type: "success"
											})
										}
										setTimeout(function () {
											window.location.reload()
										}, 3e3)
									}
								})
							});
							Popup.show("j_popup_payed", {
								forceClose: true
							})
						} else if (t.mode == 7) {
							Buff.alert({
								type: "success",
								title: i18n("the_payment_is_successful"),
								safeMessage: i18n("order_pay_success_partner", {
									game: t.game
								}),
								hideCancel: true,
								success: function () {
									window.location.reload()
								}
							})
						} else {
							Buff.alert({
								type: "success",
								title: t.mode == 2 ? i18n("the_payment_is_successful") : i18n("buy_success"),
								message: t.mode == 2 ? i18n("please_wait_for_the_seller") : t.mode == 7 ? i18n("buy_success") : i18n("please_in_the_backpack_view"),
								hideCancel: true,
								success: function () {
									window.location.reload()
								}
							})
						}
					}
					if (n == s) {
						if (t.progress == 104 || t.progress == 102 && t.pay_expire_timeout <= 0) {
							clearInterval(o);
							o = undefined;
							$("#j_popup_wx").addClass("expired");
							$("#j_popup_wx .popup-cont.paying").hide();
							$("#j_popup_wx .popup-cont.expired").show()
						} else if (t.progress == 102) {
							h(t.pay_expire_timeout)
						}
					} else if (n == c || n == _) {
						if (t.progress == 104 || t.progress == 102 && t.pay_expire_timeout <= 0) {
							clearInterval(o);
							o = undefined;
							Popup.hide();
							Buff.alert({
								title: i18n("prompt"),
								message: i18n("pay_failed"),
								hideCancel: true,
								success: function () {
									window.location.reload()
								}
							})
						}
					}
				},
				error: function () {
					r = true
				}
			})
		};
		if (n != s) {
			Popup.hide();
			Buff.alert({
				title: i18n("payment"),
				message: i18n("please_wait"),
				hideCancel: true,
				hideConfirm: true
			})
		}
		var i = n == s || n == c || n == _ ? 300 : 5;
		o = setInterval(function () {
			t += 1;
			if (t == 1 || t <= i && r) {
				r = false;
				a(e)
			} else if (t > i) {
				clearInterval(o);
				o = undefined;
				Popup.hide();
				Buff.alert({
					title: i18n("payment"),
					message: i18n("payment_system_is_busy_please"),
					hideCancel: true,
					success: function () {
						window.location.reload()
					}
				})
			}
		}, 1e3)
	};
	var w = function (e) {
		var t = function (t) {
			sendRequest("/api/asset/send_pay_authcode/", {
				data: {
					bill_order_id: e
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					t()
				}
			})
		};
		return t
	};
	var k = function (t, a) {
		var e = function (e) {
			sendRequest("/api/asset/verify_pay_authcode/", {
				data: {
					bill_order_id: t,
					authcode: e
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					b(t, a)
				}
			})
		};
		return e
	};
	var x = function (i) {
		sendRequest("/api/market/goods/buy/preview", {
			data: {
				game: u.game || a,
				sell_order_id: u.sell_order_id,
				goods_id: u.goods_id,
				price: u.price,
				allow_tradable_cooldown: n,
				cdkey_id: u.cdkey_id
			},
			dataType: "json",
			method: "GET",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "warning"
					});
					return
				}
				Popup.hide();
				var t = payMethodPopup();
				var a = {
					payment_tips: e.data.payment_tips_highlight,
					pay_methods: e.data.pay_methods,
					price: e.data.discounted_price,
					onPaymethodChange: function (e, t, a) {
						u.pay_method = e;
						u.free_password = t !== "false";
						u.ejzb_auth = a
					},
					onConfirm: function () {
						if (u.pay_method == r) {
							Popup.hide();
							u.allow_tradable_cooldown = n;
							u.discounted_price = e.data.discounted_price;
							splitPayPopup().show(u);
							return
						}
						if (ejzbAuthVerifyManager().process(u.ejzb_auth, t, a, e.data.discounted_price)) {
							return
						}
						if (!u.free_password) {
							Popup.hide();
							payPasswordPopup(e.data.discounted_price, function (e) {
								Popup.hide();
								v(e)
							}, function () {
								Popup.hide();
								t.show(a);
								C()
							}).show();
							return
						}
						v()
					}
				};
				t.show(a);
				if (i) {
					if (i == 8 || i == 9) {
						$("#j_popup_epay .mix-item").closest(".pay-item").data("value", i).click();
						$("#j_popup_epay .mix-item").show();
						$('#j_popup_epay .mix-item[data-value="' + i + '"]').hide()
					} else {
						$('#j_popup_epay .pay-item[data-value="' + i + '"]').click()
					}
				}
				C()
			}
		})
	};
	var C = function () {
		sendRequest("/api/activity/coupon/my/", {
			method: "GET",
			data: {
				state: "unuse",
				coupon_type: "reduction",
				order_amount: u.price,
				sell_order_id: u.sell_order_id,
				page_size: 200
			},
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				var t = e.data.items;
				var a = template_render("coupon_info_pat", {
					items: e.data.items
				});
				$("#j_popup_epay").find(".coupon-container").html(a);
				Buff.initSelect("#j_select_coupon");
				$('#j_select_coupon li[value="' + u.cdkey_id + '"]').click();
				$("#j_select_coupon").on("change", function () {
					if (u.cdkey_id == $(this).attr("value")) {
						return
					}
					u.cdkey_id = $(this).attr("value");
					x($(".pay-item.on").data("value"))
				})
			}
		})
	};
	var T = function () {
		$(document).on("click", ".btn-buy-order", function (e) {
			e.preventDefault();
			e.stopPropagation();
			if ($(this).hasClass("i_Btn_disabled")) {
				Buff.toast($(this).data("disabled-click-text"), {
					type: "warning"
				});
				return
			}
			$(".floattip").trigger("mouseleave");
			var t = $(this).data("sellerid");
			var a = $(this).data("orderid");
			var i = $(this).data("goodsid");
			var n = {
				icon_url: $(this).data("goods-icon-url"),
				name: $(this).data("goods-name"),
				sell_min_price: $(this).data("goods-sell-min-price")
			};
			var r = $(this).data("price");
			var o = $(this).data("mode");
			var s = $(this).data("asset-info");
			if (t == l) {
				Buff.toast(i18n("cannot_purchase_your_own_items"), {
					type: "warning"
				});
				return
			}
			u = {};
			u.sell_order_id = a;
			u.goods_id = i;
			u.price = r;
			u.discounted_price = r;
			u.goods = n;
			u.cdkey_id = "";
			u.game = $(this).data("game");
			var c = function () {
				if (localStorage.getItem("remember_dismiss_check_sticker_wear")) {
					return x()
				}
				if (!s || !s.info || !s.info.stickers) {
					return x()
				}
				var e = s.info.stickers;
				var t = false;
				for (var a = 0; a < e.length; a++) {
					if (e[a].wear > 0) {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("check_sticker_wear_in_detail"),
							success: function () {
								localStorage.setItem("remember_dismiss_check_sticker_wear", "1")
							},
							hideCancel: true,
							confirmText: i18n("i_know")
						});
						t = true;
						break
					}
				}
				if (!t) {
					x()
				}
			};
			var _ = function (a) {
				sendRequest("/account/api/user/info/v2?meta_list=partner_role_detail", {
					method: "GET",
					success: function (e) {
						if (e.code != "OK") {
							a();
							return
						}
						try {
							var t = e.data.meta_list.partner_role_detail[g.game].properties
						} catch {
							var t = {}
						}
						if (t.tradable === false) {
							Buff.alert({
								title: i18n("prompt"),
								message: t.untradable_text,
								success: a,
								confirmText: i18n("i_know")
							})
						} else {
							a()
						}
					},
					error: a
				})
			};
			if (g.is_partner_appid) {
				_(x)
			} else {
				c()
			}
		});
		$(document).on("click", ".item-detail-img", function (e) {
			if (g.item_detail_popup_appids.indexOf(g.appid) == -1) {
				return
			}
			ItemDetailPopupDecorator("selling-list").show($("tr.selling").index($(this).parent().parent()));
			ItemDetailPopupDecorator("top-bookmark").show($("li.top_bookmark").index($(this).parent()))
		})
	};
	return {
		init: T,
		show_wx_pay_qrcode: d,
		open_pcredit_pay: p,
		open_epay_pay: f,
		open_pay: m,
		goods_after_pay: b
	}
};
var supplyBuy = function (e) {
	const t = 0;
	const a = 1;
	const s = "change_price";
	var i = e;
	var c = g.game;
	var _ = {
		num: 1
	};
	var n;
	var l = 6;
	var r = 7;
	var u = 44;
	var o = 45;
	var d;
	var p = t;
	var f = true;
	var m = function (e) { };
	var h = function () {
		var a = [];
		$("#j_popup_supply .w-Select.specific-buy").each(function () {
			var e = $(this).attr("value");
			var t = $(this).data("specific-type");
			if (e) a.push({
				specific_type: t,
				value: e
			})
		});
		var e = $("#j_popup_supply .w-Select.specific-paintwear").attr("value");
		if (e) {
			paintwears = rangeKeyParser.parse(e);
			if (paintwears[0]) a.push({
				specific_type: "min_paintwear",
				value: paintwears[0]
			});
			if (paintwears[1]) a.push({
				specific_type: "max_paintwear",
				value: paintwears[1]
			})
		}
		return a
	};
	var v = function (t, a) {
		default_options = {
			source: "",
			early_stop: 1,
			onSuccess: function () { }
		};
		a = Object.assign(default_options, a);
		cancel_data = {
			game: c,
			buy_orders: [t]
		};
		if (a.source) {
			cancel_data.source = a.source
		}
		var i = function () {
			sendRequest("/api/market/buy_order/cancel", {
				method: "POST",
				data: cancel_data,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					if (e.data[t] != "OK") {
						Buff.toast(e.data[t], {
							type: "error"
						});
						return
					}
					if (typeof a.onSuccess == "function") {
						a.onSuccess(e)
					}
				}
			})
		};
		sendRequest("/api/market/buy_order/cancel/check_rate_limit", {
			data: {
				game: c,
				buy_orders: [t],
				early_stop: a.early_stop
			},
			dataType: "json",
			method: "POST",
			success: function (e) {
				if (e.code == "OK") {
					i()
				} else if (e.code == "Request Rate Will Be Limited" && !a.early_stop) {
					Buff.alert({
						title: i18n("termination_buying"),
						message: e.error,
						success: i
					})
				} else {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			}
		})
	};
	var y = function (a, i) {
		var e = _.goods.id;
		var t = _.price;
		var n = _.num;
		var r = _.pay_method;
		var o = h();
		sendRequest("/api/market/buy_order/create", {
			data: {
				game: c,
				goods_id: e,
				price: t,
				num: n,
				pay_method: r,
				allow_tradable_cooldown: $("#buy-order-cooldown").attr("value") ? 1 : 0,
				specific: o,
				password: a,
				hide_non_epay: payMethodPopup().isNonEpayHidden()
			},
			dataType: "json",
			method: "POST",
			timeout: 1e4,
			success: function (e) {
				if (e.code == "BuyOrder Goods Already Buy" || e.code == "BuyOrder Duplicate Conditions") {
					var t = e.data.buy_order_id;
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("recreate_buy_order_message", {
							old_price: e.data.price,
							new_price: _.price
						}),
						confirmText: i18n("recreate"),
						success: function () {
							v(t, {
								source: _.source,
								onSuccess: function () {
									y(a, i18n("cancel_buy_order_and_recreate"))
								}
							})
						}
					});
					return
				}
				if (e.code != "OK") {
					if (_.source == s) {
						message = i18n("reprice_buy_order_cancel_success_create_fail") + "\n" + i18n("reason") + ": " + e.error;
						Buff.alert({
							title: i18n("prompt"),
							message: message,
							confirmText: i18n("confirm"),
							hideCancel: true
						})
					} else {
						Buff.toast((i || "") + e.error, {
							type: "error"
						})
					}
					$(".pay-btn").removeClass("i_Btn_disabled");
					return
				}
				Popup.hide();
				if (r == l || r == u) {
					b(e.data.id, e.data.frozen_amount, r)
				} else {
					Buff.toast(_.source === s ? i18n("reprice_buy_order_successfully") : i18n("create_buying_success"), {
						type: "success"
					});
					updateNavbarCashAmount();
					m(n)
				}
			},
			complete: function (e) {
				if (e.responseJSON.code == "Realname Required") {
					$(".pay-btn").removeClass("i_Btn_disabled")
				}
			}
		})
	};
	var b = function (e, t, a) {
		if (a == l || a == r) {
			normalBuy(g.user.id).show_wx_pay_qrcode(e, t, "buy_order", k)
		} else if (a == u || a == o) {
			normalBuy(g.user.id).open_epay_pay(e, "buy_order", k)
		}
	};
	var w = function (e) {
		var t = 0,
			a = 0;
		if (e > 0) {
			t = Math.floor(e / 60);
			a = e % 60
		}
		var i = t + i18n("minutes") + a + i18n("seconds");
		$("#pay-remain-time").text(i)
	};
	var k = function (e, a) {
		var t = 0;
		var i = false;
		var n = function (e) {
			sendRequest("/api/market/buy_order/check_state", {
				data: {
					buy_order_id: e
				},
				dataType: "json",
				method: "GET",
				timeout: 2e3,
				showLoading: false,
				showError: false,
				success: function (e) {
					i = true;
					if (e.code != "OK") {
						return
					}
					var t = e.data.state;
					if (t == 7 || t == 6 && e.data.pay_expire_timeout < 0) {
						clearInterval(d);
						d = undefined;
						if (a == l) {
							$("#j_popup_wx").addClass("expired");
							$("#j_popup_wx .popup-cont.paying").hide();
							$("#j_popup_wx .popup-cont.expired").show()
						} else {
							Buff.alert({
								title: i18n("prompt"),
								message: i18n("pay_failed"),
								hideCancel: true,
								success: function () {
									window.location.reload()
								}
							})
						}
					} else if (t == 6) {
						if (a == l) {
							w(e.data.pay_expire_timeout)
						}
					} else {
						clearInterval(d);
						d = undefined;
						Popup.hide();
						Buff.toast(i18n("buy_order_wx_pay_unfrozen"), {
							type: "success"
						});
						m(e.data.num)
					}
				},
				error: function () {
					i = true
				}
			})
		};
		if (a != l) {
			Popup.hide();
			Buff.alert({
				title: i18n("payment"),
				message: i18n("please_wait"),
				hideCancel: true,
				hideConfirm: true
			})
		}
		var r = 300;
		d = setInterval(function () {
			t += 1;
			if (t == 1 || t <= r && i) {
				i = false;
				n(e)
			} else if (t > r) {
				clearInterval(d);
				d = undefined;
				Popup.hide();
				Buff.alert({
					title: i18n("payment"),
					message: i18n("payment_system_is_busy_please"),
					hideCancel: true,
					success: function () {
						window.location.reload()
					}
				})
			}
		}, 1e3)
	};
	var x = function (e) {
		switch (e.event) {
			case "custom_paintwear_reset":
				$("#j_select-specific-paintwear").find("li").eq(0).click();
				break;
			case "custom_paintwear_confirm":
				var t = e.data["custom_painwear_val"];
				if (!t) {
					$("#j_select-specific-paintwear").find("li").eq(0).click();
					break
				}
				$("#j_select-specific-paintwear").find("li").removeClass("on");
				$("#j_select-specific-paintwear").find("#custom-float-range").addClass("on");
				$("#j_select-specific-paintwear h3").text(t);
				$("#j_select-specific-paintwear").attr("value", t);
				$("#j_select-specific-paintwear").trigger("change");
				break
		}
	};
	var C = function () {
		sendRequest("/api/market/goods/info", {
			data: {
				goods_id: _.goods_id,
				game: c
			},
			method: "GET",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				if (!e.data.can_buy) {
					Buff.toast(i18n("the_goods_is_not_buying"), {
						type: "error"
					});
					return
				}
				_.specific_items = e.data.goods_info.specific;
				_.specific_paintwears = e.data.goods_info.specific_paintwear_buying_choices || [];
				_.goods = e.data;
				_.max_num = MAX_NUM[e.data.appid];
				$("#j_popup_supply").remove();
				$("body").append($(template_render("supply_buy_detail_pat", _)));
				Popup.show("j_popup_supply");
				if (_.specific) {
					var t = f;
					f = false;
					try {
						for (var a = 0; a < _.specific.length; a++) {
							var i = _.specific[a];
							if (i.type == "unlock_style") {
								$("#j_popup_supply #j_select-unlock_style").find('li[value="' + i.values[0] + '"]').click()
							} else if (i.type == "paintwear") {
								var n = rangeKeyParser.deparse(i.values[0], i.values[1]);
								var r = $("#j_select-specific-paintwear").find('li[value="' + n + '"]');
								if (r.length > 0) {
									r.click()
								} else {
									x({
										event: "custom_paintwear_confirm",
										data: {
											custom_painwear_val: n
										}
									})
								}
							}
						}
						f = t
					} catch (e) {
						f = t;
						throw e
					}
					_.specific = null
				}
				if (_.source === s) {
					$("#j_popup_supply #j_select-unlock_style").addClass("w-Select--disable");
					$("#j_popup_supply #j_select-specific-paintwear").addClass("w-Select--disable")
				}
				P(_.goods_id);
				assetTagFilter().init_float_range_filter({
					container: "j_select-specific-paintwear",
					data: {
						paintwear_choices: e.data.goods_info.specific_paintwear_buying_choices || []
					},
					precision: 2,
					custom_min_placeholder: e.data.paintwear_range[0],
					custom_max_placeholder: e.data.paintwear_range[1],
					popup_callback: x,
					allow_empty: false
				});
				if (_.price && _.num) {
					$("#j_popup_supply input[name=price]").trigger("input")
				}
			},
			error: function (e) {
				Buff.toast(e, {
					type: "error"
				})
			}
		})
	};
	var T = function () {
		sendRequest("/account/api/user/info/v2?meta_list=buy_order_state", {
			dataType: "json",
			method: "GET",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				if (g.is_partner_appid) {
					if (e.data.user_info.partner_role_info && e.data.user_info.partner_role_info[g.game]) {
						C()
					} else {
						userProfile().initBindBadlanders();
						Popup.show("j_popup_g101_bind")
					}
					return
				}
				if (e.data.user_info.steamid) {
					if (e.data.user_info.trade_url) {
						C()
					} else {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("you_have_yet_to_bind"),
							hideCancel: true,
							success: function () {
								window.open("/user-center/profile", "_blank")
							}
						})
					}
				} else {
					Buff.alert({
						title: i18n("unbound_steam"),
						message: i18n("detects_that_you_are_also"),
						hideCancel: true,
						confirmText: i18n("to_bind"),
						success: function () {
							window.open("/user-center/profile", "_blank")
						}
					})
				}
				var t = e.data.meta_list;
				if (t && t.buy_order_state) {
					p = t.buy_order_state
				}
			}
		})
	};
	var P = function (e) {
		if (f === false) {
			return
		}
		var t = h();
		sendRequest("/api/market/buy_order/specific_preview", {
			data: {
				game: c,
				goods_id: e,
				specific: t
			},
			dataType: "json",
			method: "POST",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				$("#j_popup_supply .iconWrapper img").attr("src", e.data.icon_url);
				if (e.data.buy_max_price == "-") {
					$("#j_popup_supply .buy-MaxPrice").text("-");
					$("#j_popup_supply .buy-MaxPrice").siblings(".hide-cny").text("")
				} else {
					$("#j_popup_supply .buy-MaxPrice").text(formatPriceNormalYuan(e.data.buy_max_price));
					$("#j_popup_supply .buy-MaxPrice").siblings(".hide-cny").text("(" + formatPriceNormalCustom(e.data.buy_max_price) + ")")
				}
				if (e.data.sell_min_price == "-") {
					$("#j_popup_supply .sell-MinPrice").text("-");
					$("#j_popup_supply .sell-MinPrice").siblings(".hide-cny").text("")
				} else {
					$("#j_popup_supply .sell-MinPrice").text(formatPriceNormalYuan(e.data.sell_min_price));
					$("#j_popup_supply .sell-MinPrice").siblings(".hide-cny").text("(" + formatPriceNormalCustom(e.data.sell_min_price) + ")")
				}
				if ("buy_min_price_limit" in e.data) {
					var t = $("#j_popup_supply .buyPrice").val();
					if (t && parseFloat(t) < parseFloat(e.data.buy_min_price_limit)) {
						$("#j_popup_supply .buyPrice").val("")
					}
					$("#j_popup_supply .buyPrice").attr("placeholder", i18n("buy_order_min_price", {
						min_price: e.data.buy_min_price_limit
					}))
				}
				var a = $("#j_popup_supply .buy-order-quick-price");
				if (e.data.quick_price && e.data.quick_price !== "0") {
					a.data("quick-price", e.data.quick_price);
					a.removeClass("i_Btn_disabled")
				} else {
					a.data("quick-price", "0");
					a.data("quick-price-text", e.data.quick_price_text || "");
					a.addClass("i_Btn_disabled")
				}
			}
		})
	};
	var B = function () {
		var e = {
			game: c,
			goods_id: _.goods_id,
			price: _.price,
			num: _.num,
			specific: h()
		};
		if (_.source) {
			e.source = _.source
		}
		if (_.old_buy_order_id) {
			e.old_buy_order_id = _.old_buy_order_id
		}
		sendRequest("/api/market/buy_order/create/preview", {
			data: e,
			dataType: "json",
			method: "POST",
			timeout: 1e4,
			success: function (i) {
				if (_.source === s && i.code == "BuyOrder Change Price Cooling Down") {
					Buff.alert({
						title: i18n("prompt"),
						message: i.error,
						cancelText: i18n("termination_buying"),
						confirmText: i18n("i_think_again"),
						cancel: function () {
							v(_.old_buy_order_id, {
								source: _.source,
								early_stop: 0,
								onSuccess: function (e) {
									if (e.code == "OK" && e.data[_.old_buy_order_id]) {
										Buff.toast(i18n("cancel_buying_success"), {
											type: "success"
										})
									}
								}
							})
						},
						success: function () { }
					});
					return
				}
				if (i.code != "OK") {
					Buff.toast(i.error, {
						type: "warning"
					});
					return
				}
				var e = function () {
					_.pay_methods = i.data.pay_methods;
					var e = payMethodPopup();
					var t = j();
					var a = {
						payment_tips: i.data.payment_tips_highlight,
						pay_methods: _.pay_methods,
						price: t,
						onPaymethodChange: function (e, t, a) {
							_.pay_method = e;
							_.free_password = t !== "false";
							_.ejzb_auth = a
						},
						onConfirm: function () {
							Popup.hide();
							if (ejzbAuthVerifyManager().process(_.ejzb_auth, e, a, t)) {
								return
							}
							if (!_.free_password) {
								payPasswordPopup(t, function (e) {
									Popup.hide();
									if (_.source === s) {
										v(_.old_buy_order_id, {
											source: _.source,
											onSuccess: function () {
												y(e)
											}
										})
									} else {
										y(e)
									}
								}, function () {
									Popup.hide();
									e.show(a)
								}).show();
								return
							}
							if (_.source === s) {
								v(_.old_buy_order_id, {
									source: _.source,
									onSuccess: function () {
										y()
									}
								})
							} else {
								y()
							}
						}
					};
					e.show(a)
				};
				if (i.data.pay_confirm) {
					var t = i.data.pay_confirm;
					Buff.alert({
						title: t.title,
						message: t.message,
						cancelText: t.button_cancel,
						confirmText: t.button_noted,
						cancel: function () {
							$("#j_popup_supply .supply-buy-confirm-btn").removeClass("i_Btn_disabled");
							$("#j_popup_supply input[name=price]").focus()
						},
						success: function () {
							e()
						}
					})
				} else {
					e()
				}
			}
		})
	};
	var j = function () {
		return (_.price * _.num).toFixed(2)
	};
	var S = function () {
		if (_.price && _.num) {
			var e = j();
			$("#j_popup_supply .total_amount").html(formatPriceYuan(e));
			$("#j_popup_supply .total_amount_custom").html(formatPriceCustom(e))
		}
	};
	var O = function (t) {
		default_config = {
			onFinishCreateBuying: function (e) { },
			offlineAlert: false
		};
		t = Object.assign(default_config, t);
		m = function (e) {
			if (t.offlineAlert && p == a) {
				Buff.alert({
					title: i18n("buy_order_offline_title"),
					message: i18n("buy_order_offline_message"),
					cancelText: i18n("cancel"),
					confirmText: i18n("go_to_set"),
					success: function () {
						window.open("/market/buy_order/wait_supply?game=" + c);
						Popup.hide();
						t.onFinishCreateBuying(e)
					},
					cancel: function () {
						t.onFinishCreateBuying(e)
					},
					onClose: function () {
						t.onFinishCreateBuying(e)
					}
				})
			} else {
				t.onFinishCreateBuying(e)
			}
		};
		$(document).on("click", ".btn-supply-buy", function (e) {
			e.preventDefault();
			var t = $(this).data("goodsid");
			_ = {
				num: 1
			};
			_.goods_id = t;
			_.specific = $(this).data("specific");
			T()
		});
		$(document).on("click", ".buy-order-change-price", function (e) {
			e.preventDefault();
			specific = $(this).data("specific");
			if (!specific) {
				specific = []
			}
			_ = {
				num: Math.max($(this).data("remain-num"), 1),
				price: $(this).data("price"),
				goods_id: $(this).data("goods-id"),
				specific: specific,
				source: s,
				old_buy_order_id: $(this).data("orderid")
			};
			T()
		});
		$(document).on("change", ".w-Select.specific-buy,.w-Select.specific-paintwear", function () {
			P($(this).data("goodsid"))
		});
		$(document).on("click", "#j_popup_supply .buy-order-quick-price", function (e) {
			quick_price = $(this).data("quick-price");
			if (typeof quick_price == "undefined" || quick_price == "0") {
				Buff.toast($(this).data("quick-price-text") || i18n("no_buy_quick_price"));
				return
			}
			price_input = $("#j_popup_supply input[name=price]");
			price_input.val(quick_price);
			price_input.trigger("input")
		});
		$(document).on("input", "#j_popup_supply input[name=price]", function () {
			if (n) {
				clearTimeout(n)
			}
			$("#j_popup_supply").find("#purchase-price-custom").text("");
			var e = parseFloat($("#j_popup_supply input[name=price]").val());
			if (e < .01) {
				n = setTimeout(function () {
					Buff.toast(i18n("buy_price_cannot_be_less"), {
						type: "error"
					})
				}, 1e3);
				$("#j_popup_supply .supply-buy-confirm-btn").addClass("i_Btn_disabled");
				return
			}
			if (Number.isNaN(e)) {
				$("#j_popup_supply .supply-buy-confirm-btn").addClass("i_Btn_disabled");
				return
			}
			_.price = e;
			$("#j_popup_supply .supply-buy-confirm-btn").removeClass("i_Btn_disabled");
			S();
			$("#j_popup_supply").find("#purchase-price-custom").text(formatPriceNormalCustom(e, true))
		});
		$(document).on("change", "#j_popup_supply .w-Steper", function () {
			var e = parseInt($("#j_popup_supply input[name=num]").val());
			_.num = e;
			S()
		});
		$(document).on("click", "#j_popup_supply .supply-buy-confirm-btn", function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			B()
		})
	};
	var E = function () {
		sendRequest("/account/api/user/info/v2?meta_list=buy_order_state", {
			dataType: "json",
			method: "GET",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				var t = e.data.meta_list;
				if (t && t.buy_order_state) {
					p = t.buy_order_state
				}
			}
		})
	};
	return {
		init: O,
		onFinishCreateBuying: m,
		polling_after_pay: k,
		loadUserInfo: E,
		openPayLink: b
	}
};
var bargain = function () {
	var r = {};
	var e = null;
	var o = 6;
	var i = 7;
	var n = 44;
	var s = 45;
	var c = 49;
	var _ = 50;
	var l;
	var t = function () { };
	var a = function () {
		var e = parseFloat($("#bargain-price").val() || 0);
		$(".bargain-confirm-btn").addClass("i_Btn_disabled");
		$(".total_amount").html(formatPriceYuan(e));
		if (e > 0 && e < r.lowest_bargain_price) {
			Buff.toast(i18n("counteroffer_price_cannot_be_lower"), {
				type: "error"
			});
			return
		}
		if (e > 0 && e >= r.selling_price) {
			Buff.toast(i18n("bargain_price_must_be_lower"), {
				type: "error"
			});
			return
		}
		if (e > 0) {
			$(".bargain-confirm-btn").removeClass("i_Btn_disabled")
		}
		return e
	};
	var u = function () {
		Buff.pricePatten("#bargain-price")
	};
	var d = function () {
		$("#j_popup_pay").remove();
		$("#j_popup_batchbuy").remove();
		$("#j_popup_supply").remove();
		$("#j_popup_bargain").remove();
		var e = template_render("bargain_detail_pat", r);
		$("body").append(e);
		Popup.show("j_popup_bargain");
		u();
		$('#pay_method li[data-selected="true"]').click()
	};
	var p = function (e) {
		sendRequest("/api/market/buyer_bargain/create", {
			method: "POST",
			data: {
				sell_order_id: r.sell_order_id,
				price: $("#bargain-price").val(),
				pay_method: r.pay_method,
				password: e,
				hide_non_epay: payMethodPopup().isNonEpayHidden()
			},
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				Popup.hide();
				if (r.pay_method == o || r.pay_method == n) {
					f(e.data.id, e.data.price, r.pay_method)
				} else {
					m()
				}
			}
		})
	};
	var f = function (e, t, a) {
		if (a == o || a == i) {
			normalBuy(g.user.id).show_wx_pay_qrcode(e, t, "buyer_bargain", v)
		} else if (a == n || a == s) {
			normalBuy(g.user.id).open_epay_pay(e, "buyer_bargain", v)
		} else if (a == c || a == _) {
			normalBuy(g.user.id).open_pay(e, a, "buyer_bargain", v)
		}
	};
	var m = function () {
		if ($(".bargain-confirm-btn").data("mode") == 5) {
			Buff.alert({
				title: i18n("counteroffer_request_has_been_sent"),
				message: i18n("instrongmy_counterofferstrongattention_counteroffer_status_the"),
				hidecancel: true
			})
		} else {
			Buff.toast(i18n("counteroffer_request_has_been_sent"), {
				type: "success"
			})
		}
		t()
	};
	var h = function (e) {
		var t = 0,
			a = 0;
		if (e > 0) {
			t = Math.floor(e / 60);
			a = e % 60
		}
		var i = t + i18n("minutes") + a + i18n("seconds");
		$("#pay-remain-time").text(i)
	};
	var v = function (e, a) {
		var t = 0;
		var i = false;
		var n = function (e) {
			sendRequest("/api/market/buyer_bargain/check_state", {
				data: {
					bargain_id: e
				},
				dataType: "json",
				method: "GET",
				timeout: 2e3,
				showLoading: false,
				showError: false,
				success: function (e) {
					i = true;
					if (e.code != "OK") {
						return
					}
					var t = e.data.state;
					if (t == 7 || t == 6 && e.data.pay_expire_timeout < 0) {
						clearInterval(l);
						l = undefined;
						if (a == o) {
							$("#j_popup_wx").addClass("expired");
							$("#j_popup_wx .popup-cont.paying").hide();
							$("#j_popup_wx .popup-cont.expired").show()
						} else {
							Buff.alert({
								title: i18n("prompt"),
								message: i18n("pay_failed"),
								hideCancel: true,
								success: function () {
									window.location.reload()
								}
							})
						}
					} else if (t == 6) {
						if (a == o) {
							h(e.data.pay_expire_timeout)
						}
					} else {
						clearInterval(l);
						l = undefined;
						Popup.hide();
						m()
					}
				},
				error: function () {
					i = true
				}
			})
		};
		if (a != o) {
			Popup.hide();
			Buff.alert({
				title: i18n("payment"),
				message: i18n("please_wait"),
				hideCancel: true,
				hideConfirm: true
			})
		}
		var r = 300;
		l = setInterval(function () {
			t += 1;
			if (t == 1 || t <= r && i) {
				i = false;
				n(e)
			} else if (t > r) {
				clearInterval(l);
				l = undefined;
				Popup.hide();
				Buff.alert({
					title: i18n("payment"),
					message: i18n("payment_system_is_busy_please"),
					hideCancel: true,
					success: function () {
						window.location.reload()
					}
				})
			}
		}, 1e3)
	};
	var y = function (e) {
		var e = e || {};
		t = e.onFinishCreateBargain || function () { };
		$("body").on("click", ".bargain", function (e) {
			e.stopPropagation();
			$(".floattip").trigger("mouseleave");
			var t = {
				goods: {
					id: $(this).data("goodsid"),
					name: $(this).data("goods-name"),
					icon_url: $(this).data("goods-icon-url")
				},
				price: $(this).data("price"),
				lowest_bargain_price: $(this).data("lowest-bargain-price"),
				sell_order_id: $(this).data("orderid"),
				mode: $(this).data("mode"),
				selling_price: $(this).data("price"),
				asset_info: $(this).data("asset-info")
			};
			r = t;
			d()
		});
		$(document).on("input", "#bargain-price", function () {
			$("#bargain-price-custom").html("");
			$("#j_popup_bargain .bargain-confirm-btn").removeClass("i_Btn_disabled");
			var e = $(this).val();
			if (e) $("#bargain-price-custom").html(formatPriceNormalCustom(e, true))
		});
		$(document).on("change", "#bargain-price", function () {
			a()
		});
		$(document).on("click", "#j_popup_bargain .bargain-confirm-btn", function () {
			if ($(this).hasClass("i_Btn_disabled")) return;
			$(this).addClass("i_Btn_disabled");
			var i = a();
			r.price = i;
			var e = $(this).data("asset-info");
			var n = function () {
				sendRequest("/api/market/buyer_bargain/create/preview", {
					data: {
						sell_order_id: r.sell_order_id,
						price: r.price
					},
					dataType: "json",
					method: "GET",
					success: function (a) {
						if (a.code != "OK") {
							Buff.toast(a.error, {
								type: "warning"
							});
							return
						}
						r.pay_methods = a.data.pay_methods;
						var e = function () {
							var e = payMethodPopup();
							var t = {
								payment_tips: a.data.payment_tips_highlight,
								pay_methods: r.pay_methods,
								price: i,
								onPaymethodChange: function (e, t, a) {
									r.pay_method = e;
									r.free_password = t !== "false";
									r.ejzb_auth = a
								},
								onConfirm: function () {
									Popup.hide();
									if (ejzbAuthVerifyManager().process(r.ejzb_auth, e, t, i)) {
										return
									}
									if (!r.free_password) {
										payPasswordPopup(i, function (e) {
											Popup.hide();
											p(e)
										}, function () {
											Popup.hide();
											e.show(t)
										}).show();
										return
									}
									p()
								}
							};
							e.show(t)
						};
						if (a.data.pay_confirm) {
							Buff.alert({
								title: a.data.pay_confirm.title,
								message: a.data.pay_confirm.message,
								confirmText: a.data.pay_confirm.button_noted,
								cancelText: a.data.pay_confirm.button_cancel,
								success: e
							})
						} else {
							e()
						}
					}
				})
			};
			var t = function () {
				if (localStorage.getItem("remember_dismiss_check_sticker_wear")) {
					return n()
				}
				var e = r.asset_info;
				if (!e || !e.info || !e.info.stickers) {
					return n()
				}
				var t = e.info.stickers;
				var a = false;
				for (var i = 0; i < t.length; i++) {
					if (t[i].wear > 0) {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("check_sticker_wear_in_detail"),
							success: function () {
								localStorage.setItem("remember_dismiss_check_sticker_wear", "1")
							},
							hideCancel: true,
							confirmText: i18n("i_know")
						});
						a = true;
						break
					}
				}
				if (!a) {
					n()
				}
			};
			t()
		})
	};
	return {
		init: y,
		polling_after_pay: v,
		openPayLink: f
	}
};
var internal_name_short_map = {
	csgo: {
		wearcategory0: i18n("wearcategory0_csgo_short"),
		wearcategory1: i18n("wearcategory1_csgo_short"),
		wearcategory2: i18n("wearcategory2_csgo_short"),
		wearcategory3: i18n("wearcategory3_csgo_short"),
		wearcategory4: i18n("wearcategory4_csgo_short"),
		wearcategoryna: i18n("wearcategoryna_csgo_short"),
		ancient: i18n("ancient_csgo_short"),
		ancient_character: i18n("ancient_character_csgo_short"),
		ancient_weapon: i18n("ancient_weapon_csgo_short"),
		common: i18n("common_csgo_short"),
		common_weapon: i18n("common_weapon_csgo_short"),
		contraband: i18n("contraband_csgo_short"),
		legendary: i18n("legendary_csgo_short"),
		legendary_character: i18n("legendary_character_csgo_short"),
		legendary_weapon: i18n("legendary_weapon_csgo_short"),
		mythical: i18n("mythical_csgo_short"),
		mythical_character: i18n("mythical_character_csgo_short"),
		mythical_weapon: i18n("mythical_weapon_csgo_short"),
		rare: i18n("rare_csgo_short"),
		rare_character: i18n("rare_character_csgo_short"),
		rare_weapon: i18n("rare_weapon_csgo_short"),
		uncommon_weapon: i18n("uncommon_weapon_csgo_short"),
		tournament: i18n("tournament_csgo_short"),
		strange: i18n("strange_csgo_short"),
		unusual_strange: i18n("unusual_strange_csgo_short")
	},
	dota2: {}
};
var internal_name_color_map = {
	csgo: {
		wearcategory0: "#58B658",
		wearcategory1: "#529F52",
		wearcategory2: "#F1AD4D",
		wearcategory3: "#C96C69",
		wearcategory4: "#C24B49",
		wearcategoryna: "#E4E8EE",
		contraband: "#e4ae39",
		ancient: "#eb4b4b",
		ancient_weapon: "#eb4b4b",
		ancient_character: "#eb4b4b",
		legendary: "#d32ce6",
		legendary_weapon: "#d32ce6",
		legendary_character: "#d32ce6",
		mythical: "#A676FF",
		mythical_weapon: "#A676FF",
		mythical_character: "#A676FF",
		rare: "#4b69ff",
		rare_weapon: "#4b69ff",
		rare_character: "#4b69ff",
		common: "#b0c3d9",
		common_weapon: "#b0c3d9",
		uncommon_weapon: "#5e98d9",
		normal: "#b2b2b2",
		tournament: "#ffd700",
		strange: "#AE66E0",
		unusual: "#AE66E0",
		unusual_strange: "#AE66E0"
	},
	dota: {}
};
var BargainChatManage = function () {
	var r = 1;
	var o = 1;
	var s = 1;
	var c = 1;
	var l = null;
	var u = 1;
	var d = 1;
	var p = [];
	var f = {};
	var m = {};
	var _ = null;
	var h = null;
	var v = null;
	var y = false;
	var e = function () {
		N();
		var e = getParams();
		_ = e.bargain_chat_id;
		h = e.sell_order_id;
		v = e.goods_id;
		y = ["true", "True"].includes(e.use_reward_point);
		if (_) {
			z("bargain_chat_id")
		}
		a();
		i();
		n();
		w();
		k();
		b();
		I();
		setInterval(L, 10 * 1e3);
		setInterval(R, 15 * 1e3);
		setInterval(function () {
			A(true)
		}, 10 * 1e3);
		C(true);
		t();
		selling().init_change_price({
			on_finish_change_price_callback: function () {
				A()
			}
		})
	};
	var t = function () {
		bg = bargain();
		bg.init({
			onFinishCreateBargain: function () {
				A()
			}
		});
		$(document).on("click", ".show-wx-pay", function (e) {
			e.preventDefault();
			bg.openPayLink($(this).data("orderid"), $(this).data("amount"), $(this).data("pay_method"))
		})
	};
	var a = function () {
		$(".guestbook-col1-wrap").scroll(function () {
			if ($(this).scrollTop() + $(this).innerHeight() >= $(this)[0].scrollHeight) {
				if ($(this).data("type") == "buy" && c > s) {
					s += 1;
					O()
				} else if ($(this).data("type") == "sell" && o > r) {
					r += 1;
					S()
				}
			}
		});
		$("body").on("click", ".guestbook-col1-item", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = "";
			if ($(".guestbook-col1-item.on").length) {
				t = $(".guestbook-col1-item.on").data("item").id
			}
			$(".guestbook-col1-item").removeClass("on");
			$(this).addClass("on");
			var a = $(this).data("item");
			var i = a.id != t;
			q(a.id);
			x(a.id);
			P(a.id, 1, i);
			$(".guestbook-col2-bottom").show()
		});
		$("body").on("click", ".tab_box_item", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("category_id");
			$(".tab_box_item").removeClass("on");
			$(this).addClass("on");
			sendRequest("/api/topic/available_emoji", {
				method: "GET",
				data: {
					page_size: 60,
					sub_category_id: t
				},
				showLoading: true,
				showError: true,
				success: function (e) {
					if (e.code == "OK") {
						var t = e.data.items || [];
						var a = template_render("bargain_chat_emoji_biaoqing_box_pat", {
							items: t
						});
						$("#j_popup-guestbook-biaoqing").find(".biaoqing_box").html(a)
					}
				}
			})
		});
		$("body").on("click", ".biaoqing", function (e) {
			e.preventDefault();
			e.stopPropagation();
			Popup.show("j_popup-guestbook-biaoqing");
			$("#j_popup-guestbook-biaoqing").find(".tab_box_item").first().click();
		});
		$("body").on("click", ".liuyan", function (e) {
			e.preventDefault();
			e.stopPropagation();
			order = $(".bargain_chat_sell_order_info").data("order-info");
			if (!order) {
				var r = "";
				var o = ""
			} else {
				var r = order.lowest_bargain_price;
				var o = order.price
			}
			var t = $(".bargain_chat_list_item.on").data("type");
			if (t == "buy") {
				var a = 1
			} else if (t == "sell") {
				var a = 2
			} else {
				return
			}
			sendRequest("/api/market/bargain_chat/message", {
				method: "GET",
				data: {
					page_size: 120,
					message_type: a
				},
				success: function (e) {
					if (e.code == "OK") {
						var t = e.data.items || [];
						for (let e of t) {
							if (e["text"].includes("[[input_price]]")) {
								e["has_input_price"] = true;
								var a = e["text"].split("[[input_price]]");
								e["first_part_text"] = a[0];
								e["second_part_text"] = a[1]
							} else {
								e["has_input_price"] = false
							}
						}
						var i = "";
						if (r && o) {
							var i = `${r}-${o}`
						}
						var n = template_render("bargain_chat_message_list_pat", {
							items: t,
							input_price_placeholder: i,
							min_input_price: r || "",
							max_input_price: o || ""
						});
						$("#j_popup-guestbook-liuyan").find(".liuyan_list_box").html(n);
						Popup.show("j_popup-guestbook-liuyan")
					}
				}
			})
		});
		$(document).on("click", ".sent_bargain_chat_message", function (e) {
			e.stopPropagation();
			e.preventDefault();
			var t = $(this).data("message_id");
			var a = $(this).data("emoji_url");
			var i = false;
			var n = "/api/market/bargain_chat/send_message";
			if (!l) {
				i = true;
				n = "/api/market/bargain_chat/create"
			}
			var r = {
				bargain_chat_message_id: t,
				emoji_url: a
			};
			if (i) {
				r["sell_order_id"] = h;
				r["use_reward_point"] = y
			} else {
				r["bargain_chat_id"] = l
			}
			var o = $(this).parent().find(".input_price");
			if (o.length) {
				var s = o.val();
				var c = o.data("min_input_price");
				var _ = o.data("max_input_price");
				if (!s) {
					Buff.toast(i18n("please_input_price"), {
						type: "error"
					});
					return
				}
				if (c && parseFloat(c) > parseFloat(s)) {
					Buff.toast(i18n("min_input_price", {
						min_price: `¥${c}`
					}), {
						type: "error"
					});
					return
				}
				if (_ && parseFloat(_) <= parseFloat(s)) {
					if (parseFloat(_) == parseFloat(s)) {
						Buff.toast(i18n("input_price_greater_than_price"));
						return
					}
					Buff.toast(i18n("max_input_price", {
						max_price: `¥${_}`
					}), {
						type: "error"
					});
					return
				}
				if (!/^\d+(\.\d{1,2})?$/.test(s)) {
					Buff.toast(i18n("price_max_float_limit"), {
						type: "error"
					});
					return
				}
				r["input_price"] = s
			}
			sendRequest(n, {
				method: "POST",
				data: r,
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						Popup.hide();
						if (i) {
							location.href = "/market/bargain_chat"
						} else {
							A()
						}
					} else {
						Popup.hide();
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$(document).on("input", ".input_price", function (e) {
			var t = $(this).val();
			var a = $(this).data("min_input_price");
			var i = $(this).data("max_input_price");
			if (t) {
				$(this).siblings("p").find(".format-input-price").text(formatPriceNormalCustom(t, true))
			} else {
				$(this).siblings("p").find(".format-input-price").text("")
			}
			if (parseFloat(t) < parseFloat(a) || parseFloat(t) >= parseFloat(i)) {
				$(this).closest(".liuyan_item_left").siblings("a").addClass("i_Btn_disabled");
				return
			}
			if (t) {
				$(this).closest(".liuyan_item_left").siblings("a").removeClass("i_Btn_disabled")
			} else {
				$(this).closest(".liuyan_item_left").siblings("a").addClass("i_Btn_disabled")
			}
		});
		$(".guestbook-col2-wrap").scroll(function () {
			if ($(this).scrollTop() === 0) {
				if (u >= d) {
					return
				}
				P(l, u + 1, true)
			}
		});
		$(".bargain_chat_list_item").click(function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("type");
			$(this).addClass("on");
			$(this).siblings().removeClass("on");
			if (t == "buy") {
				M();
				$(".bargain_chat_buy_div").show();
				$(".bargain_chat_sell_div").hide();
				s = 1;
				O(true)
			} else {
				M();
				$(".bargain_chat_buy_div").hide();
				$(".bargain_chat_sell_div").show();
				r = 1;
				S(true)
			}
		});
		$(".bargain_chat_list_item").first().click()
	};
	var i = function () {
		$(document).on("click", ".cancel_bargain_btn", function () {
			if ($(this).data("can-cancel-timeout") > 0) {
				Buff.alert({
					title: i18n("temporarily_unable_to_cancel"),
					message: i18n("you_counteroffer_after_1_hour_"),
					hideCancel: true
				});
				return
			}
			var e = $(this).data("bargainid");
			var t = $(this).data("price");
			var a = $(this).data("pay-method");
			Buff.alert({
				title: i18n("to_cancel_a_counteroffer"),
				message: i18n("whether_to_cancel_the_jewelry_") + t + (a == 6 || a == 7 || a == 44 || a == 45 ? i18n("will_be_returned_to_origin") : i18n("will_be_returned_to_you_buff_b")),
				cancelText: i18n("i_think_again"),
				confirmText: i18n("to_cancel_a_counteroffer"),
				success: function () {
					sendRequest("/api/market/buyer_bargain/cancel", {
						data: {
							game: g.game,
							bargain_id: e
						},
						dataType: "json",
						method: "POST",
						success: function (e) {
							if (e.code == "OK") {
								Buff.toast(i18n("to_cancel_the_counteroffer_suc"));
								R()
							} else {
								Buff.toast(e.error)
							}
						}
					})
				}
			})
		})
	};
	var n = function () {
		$(document).on("click", ".reject-bargain-btn", function () {
			var e = $(this).data("bargainid");
			Buff.alert({
				title: i18n("confirm_reject_the_buyers_coun"),
				safeMessage: format_html('<div class="w-Checkbox" value="" id="<%= bargain_id %>-not-allow-bargain"><span value="y"><i class="icon icon_checkbox"></i><%= text %></span></div>', {
					bargain_id: e,
					text: i18n("the_ornaments_no_longer_accept")
				}),
				hide_popup_after_success: false,
				success: function () {
					sendRequest("/api/market/buyer_bargain/reject", {
						data: {
							game: g.game,
							bargain_id: e,
							not_allow_bargain: $("#" + e + "-not-allow-bargain").attr("value")
						},
						dataType: "json",
						method: "POST",
						success: function (e) {
							if (e.code == "OK") {
								Buff.toast(i18n("refused_to_counter-offer_succe"), {
									type: "success"
								});
								Popup.hide();
								R()
							} else {
								Buff.toast(e.error, {
									type: "error"
								})
							}
						}
					})
				}
			})
		})
	};
	var b = function () {
		$(document).on("mouseenter", ".i_Btn_more", function () {
			$(".pop-btn-small").show()
		});
		$(document).on("mouseleave", ".i_Btn_more", function () {
			$(".pop-btn-small").hide()
		});
		$(document).on("mouseenter", ".pop-btn-small", function () {
			$(".pop-btn-small").show()
		});
		$(document).on("mouseleave", ".pop-btn-small", function () {
			$(".pop-btn-small").hide()
		})
	};
	var w = function () {
		$(document).on("click", ".accept-bargain-btn", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("bargainid");
			var a = $(".bargain_chat_sell_order_info").data("order-info");
			var i = true;
			var n = a.mode;
			Buff.alert({
				title: i18n("accept_the_counteroffer"),
				message: i18n("accept_the_counter-offer_the_j"),
				success: function () {
					sendRequest("/api/market/buyer_bargain/accept", {
						data: {
							game: g.game,
							bargain_id: t,
							buyer_auto_accept: i
						},
						dataType: "json",
						method: "POST",
						success: function (e) {
							if (e.code != "OK") {
								Buff.toast(e.error, {
									type: "error"
								});
								return
							}
							if (n == 1 || n == 3) {
								Buff.toast(i18n("sale_success"), {
									type: "success"
								})
							} else if (n == 2) {
								Buff.alert({
									title: i18n("a_counteroffer_has_been_accept"),
									safeMessage: i18n("accept_bargain_notice", {
										count: 12
									}),
									hideCancel: true,
									success: function () { }
								})
							} else if (n == 5) {
								Buff.alert({
									title: i18n("a_counteroffer_has_been_accept"),
									safeMessage: i18n("accept_bargain_plus_notice", {
										count: 12
									}),
									hideCancel: true,
									success: function () { }
								})
							} else if (n == 7) {
								Buff.toast(i18n("a_counteroffer_has_been_accept"), {
									type: "success"
								})
							}
						}
					})
				}
			})
		})
	};
	var k = function () {
		$(document).on("click", ".close_bargain_chat_btn", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("bargain_chat_id");
			Buff.alert({
				title: i18n("prompt"),
				message: i18n("close_chat_tips"),
				success: function () {
					sendRequest("/api/market/bargain_chat/close", {
						method: "POST",
						data: {
							bargain_chat_id: t
						},
						dataType: "json",
						success: function (e) {
							if (e.code == "OK") {
								A()
							} else {
								Buff.toast(e.error, {
									type: "error"
								})
							}
						}
					})
				}
			})
		});
		$(document).on("click", ".forbid_bargain_chat_btn", function (e) {
			e.preventDefault();
			e.stopPropagation();
			Popup.show("j_popup_common_nochat_tips");
			var t = $(this).data("order_id");
			var a = $("#j_popup_common_nochat_tips");
			a.find(".i_Btn_main:not(.i_Btn_disabled)").unbind("click").click(function (e) {
				sendRequest("/api/market/sell_order/allow_bargain_chat/update", {
					method: "POST",
					data: {
						sell_order_id: t,
						allow_bargain_chat: false,
						appid: g.appid
					},
					dataType: "json",
					success: function (e) {
						if (e.code == "OK") {
							Popup.hide();
							A()
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					}
				})
			})
		})
	};
	var x = function (c) {
		sendRequest("/api/market/bargain_chat/full_info", {
			method: "GET",
			data: {
				bargain_chat_id: c
			},
			showLoading: false,
			showError: true,
			success: function (e) {
				if (e.code == "OK") {
					var t = e.data.bargain_chat;
					var a = e.data.sell_order || {};
					var i = e.data.goods_infos[t.goods_id] || {};
					var n = e.data.preview_screenshots || {};
					t["last_reply_time_str"] = j(t.last_reply_time) || "";
					var r = template_render("bargain_chat_detail_header_pat", {
						goods_info: i,
						item: a,
						preview_screenshots: n,
						bargain_chat: t
					});
					var o = template_render("bargain_chat_detail_bottom_pat", {
						sell_order: a,
						bargain_chat: t,
						goods_info: i
					});
					var s = template_render("bargain_chat_single_item_pat", {
						item: t,
						goods_infos: e.data.goods_infos,
						user_infos: e.data.user_infos,
						internal_name_short_map: internal_name_short_map[g.game],
						internal_name_color_map: internal_name_color_map[g.game]
					});
					$(".guestbook-col2-goods-top").html(r);
					$(".guestbook-col2-bottom").html(o);
					$(".guestbook-col2-goods-top").show();
					$(".guestbook-col2-bottom").show();
					if ($(".guestbook-col1-item[data-bargain_chat_id=" + c + "]").length) {
						$(".guestbook-col1-item[data-bargain_chat_id=" + c + "]").data("item", t);
						$(".guestbook-col1-item[data-bargain_chat_id=" + c + "]").html(s)
					}
				} else {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			}
		})
	};
	var C = function (e) {
		$("span.count-down-event").each(function () {
			var e = $(this).data("expire");
			$(this).data("expire", e - 1);
			var e = parseInt(e);
			var t = $(this).data("expire_text");
			var a = $(this).data("show_element");
			if (e > 0) {
				t = convertTime(e);
				$(this).html(t)
			} else if (t) {
				$(this).parent().html(t)
			} else if (a) {
				$(this).siblings("." + a).show();
				$(this).hide()
			}
		});
		if (e == true) setTimeout(function () {
			C(true)
		}, 1e3)
	};
	var T = function (t) {
		var a = [];
		var i = [];
		for (let e of t) {
			if (!i.includes(e.id)) {
				i.push(e.id);
				a.push(e)
			}
		}
		a.sort(function (e, t) {
			return e.created_at - t.created_at
		});
		return a
	};
	var P = function (s, c, _, l) {
		if (!c) {
			c = 1
		}
		if (l === undefined) {
			l = false
		}
		if (_ === undefined || l) {
			_ = false
		}
		sendRequest("/api/market/bargain_chat/detail", {
			method: "GET",
			data: {
				bargain_chat_id: s,
				page_num: c,
				page_size: 24
			},
			showLoading: false,
			showError: true,
			success: function (e) {
				if (e.code == "OK") {
					var t = e.data.close_text;
					var a = (e.data.items || []).reverse();
					var i = e.data.user_infos;
					d = e.data.total_page;
					if (!l) {
						u = c
					}
					if (p.length) {
						p = a.concat(p)
					} else {
						p.push(...a)
					}
					p = T(p);
					f = $.extend({}, f, i);
					if (c == 1 && p.length) {
						if (m[s] == p[p.length - 1].id) {
							var n = false
						} else {
							var n = true;
							m[s] = p[p.length - 1].id
						}
					} else {
						if (p.length) {
							m[s] = p[p.length - 1].id
						}
						var n = true
					}
					if (n || _) {
						var r = {
							close_text: t,
							items: p,
							user_infos: f
						};
						var o = c == 1;
						F(r, o)
					} else {
						B(p)
					}
				}
			}
		})
	};
	var B = function (t) {
		for (let e of t) {
			if ($(".isread[data-detail_id=" + e.id + "]").length) {
				if (e.has_read) {
					$(".isread[data-detail_id=" + e.id + "]").find("i").addClass("icon_bargaining_message_isread");
					$(".isread[data-detail_id=" + e.id + "]").find("i").removeClass("icon_bargaining_message_noread")
				} else {
					$(".isread[data-detail_id=" + e.id + "]").find("i").removeClass("icon_bargaining_message_isread");
					$(".isread[data-detail_id=" + e.id + "]").find("i").addClass("icon_bargaining_message_noread")
				}
			}
		}
	};
	var F = function (e, t) {
		var a = template_render("bargain_chat_detail_message_pat", e);
		$(".guestbook-col2-wrap").html(a);
		initLocalTimeDisplay($(".guestbook-col2-wrap"));
		var i = e["items"];
		if (i.length && Date.now() / 1e3 - i[i.length - 1].created_at >= 30 * 60) {
			var a = $(".guestbook-message-list").html();
			a += '<li><p class="tips">' + i18n("no_message_tips") + "</p></li>";
			$(".guestbook-message-list").html(a)
		}
		if (t) {
			setTimeout(function () {
				let e = document.getElementById("guestbook-col2-wrap");
				e.scrollTop = e.scrollHeight - e.clientHeight
			}, 200)
		}
	};
	var j = function (e) {
		var t = new Date;
		var a = Math.floor(t.getTime() / 1e3);
		var i = a - e;
		var n = Math.floor(i / 60) || 1;
		var r = Math.floor(i / 3600);
		if (r) {
			last_reply_time_str = `${r}小时前`
		} else {
			last_reply_time_str = `${n}分钟前`
		}
		return last_reply_time_str
	};
	var S = function (n) {
		sendRequest("/api/market/bargain_chat/received", {
			method: "GET",
			data: {
				appid: g.appid,
				page_num: r,
				page_size: 60
			},
			dataType: "json",
			showLoading: true,
			success: function (e) {
				if (e.code == "OK") {
					o = e.data.total_page;
					var t = e.data.items || [];
					for (let e of t) {
						if (e.last_reply_time) {
							e["last_reply_time_str"] = j(e.last_reply_time) || ""
						}
					}
					if (!t.length) {
						$(".guestbook-col2").css("background", "white")
					} else {
						$(".guestbook-col2").css("background", "")
					}
					var a = template_render("bargain_chat_list_pat", {
						items: t,
						goods_infos: e.data.goods_infos,
						user_infos: e.data.user_infos,
						internal_name_short_map: internal_name_short_map[g.game],
						internal_name_color_map: internal_name_color_map[g.game],
						is_first_page: r == 1,
						chat_type: "sell"
					});
					if (r == 1) {
						$(".bargain_chat_sell_div").html(a)
					} else {
						var i = $(".bargain_chat_sell_div").find("ul").html() + a;
						$(".bargain_chat_sell_div").find("ul").html(i)
					}
					if (n) {
						setTimeout(function () {
							$(".bargain_chat_sell_div").find(".guestbook-col1-item").first().click()
						}, 200)
					}
				} else {
					Buff.toast(i18n("the_system_is_busyplease_try"));
					return
				}
			}
		})
	};
	var O = function (n) {
		sendRequest("/api/market/bargain_chat/sent", {
			method: "GET",
			data: {
				appid: g.appid,
				page_num: s,
				page_size: 60
			},
			dataType: "json",
			showLoading: true,
			success: function (e) {
				if (e.code == "OK") {
					c = e.data.total_page;
					var t = e.data.items || [];
					for (let e of t) {
						if (e.last_reply_time) {
							e["last_reply_time_str"] = j(e.last_reply_time) || ""
						}
					}
					if (!t.length && !h) {
						$(".guestbook-col2").css("background", "white")
					} else {
						$(".guestbook-col2").css("background", "")
					}
					var a = template_render("bargain_chat_list_pat", {
						items: t,
						goods_infos: e.data.goods_infos,
						user_infos: e.data.user_infos,
						internal_name_short_map: internal_name_short_map[g.game],
						internal_name_color_map: internal_name_color_map[g.game],
						is_first_page: s == 1,
						chat_type: "buy"
					});
					if (s == 1) {
						$(".bargain_chat_buy_div").html(a)
					} else {
						var i = $(".bargain_chat_buy_div").find("ul").html() + a;
						$(".bargain_chat_buy_div").find("ul").html(i)
					}
					if (_) {
						setTimeout(function () {
							if ($(".guestbook-col1-item[data-bargain_chat_id=" + _ + "]").length) {
								$(".guestbook-col1-item[data-bargain_chat_id=" + _ + "]").click()
							}
						}, 200)
					} else if (n && !h) {
						setTimeout(function () {
							$(".bargain_chat_buy_div").find(".guestbook-col1-item").first().click()
						}, 200)
					} else if (h) {
						I()
					}
				} else {
					Buff.toast(i18n("the_system_is_busyplease_try"));
					return
				}
			}
		})
	};
	var L = function () {
		sendRequest("/api/message/notification", {
			method: "GET",
			showLoading: false,
			showError: false,
			success: function (n) {
				$(".bargain_chat_list_item").each(function () {
					var e = $(this).data("type");
					var t = {
						buy: "unread_buy_bargain_chat_message",
						sell: "unread_sell_bargain_chat_message"
					};
					if (n.code == "OK") {
						var a = n.data[t[e]] || {};
						var i = a[g.game] || 0;
						if (i) {
							$(this).find(".tag_status").text(i);
							$(this).find(".tag_status").show()
						} else {
							$(this).find(".tag_status").hide()
						}
					}
				})
			}
		})
	};
	var N = function () {
		sendRequest("/api/topic/available_emoji_category", {
			method: "GET",
			data: {
				mode: 3,
				page_num: 1,
				page_size: 60
			},
			showLoading: false,
			showError: true,
			success: function (e) {
				if (e.code == "OK") {
					var t = e.data.items || [];
					var a = template_render("bargain_chat_emoji_tab_box_item_pat", {
						items: t
					});
					$("#j_popup-guestbook-biaoqing").find(".tab_box").html(a)
				}
			}
		})
	};
	var E = function (e, t) {
		if (t) {
			var a = i18n("allow_chat_tips")
		} else {
			var a = i18n("forbid_chat_tips")
		}
		Buff.alert({
			title: i18n("prompt"),
			message: a,
			success: function () {
				sendRequest("/api/market/sell_order/allow_bargain_chat/update", {
					method: "POST",
					data: {
						sell_order_id: e,
						allow_bargain_chat: t,
						appid: g.appid
					},
					dataType: "json",
					success: function (e) {
						if (e.code == "OK") {
							if ($(".guestbook_wrap").length || $(".user-guestbook").length) {
								setTimeout(A, 200)
							}
							if (!t) {
								Buff.toast(i18n("clost_chat_toast"), {
									type: "success"
								});
								$("#j_bargaining_message_close").hide();
								$("#j_bargaining_message").show()
							} else {
								Buff.toast(i18n("allow_chat_toast"), {
									type: "success"
								});
								$("#j_bargaining_message_close").show();
								$("#j_bargaining_message").hide()
							}
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					}
				})
			}
		})
	};
	var D = function () {
		$(document).off("click", ".create-bargain-chat-btn");
		$(document).off("click", "#j_bargaining_message_close");
		$(document).off("click", "#j_bargaining_message");
		$("body").on("click", ".create-bargain-chat-btn", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("goodsid");
			var a = $(this).data("orderid");
			sendRequest("/api/market/bargain_chat/create/preview", {
				data: {
					sell_order_id: a
				},
				dataType: "json",
				method: "GET",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					} else if (e.data.show_alert && e.data.points) {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("free_bargain_chat_count_used_out", {
								points_count: e.data.points
							}),
							success: function () {
								window.open(`/market/bargain_chat?goods_id=${t}&sell_order_id=${a}&use_reward_point=true`, "_blank")
							}
						})
					} else if (e.data.bargain_chat_id) {
						window.open(`/market/bargain_chat?bargain_chat_id=${e.data.bargain_chat_id}`, "_blank")
					} else {
						window.open(`/market/bargain_chat?goods_id=${t}&sell_order_id=${a}`, "_blank")
					}
				},
				error: function () {
					$("#loading-cover").hide();
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("the_system_is_busyplease_try"),
						hideCancel: true,
						success: function () { }
					})
				}
			})
		});
		$(document).on("click", "#j_bargaining_message_close", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("order_id");
			E(t, false)
		});
		$(document).on("click", "#j_bargaining_message", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("order_id");
			E(t, true)
		})
	};
	var q = function (e) {
		l = e;
		p = [];
		u = 1;
		d = 1
	};
	var R = function () {
		var e = [];
		$(".guestbook-col2-wrap").find(".card_box").each(function () {
			if ($(this).data("buyer_bargain_id")) {
				e.push($(this).data("buyer_bargain_id"))
			}
		});
		if (e.length) {
			sendRequest("/api/market/buyer_bargain/info", {
				method: "GET",
				data: {
					bargain_ids: e.join()
				},
				showLoading: false,
				showError: false,
				success: function (e) {
					if (e.code == "OK") {
						var a = e.data.items || [];
						for (let t of a) {
							if ($(".card_box[data-buyer_bargain_id=" + t.id + "]").length) {
								let e = template_render("buyer_bargain_card_box_pat", {
									buyer_bargain: t
								});
								$(".card_box[data-buyer_bargain_id=" + t.id + "]").html(e)
							}
						}
					}
				}
			})
		}
	};
	var A = function (e) {
		var t = $(".guestbook-col1-item.on");
		if (t.length) {
			var a = t.data("item");
			if (!e) {
				q(a.id)
			}
			P(a.id, 1, true, e);
			x(a.id);
			$(".guestbook-col2-bottom").show()
		}
	};
	var I = function () {
		if (!h) {
			return
		}
		sendRequest("/api/market/goods/sell_order", {
			method: "GET",
			data: {
				order_ids: h,
				appid: g.appid,
				goods_id: v
			},
			success: function (e) {
				if (e.code == "OK") {
					var t = e.data.items || [];
					if (t.length) {
						var a = t[0];
						var i = e.data.goods_infos[v] || {};
						var n = e.data.preview_screenshots || {};
						var r = template_render("bargain_chat_detail_header_pat", {
							goods_info: i,
							item: a,
							preview_screenshots: n,
							bargain_chat: {}
						});
						var o = template_render("bargain_chat_detail_bottom_pat", {
							sell_order: a,
							bargain_chat: {},
							goods_info: i
						});
						$(".guestbook-col2-goods-top").html(r);
						$(".guestbook-col2-bottom").html(o);
						$(".guestbook-col2-goods-top").show();
						$(".guestbook-col2-bottom").show()
					}
				} else {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			}
		})
	};
	var z = function (e, t) {
		var a = new RegExp("&?" + e + "=([^&#]*)");
		t = t || document.location.href;
		if (t.match(a)) {
			t = t.replace(a, "")
		}
		if (t.endsWith("?")) {
			t = t.slice(0, t.length - 1)
		}
		window.history.replaceState({}, 0, t)
	};
	var M = function () {
		$(".guestbook-col1-item").removeClass("on");
		$(".guestbook-col2-goods-top").html("");
		$(".guestbook-col2-bottom").html("");
		$(".guestbook-col2-goods-top").hide();
		$(".guestbook-col2-bottom").hide();
		$(".guestbook-col2-wrap").html("");
		q()
	};
	return {
		init: e,
		delegate_event: D
	}
};
var payMethodPopup = function () {
	"use strict";
	var e, o = function () { },
		s = function () { },
		c = function () { },
		_ = function () { },
		l = function () {
			$("#j_popup_epay .pay-method-list li").each(function () {
				var a = $(this).find("p[description_url]");
				if (a.length == 0) return true;
				var e = a.attr("description_url");
				var i = a.attr("description");
				sendRequest(e, {
					method: "GET",
					data: {
						hide_non_epay: r()
					},
					showLoading: false,
					success: function (t) {
						if (t.code == "OK") {
							if (t.data["description"]) {
								i = t.data["description"];
								if (t.data["available_coupons"].length > 0) {
									i += '<a class="a_Black" href="javascript:;" id="paymethod_epay_description_more">' + i18n("paymethod_description_more") + "</a>";
									$(document).off("click", "#paymethod_epay_description_more");
									$(document).on("click", "#paymethod_epay_description_more", function (e) {
										CommonPopup.showEpayBankCoupons(t.data["available_coupons"]);
										return false
									})
								}
								var e = t.data["description_color"];
								if (e) {
									a.removeClass("c_Gray");
									a.css("color", e)
								}
							}
						}
						a.html(i)
					}
				});
				return true
			})
		},
		t = function (e) {
			var t = e.payment_tips || "";
			var a = e.pay_methods || [];
			var i = e.price || "0";
			var n = e.pay_content || "";
			o = e.onPaymethodChange || function () { };
			s = e.onPayContentChange || function () { };
			c = e.onConfirm || function () { };
			_ = e.onClose || function () { };
			$("#j_popup_epay").remove();
			$("body").append($(template_render("pay_popup_confirm", {
				payment_tips: t,
				pay_methods: a,
				price: i,
				pay_content: n
			})));
			Popup.show("j_popup_epay");
			l();
			$("#j_popup_epay .pay-item.on").click();
			var r = $("#ul-container ul li.on");
			r.click();
			s(r.data("value"), r.data("price-value"))
		},
		n = function (e, t) {
			if (!t) {
				return e
			}
			var a = parseFloat(e) * 100;
			var i = a * parseFloat(t) / 100;
			var n = parseInt(Math.ceil(a + i));
			return n / 100
		},
		a = function () {
			$(document).on("click", "#j_popup_epay .pay-item", function () {
				$("#j_popup_epay .pay-item").removeClass("on");
				$(this).addClass("on");
				var e = $(this).data("method");
				$("#j_popup_epay .pay-btn").text(e.btn_text);
				$("#j_popup_epay .pay-btn").removeClass("error-pay");
				$("#j_popup_epay .pay-btn").removeClass("i_Btn_disabled");
				if (e.error_entry) {
					$("#j_popup_epay .pay-btn").addClass("error-pay");
					$("#j_popup_epay .pay-btn").data("value", e.value);
					$("#j_popup_epay .pay-btn").data("error_entry", JSON.stringify(e.error_entry))
				} else {
					if (e.error) {
						$("#j_popup_epay .pay-btn").addClass("i_Btn_disabled")
					}
					o($(this).data("value"), $(this).attr("data-free_password"), $(this).data("ejzb_auth") || {})
				}
				var t = e.pay_fee_rate;
				var a = $("#ul-container ul li.on").data("price-value");
				var i = n(a, t);
				$("#j_popup_epay .total_price").text(formatPriceNormalYuan(i));
				$("#j_popup_epay .total_price_custom").text(formatPriceNormalCustom(i));
				if ($(this).data("value") == 43) {
					$("#j_popup_epay .scope-count:not(.balance-not-frozen)").hide();
					$("#j_popup_epay .scope-count.balance-not-frozen").show()
				} else {
					$("#j_popup_epay .scope-count.balance-not-frozen").hide();
					$("#j_popup_epay .scope-count:not(.balance-not-frozen)").show()
				}
			});
			$(document).on("click", "#ul-container ul li", function () {
				$("#ul-container ul li").removeClass("on");
				$(this).addClass("on");
				s($(this).data("value"), $(this).data("price-value"));
				var e = $("#j_popup_epay .pay-item.on").data("method");
				if (!e) {
					console.log("no pay method selected");
					return
				}
				var t = e.pay_fee_rate;
				var a = $(this).data("price-value");
				var i = n(a, t);
				$("#j_popup_epay .total_price").text(formatPriceNormalYuan(i));
				$("#j_popup_epay .total_price_custom").text(formatPriceNormalCustom(i));
				if ($(this).data("value") == 43) {
					$("#j_popup_epay .scope-count:not(.balance-not-frozen)").hide();
					$("#j_popup_epay .scope-count.balance-not-frozen").show()
				} else {
					$("#j_popup_epay .scope-count.balance-not-frozen").hide();
					$("#j_popup_epay .scope-count:not(.balance-not-frozen)").show()
				}
			});
			$(document).on("click", "#j_popup_epay .mix-shift", function (e) {
				e.stopPropagation();
				$("#j_popup_epay .mix-item").show();
				$(this).parent(".mix-item").hide();
				var t = $(this).parent(".mix-item").data("value");
				var a = $(this).parent(".mix-item").attr("data-free_password");
				if ($(this).closest(".pay-item").hasClass("on")) o(t, a);
				$(this).closest(".pay-item").data("value", t)
			});
			$(document).on("click", "#j_popup_epay .first-use-shift", function (e) {
				e.stopPropagation();
				var t = $(this).data("first-use") == "alipay" ? "epay" : "alipay";
				var a = $(this);
				sendRequest("/account/api/prefer/balance_first_use", {
					method: "POST",
					data: {
						balance_first_use: t
					},
					showLoading: false,
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						Buff.toast(i18n("set_success"), {
							type: "success"
						});
						a.parent().get(0).childNodes[0].nodeValue = i18n("first_use_" + t + "_balance");
						a.data("first-use", t)
					}
				})
			});
			$(document).on("click", "#j_popup_epay .pay-btn", function () {
				if ($(this).hasClass("i_Btn_disabled")) {
					return
				}
				if ($(this).hasClass("error-pay")) {
					var e = $(this).data("error_entry");
					if (e) {
						e = JSON.parse(e)
					}
					var t = e.url;
					var a = e.type;
					if (a == "epay_account_bind") {
						sendRequest(t, {
							method: "GET",
							showLoading: false,
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error, {
										type: "error"
									});
									return
								}
								if (!e.data["url"]) {
									Buff.toast("账号正常，请刷新页面重试付款或者联系客服处理");
									return
								}
								window.open(e.data["url"])
							}
						})
					} else if (a == "bind_bank_card") {
						Popup.hide();
						var i = JSON.parse(e.param);
						var n = {
							scene: "cashier",
							amount: i.amount,
							description_url: i.description_url
						};
						bindCard.show_bind_card_popup(null, null, n)
					} else {
						window.open(t)
					}
				} else {
					c()
				}
			});
			$(document).on("click", "#j_popup_epay .popup-close", function () {
				Popup.hide();
				_()
			});
			$(document).on("click", "#j_popup_epay #j_fold-handler", function () {
				$("#j_popup_epay .pay-method-list").css("height", $(this).attr("data-total-height"));
				$(this).parent().remove()
			})
		},
		i = function (e, t) {
			t = $.isEmptyObject(t) ? "" : t;
			var a = "data-" + e;
			$("#j_popup_epay .pay-item").each(function () {
				var e = $(this).attr(a);
				if (typeof e !== "undefined" && e !== false) {
					$(this).attr(a, JSON.stringify(t))
				}
			})
		},
		r = function () {
			var a = false;
			$(".pay-item").each(function (e, t) {
				if ($(t).data("method").collapse) a = true
			});
			return a
		};
	return function () {
		if (!e) {
			a();
			e = {
				show: t,
				update_attr: i,
				isNonEpayHidden: r
			}
		}
		return e
	}
}();
var supplySell = function (e) {
	var o = e;
	var s = g.game;
	var a;
	var c = 50;
	var t;
	var _ = [];
	var n = function (e, t, a) {
		if (g.is_partner_appid) {
			var i = "/api/market/goods/supply/partner";
			var n = false;
			var r = false
		} else {
			var n = $("#j_popup_supply_sell_preview #jNav li.inventory").hasClass("on");
			var r = $(".inventory").hasClass("allow-plus");
			var i = "/api/market/goods/supply";
			if (n) {
				if (r) {
					i = "/api/market/goods/supply/manual_plus"
				} else {
					i = "/api/market/goods/supply/manual"
				}
			}
		}
		sendRequest(i, {
			data: {
				game: s,
				assets: a,
				price: t.price,
				buy_order_id: t.id,
				buyer_auto_accept: t.buyer_auto_accept
			},
			dataType: "json",
			method: "POST",
			timeout: BuffConfig.STEAM_TIMEOUT + 1e3 * a.length,
			success: function (e) {
				Popup.hide();
				if (e.code != "OK") {
					Buff.alert({
						title: i18n("supply_failure"),
						message: e.error,
						hideCancel: true,
						success: function () {
							window.location.reload()
						}
					});
					return
				}
				if (n) {
					if (r) {
						Buff.toast(i18n("please_go_to_buff_the"), {
							type: "success"
						});
						setTimeout(function () {
							window.location.reload()
						}, 3e3)
					} else {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("please_go_to_my_sell"),
							hideCancel: true,
							confirmText: i18n("to_shipping"),
							success: function () {
								window.location.href = "/market/sell_order/to_deliver?game=" + s
							}
						})
					}
				} else {
					Buff.alert({
						title: i18n("supply_success"),
						message: i18n("successful_supply") + a.length + i18n("piece_of_goods"),
						hideCancel: true,
						success: function () {
							window.location.reload()
						}
					})
				}
			}
		})
	};
	var l = function (e, i) {
		$("#j_popup_supply_sell_preview").remove();
		var t = template_render("supply_sell_preview_pat", {
			goods: e,
			buy_order: i
		});
		$("body").append($(t));
		Popup.show("j_popup_supply_sell_preview");
		$("#j_popup_supply_sell_preview .packlist").showLoading();
		$("#j_popup_supply_sell_preview").find("#supply-confirm").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			$(this).addClass("i_Btn_disabled");
			n(e, i, _)
		});
		$("#j_popup_supply_sell_preview #jNav li").click(function () {
			if ($(this).hasClass("on")) return;
			jQuery.xhrPool.abort(a);
			$("#j_popup_supply_sell_preview #jNav li").removeClass("on");
			$(this).addClass("on");
			$("#j_popup_supply_sell_preview .packlist").showLoading();
			$("#j_popup_supply_sell_preview").find("#supply-confirm").addClass("i_Btn_disabled");
			$("#supply_sell_fee").html(formatPriceNormalYuan(0));
			$("#supply_sell_total_price").html(formatPriceYuan(0));
			$("#supply_sell_total_price_custom").html(formatPriceNormalCustom(0));
			$("#supply_sell_reward_points").html(0);
			$("#selected-backpack-num").text(0);
			_ = [];
			r(e, i, $(this).hasClass("inventory"))
		});
		$("#j_popup_supply_sell_preview .refresh-inventory").click(function () {
			$(this).hide();
			$("#j_popup_supply_sell_preview .packlist").showLoading();
			$("#j_popup_supply_sell_preview").find("#supply-confirm").addClass("i_Btn_disabled");
			$("#supply_sell_fee").html(formatPriceNormalYuan(0));
			$("#supply_sell_total_price").html(formatPriceYuan(0));
			$("#supply_sell_total_price_custom").html(formatPriceNormalCustom(0));
			$("#supply_sell_reward_points").html(0);
			$("#selected-backpack-num").text(0);
			_ = [];
			r(e, i, true, 1)
		});
		$("#j_popup_supply_sell_preview #supply_all").change(function () {
			if (!$(this).attr("value")) {
				var e = "#j_popup_supply_sell_preview .packcard li.on, #j_popup_supply_sell_preview .card_csgo li.on";
				$(e).each(function (e, t) {
					$(t).trigger("click")
				});
				return
			}
			var t = _.length;
			var a = Math.min(i.remain_num, c) - t;
			var e = "#j_popup_supply_sell_preview .packcard li:not(.on), #j_popup_supply_sell_preview .card_csgo li:not(.on)";
			$(e).splice(0, a).forEach(function (e) {
				$(e).trigger("click")
			})
		});
		_ = [];
		r(e, i, $("#j_popup_supply_sell_preview #jNav li.inventory").hasClass("on"))
	};
	var r = function (n, r, o, e) {
		if (g.is_partner_appid) {
			var t = "/api/market/goods/supply/preview/partner/v2"
		} else {
			var t = o ? "/api/market/goods/supply/preview/manual/v2" : "/api/market/goods/supply/preview/v2"
		}
		a = t;
		sendRequest(t, {
			data: {
				buy_order_id: r.id,
				game: s,
				force_update: e
			},
			dataType: "json",
			showLoading: false,
			timeout: BuffConfig.STEAM_TIMEOUT,
			method: "GET",
			success: function (a) {
				var e = "";
				if (a.code != "OK") {
					Buff.toast(a.error, {
						type: "error"
					});
					e = template_render("supply_sell_preview_list_pat", {
						error: a.error
					})
				} else {
					e = template_render("supply_sell_preview_list_pat", {
						backpacks: a.data.items,
						matched_assetids: a.data.matched_assetids,
						goods: n,
						buy_order: r,
						manual: o,
						preview_screenshots: a.data.preview_screenshots || {}
					});
					$("#total-backpack-num").text(a.data.items.length);
					if (o && a.data.allow_plus) {
						$(".inventory").addClass("allow-plus")
					} else {
						$(".inventory").removeClass("allow-plus")
					}
				}
				$("#j_popup_supply_sell_preview .packlist").html(e);
				var i = function (e) {
					switch (e) {
						case "off":
							Buff.setCompValue("supply_all", "");
							$("#supply_all span").removeClass("on");
							break;
						case "on":
							Buff.setCompValue("supply_all", $("#supply_all span").attr("value"));
							$("#supply_all span").addClass("on");
							break
					}
				};
				i("off");
				var t = "#j_popup_supply_sell_preview .packcard li:not(.disabled), #j_popup_supply_sell_preview .card_csgo li:not(.disabled)";
				$(document).off("click", t).on("click", t, function () {
					var e = {
						game: $(this).attr("data-game"),
						contextid: $(this).attr("data-contextid"),
						assetid: $(this).attr("data-assetid"),
						classid: $(this).attr("data-classid"),
						instanceid: $(this).attr("data-instanceid"),
						market_hash_name: $(this).attr("data-market-hash-name")
					};
					if ($(this).hasClass("on")) {
						$(this).removeClass("on");
						var t = 0;
						for (; t < _.length; t++) {
							if (_[t].contextid === e.contextid && _[t].assetid === e.assetid && _[t].classid === e.classid && _[t].instanceid === e.instanceid) {
								break
							}
						}
						if (t < _.length) {
							_.splice(t, 1)
						}
					} else {
						if (_.length >= r.remain_num) return;
						if (_.length >= c) {
							Buff.toast(i18n("supply_max_limit"), {
								type: "warning"
							});
							return
						}
						$(this).addClass("on");
						_.push(e)
					}
					$("#selected-backpack-num").text(_.length);
					if (_.length > 0) {
						$("#j_popup_supply_sell_preview").find("#supply-confirm").removeClass("i_Btn_disabled")
					} else {
						$("#j_popup_supply_sell_preview").find("#supply-confirm").addClass("i_Btn_disabled")
					}
					if (_.length >= Math.min(c, r.remain_num) || _.length >= a.data.matched_assetids.length) {
						$("#j_popup_supply_sell_preview").find(".packcard li,.card_csgo li").each(function () {
							if (!$(this).hasClass("on")) {
								$(this).find(".mask").css("display", "block")
							} else {
								$(this).find(".mask").hide()
							}
						});
						i("on")
					} else {
						$("#j_popup_supply_sell_preview").find(".mask").hide();
						i("off")
					}
					$("#supply_sell_fee").html(formatPriceNormalYuan(_.length * a.data.fee));
					$("#supply_sell_total_price").html(formatPriceYuan(_.length * (r.price - a.data.fee)));
					$("#supply_sell_total_price_custom").html(formatPriceNormalCustom(_.length * (r.price - a.data.fee)));
					$("#supply_sell_reward_points").html(_.length * a.data.single_reward_points)
				});
				if (o) {
					$("#j_popup_supply_sell_preview").find(".refresh-inventory").show()
				} else {
					$("#j_popup_supply_sell_preview").find(".refresh-inventory").hide()
				}
			}
		})
	};
	var i = function () {
		$(document).on("click", ".btn-supply-sell", function (e) {
			e.preventDefault();
			var t = $(this).data("buyerid");
			var a = $(this).data("orderid");
			var i = {
				icon_url: $(this).data("goods-icon-url"),
				name: $(this).data("goods-name"),
				sell_min_price: $(this).data("goods-sell-min-price"),
				market_hash_name: $(this).data("goods-market-hash-name"),
				rarity: $(this).data("goods-rarity"),
				can_inspect: $(this).data("can-inspect"),
				can_3d_inspect: $(this).data("can-3d-inspect")
			};
			var n = $(this).data("price");
			if (t == o) {
				Buff.toast(i18n("can_not_supply_your_own"), {
					type: "warning"
				});
				return
			}
			var r = {
				id: a,
				user_id: t,
				remain_num: $(this).data("remain-num"),
				price: n,
				specific: $(this).data("specific"),
				buyer_auto_accept: $(this).data("buyer-auto-accept")
			};
			l(i, r)
		})
	};
	return {
		init: i
	}
};
var TAG_NAME_PREFIX = "custom_";
var TAG_NAME_STICKER = "sticker";
var TAG_NAME_PATCH = "patch";
var DEFAULT_EXTRA_TAG_TYPE = TAG_NAME_STICKER;
var updateExtraTagIdsItem = function (e, t, a, i) {
	$(e + " li").removeClass("on");
	$(e).attr("value", t);
	var n = t;
	if (["", "empty", "non_empty"].indexOf(n) == -1) {
		n = a || getParamsFromHash().extra_tag_type || TAG_NAME_PREFIX + DEFAULT_EXTRA_TAG_TYPE
	}
	if (n == TAG_NAME_PREFIX + TAG_NAME_STICKER) {
		$(e).attr("wearless_sticker", i)
	}
	var r = $(e + ' li[value="' + n + '"]');
	r.addClass("on");
	$(e).find("h3").text(r.text())
};
var customStickerPatchFactory = function () {
	var n = {
		last_extra_tag_ids: "",
		last_extra_tag_type: "",
		wearless_sticker: null
	};
	var e = market();
	e.init(function (e) {
		if (!e) {
			n.last_extra_tag_type = "";
			n.last_extra_tag_ids = "";
			n.wearless_sticker = null
		} else {
			n.last_extra_tag_type = e.extra_tag_type;
			n.last_extra_tag_ids = e.extra_tag_ids;
			n.wearless_sticker = e.wearless_sticker
		}
	});
	var r = ".criteria .w-Select[name=extra_tag_ids]";
	var t = function (e) {
		var t = e.data.original ? TAG_NAME_PREFIX + e.data.original : "";
		var a = e.data.extra_tag_ids_val;
		var i = e.data.wearless_sticker;
		switch (e.event) {
			case "custom_sticker_confirm":
				updateExtraTagIdsItem(r, a, t, i);
				n.last_extra_tag_ids = a;
				n.last_extra_tag_type = t;
				n.wearless_sticker = i;
				$(r).trigger("change", {
					original: "manual",
					extra_tag_type: t,
					extra_tag_ids: a,
					wearless_sticker: i
				});
				break;
			case "custom_sticker_cancel":
				updateExtraTagIdsItem(r, n.last_extra_tag_ids, n.last_extra_tag_type, n.wearless_sticker);
				break;
			default:
				break
		}
	};
	var a = function () {
		var e = {};
		if (n.last_extra_tag_ids && n.last_extra_tag_type) {
			e[n.last_extra_tag_type] = n.last_extra_tag_ids;
			if (n.last_extra_tag_type == TAG_NAME_PREFIX + TAG_NAME_STICKER) {
				e.wearless_sticker = n.wearless_sticker
			}
		}
		custom_sticker("popup_custom_sticker", "sticker").init($(r), t, false, e[TAG_NAME_PREFIX + TAG_NAME_STICKER]);
		custom_sticker("popup_custom_patch", "patch").init($(r), t, false, e[TAG_NAME_PREFIX + TAG_NAME_PATCH])
	};
	return {
		init: a
	}
};
var custom_sticker = function (y, b) {
	if (!y) y = "popup_custom_sticker";
	if (!b) b = TAG_NAME_STICKER;
	var r = null;
	var s = false;
	var e = null;
	var w = null;
	var k = "#" + y + " #custom_sticker_use_suggestion";
	var x = true;
	var _ = function (e, t) {
		var a = {};
		if (e) {
			a["category"] = e;
			a["add_category_tag"] = s
		}
		if (C()) {
			a = {
				tag_name: TAG_NAME_PATCH
			}
		}
		if (t) {
			a["search"] = t
		}
		return a
	};
	var C = function () {
		return b == TAG_NAME_PATCH ? true : false
	};
	var T = function () {
		return b == TAG_NAME_STICKER ? true : false
	};
	var l = function (i, n) {
		clearTimeout(e);
		e = setTimeout(function () {
			var e = "/api/market/order_tags";
			var t = {
				page_num: n || 1,
				game: "csgo",
				page_size: 20,
				use_suggestion: $(k).val(),
				category: b
			};
			for (var a in i) {
				t[a] = i[a]
			}
			if ($(k).attr("tag_ids")) {
				t["tag_ids"] = $(k).attr("tag_ids")
			}
			w = i["search"];
			sendRequest(e, {
				method: "GET",
				data: t,
				dataType: "json",
				showLoading: true,
				async: false,
				success: function (e) {
					var t = "";
					var a = "#" + y + " #popup_order_tags_list";
					$(a).showLoading();
					if (e.code == "OK") {
						$("#" + y + " #stickers_list_pager").remove();
						$(a).removeLoading();
						t = template_render("sticks_list_pat", e.data);
						$(a).html(t);
						$("#" + y + " #popup_flower-con").scrollTop(0);
						if (e.data.total_page > 1) {
							$(a).append('<div class="pager" id="stickers_list_pager"></div><div class="blank20"></div>');
							renderPagination({
								pager_name: "#" + y + " #stickers_list_pager",
								total_count: e.data.total_count,
								page_size: e.data.page_size,
								page_num: n,
								displayed_pages: 3,
								onPageClick: function (e, t) {
									t.preventDefault();
									t.stopPropagation();
									l(i, e)
								}
							})
						}
					} else {
						$(a).removeLoading();
						$(a).html(t);
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		}, 200)
	};
	var P = function () {
		var e = $("#" + y + " #search_input").val();
		if (e) {
			l(_("", e));
			$("#" + y + " #popup_flower-aside-con").find("li.sticker_item").css("background", "")
		}
	};

	function u(e, t) {
		var a = 300;
		if (a) {
			var i = t.getBoundingClientRect();
			if (e.nodeType === 1) {
				e = e.getBoundingClientRect()
			}
			n(t, "transition", "none");
			n(t, "transform", "translate3d(" + (e.left - i.left) + "px," + (e.top - i.top) + "px,0)");
			t.offsetWidth;
			n(t, "transition", "all " + a + "ms");
			n(t, "transform", "translate3d(0,0,0)");
			clearTimeout(t.animated);
			t.animated = setTimeout(function () {
				n(t, "transition", "");
				n(t, "transform", "");
				t.animated = false
			}, a)
		}
	}

	function n(e, t, a) {
		var i = e && e.style;
		if (i) {
			if (a === void 0) {
				if (document.defaultView && document.defaultView.getComputedStyle) {
					a = document.defaultView.getComputedStyle(e, "")
				} else if (e.currentStyle) {
					a = e.currentStyle
				}
				return t === void 0 ? a : a[t]
			} else {
				if (!(t in i)) {
					t = "-webkit-" + t
				}
				i[t] = a + (typeof a === "string" ? "" : "px")
			}
		}
	}
	var d = function (e, t) {
		if ($("#" + y + " #search_input").val()) {
			P()
		} else {
			var a = function (e) {
				var t = e.split(",");
				var a = [];
				var i = {};
				var n = /slot_(\d)_/;
				for (var r in t) {
					var o = t[r];
					var s = o.match(n);
					if (s) {
						i[s[1]] = o.replace(s[0], "")
					} else {
						a.push({
							slot_index: r,
							tag_id: o
						})
					}
				}
				if (a.length) {
					return a
				}
				for (var r = 0; r < 4; r++) {
					var o = i[r.toString()];
					if (o) {
						a.push({
							slot_index: r,
							tag_id: o
						})
					}
				}
				return a
			};
			var i = O();
			var n = !i && x;
			var r = getParamsFromHash().extra_tag_ids;
			var o = getParamsFromHash().extra_tag_type || TAG_NAME_PREFIX + b;
			var s = getParamsFromHash().wearless_sticker || "";
			var c = Boolean(i && r && i != r || !i && r || i && !r);
			var _ = Boolean(S() != s);
			var l = false;
			if (n || c || _) {
				var u = r || e || i;
				x = false;
				if (u && !["empty", "non_empty", "squad_combos", "five_combos"].includes(u)) {
					B();
					var d = a(u);
					var p = [];
					d.forEach(function (e) {
						p.push(e.tag_id)
					});
					var f = "/api/market/order_tags";
					var m = {
						game: g.game,
						tag_ids: p.join(",")
					};
					if (C()) {
						m["tag_name"] = TAG_NAME_PATCH
					}
					if (o != TAG_NAME_PREFIX + b) {
						delete m["tag_ids"];
						p = [];
						d = []
					}
					sendRequest(f, {
						method: "GET",
						data: m,
						dataType: "json",
						showLoading: false,
						success: function (e) {
							if (e.code != "OK") {
								Buff.toast(e.error, {
									type: "error"
								});
								return
							}
							var t = e.data.items;
							var a = {};
							for (var i = 0; i < t.length; i++) {
								var n = t[i];
								a[n.id.toString()] = n
							}
							var r = $("#" + y + " #sticker-drag").find("li");
							for (var i = 0; i < d.length; i++) {
								var o = d[i];
								var s = a[o.tag_id];
								var c = r[o.slot_index];
								var _ = $(c).find("div");
								j(_, s.id, s.value, s.icon_url, c)
							}
						}
					})
				}
				$("#" + y + " #popup_flower-aside-con ul li.sticker_item").first().trigger("click")
			} else {
				l = true
			}
		}
		var h = function (e, t) {
			switch (t) {
				case "off":
					Buff.setCompValue(e, "");
					$("#" + e + " span").removeClass("on");
					break;
				case "on":
					Buff.setCompValue(e, $("#" + e + " span").attr("value"));
					$("#" + e + " span").addClass("on");
					break
			}
		};
		if (e && T() && t) {
			$("#" + y + " #confirm").attr("event", "custom_sticker_confirm_jump")
		}
		Popup.show(y);
		var v = l ? {
			extra_tag_ids: O(),
			wearless_sticker: S()
		} : getParamsFromHash();
		if ("extra_tag_ids" in v || "wearless_sticker" in v) {
			h(y + " #sticker_position_checkbox", "off");
			h(y + " #sticker_wearless_checkbox", "off")
		}
		if (v.extra_tag_ids) {
			var u = v.extra_tag_ids;
			if (u.includes("slot_")) {
				$("#" + y + " #sticker_position_checkbox").find("span").trigger("click")
			} else if (T() && ["squad_combos", "five_combos", "non_empty", "empty"].includes(u)) {
				h(y + " #sticker_position_checkbox", "on");
				$("#" + y).find("a[id=reset]").trigger("click")
			}
		}
		v.wearless_sticker == "1" ? h(y + " #sticker_wearless_checkbox", "on") : "";
		setTimeout(function () {
			if ($("#" + y + " .custom_sticker_search_input-result-list").length == 0) {
				$("#" + y + " #custom_sticker_search_input").append('<ul class="custom_sticker_search_input-result-list"></ul>')
			}
			new Autocomplete("#" + y + " #custom_sticker_search_input", {
				search: function (r) {
					return new Promise(function (t, e) {
						var a = r.trim();
						if (a.length < 1) {
							return t([])
						}
						var i = "/api/market/sticker/suggest?";
						var n = {
							text: a,
							game: g.game
						};
						sendRequest(i, {
							method: "GET",
							data: n,
							dataType: "json",
							showLoading: false,
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error, {
										type: "error"
									});
									return
								}
								if (w != a) {
									$(k).val("0");
									$(k).removeAttr("tag_ids")
								}
								if (!e.data || !e.data.suggestions) {
									return t([])
								}
								t(e.data.suggestions)
							}
						})
					})
				},
				getResultValue: function (e) {
					return e.option
				},
				onSubmit: function (e) {
					if (!$.isEmptyObject(e)) {
						$(k).val("1");
						$(k).attr("tag_ids", e.tag_ids)
					}
					$("#" + y + " #search_input").trigger("change")
				}
			})
		}, 1e3)
	};
	var B = function () {
		var a = $("#" + y + " #sticker-drag").find("li");
		a.filter(function (e) {
			var t = a.eq(e);
			if (t.find("img").length) {
				t.find(".icon_delete").trigger("click")
			}
		})
	};
	var j = function (e, t, a, i, n) {
		var r = document.createElement("i");
		r.className = "icon icon_delete";
		var o = e[0];
		$(r).insertBefore(o);
		var s = document.createElement("img");
		s.src = i;
		$(s).attr("id", t);
		$(o).append(s);
		$(o).append(s);
		$(o).append('<span class="scope-copy"><i class="icon2x icon_copy"></i>' + i18n("sticker_copy") + "</span>");
		$(n).attr("data-title", a)
	};
	var p = function () {
		return $("#" + y + " #sticker_position_checkbox").attr("value")
	};
	var S = function () {
		return $("#" + y + " #sticker_wearless_checkbox").attr("value")
	};
	var O = function () {
		var e = p();
		var i = e ? "slot_" : "";
		var n = [];
		$("#" + y + " #sticker-drag").find("li").each(function (e, t) {
			var a = $(t).find("img");
			if (a.length) {
				if (i) {
					n.push(i + e + "_" + $(a[0]).attr("id"))
				} else {
					n.push($(a[0]).attr("id"))
				}
			}
		});
		return n.join(",")
	};
	var t = function (e, t, a, i) {
		r = t || null;
		s = a || false;
		var n = "#custom_" + b;
		e.on("click", n, function () {
			d(getParamsFromHash().extra_tag_ids || i)
		});
		e.attr("dlg_id", y);
		$("#" + y + " #search_btn").click(function () {
			P()
		});
		$("#" + y).on("change", "#search_input", function () {
			P()
		});
		$("#" + y).on("click", "#popup_flower-aside-con ul li.sticker_item", function () {
			$(this).parent().find("li").css("background", "");
			$(this).css("background", "#F8F8F8");
			l(_($(this).attr("value"), ""))
		});
		var o = function (e, t, a) {
			var i = 0;
			if (C()) {
				i = 3
			} else {
				if (p()) {
					i = 4
				} else {
					i = 5
				}
			}
			if ($("#" + y + " #sticker-drag").find("li > div > img").length == i) {
				var n = "no_field_for_more_sticker";
				if (C()) {
					n = "no_field_for_more_patch"
				}
				Buff.toast(i18n(n));
				return
			}
			var r = $("#" + y + " #sticker-drag").find("li");
			for (var o in r) {
				var s = $(r[o]).find("div");
				if (s.length && !$(s).find("img").length) {
					j(s, a, t, e, r[o]);
					break
				}
			}
		};
		$("#" + y).on("click", ".single_sticker_row", function () {
			var e = $(this).attr("icon_url");
			var t = $(this).attr("id");
			var a = $(this).attr("name");
			o(e, a, t)
		});
		$("#" + y).on("change", "#sticker_position_checkbox", function () {
			var e = p();
			if (e) {
				if ($("#" + y + " #sticker-drag").find("li > div > img").length > 4) {
					Buff.setCompValue(y + " #sticker_position_checkbox", "");
					$("#" + y + " #sticker_position_checkbox span").removeClass("on");
					Buff.toast(i18n("up_to_4_fixed_sticker"));
					return
				}
				$("#" + y + " #sticker-drag li:eq(4)").hide();
				$("#" + y + " #sticker-drag").removeClass("disabled");
				$("#" + y + " #sticker-drag").find("li").attr("draggable", true)
			} else {
				$("#" + y + " #sticker-drag").find("li").attr("draggable", false);
				$("#" + y + " #sticker-drag li:eq(4)").show();
				$("#" + y + " #sticker-drag").addClass("disabled");
				var a = $("#" + y + " #sticker-drag").find("li");
				a.filter(function (e) {
					var t = a.eq(e);
					if (!t.find("img").length) {
						t.insertAfter(a.last())
					}
				})
			}
		});
		$("#" + y + " #sticker-drag").on("click", ".icon_delete", function () {
			if ($(this).parent().find("img").length) {
				var e = p();
				if (!e) {
					$(this).parent().parent().append('<li class="jDrag j_tips_handler" draggable="true" data-direction="top"><div></div></li>');
					$(this).parent().remove()
				} else {
					$(this).parent().removeAttr("data-title");
					$(this).parent().find("div").empty();
					$(this).remove()
				}
			}
		});
		var c = null;
		$("#" + y + " #sticker-drag").on("dragstart", "li.jDrag", function (e) {
			if ($(this).attr("draggable") === "false") return;
			c = e.currentTarget;
			$(c).addClass("on")
		});
		$("#" + y + " #sticker-drag").on("dragover", "li.jDrag", function (e) {
			if ($(this).attr("draggable") === "false") return;
			e.preventDefault();
			var t = e.currentTarget;
			if (t !== c) {
				var a = t.getBoundingClientRect();
				var i = c.getBoundingClientRect();
				if (t) {
					if (t.animated) {
						return
					}
				}
				var n = $(t);
				var r = $(c);
				var o = n.index();
				var s = r.index();
				if (s < o) {
					t.parentNode.insertBefore(c, t.nextSibling)
				} else {
					t.parentNode.insertBefore(c, t)
				}
				u(i, c);
				u(a, t);
				$(c).removeClass("on")
			}
		});
		$("#" + y).on("click", "#sticker-drag li div span.scope-copy", function (e) {
			e.preventDefault();
			var t = e.currentTarget;
			var a = $(t).parent().find("img");
			if (!a) {
				return
			}
			var i = a.attr("id");
			var n = a.attr("src");
			var r = $(t).parent().parent().data("title");
			o(n, r, i)
		});
		$("#" + y).on("click", "#reset", function () {
			$("#" + y + " #search_input").val("");
			var e = p();
			if (e) {
				$("#" + y + " #sticker_position_checkbox").find("span").trigger("click")
			}
			var t = S();
			if (t) {
				$("#" + y + " #sticker_wearless_checkbox").find("span").trigger("click")
			}
			B();
			$("#" + y + " #popup_flower-aside-con ul li.sticker_item").first().trigger("click")
		});
		$("#" + y).on("click", "#confirm", function () {
			var e = O();
			var t = S() ? 1 : 0;
			Popup.hide();
			if (r) {
				$("#" + y + " #search_input").val("");
				r({
					event: $(this).attr("event") || "custom_sticker_confirm",
					data: {
						extra_tag_ids_val: e,
						wearless_sticker: t,
						original: b
					}
				})
			}
		});
		$("#" + y).on("click", "#cancel", function () {
			Popup.hide();
			if (r) {
				r({
					event: "custom_sticker_cancel",
					data: {
						extra_tag_ids_val: "",
						original: b
					}
				})
			}
		})
	};
	return {
		init: t,
		show_out: d,
		query_order_tags_by_search: P,
		query_order_tags: l,
		gen_param: _
	}
};
var weapon_case = function (a, i, n) {
	var a = a;
	var i = i || false;
	var n = n;
	var r = [];
	var o;
	var s = {
		has_unusual: false,
		item_list: []
	};
	var c = {
		contraband: "#e4ae39",
		ancient_weapon: "#eb4b4b",
		ancient: "#eb4b4b",
		ancient_character: "#eb4b4b",
		legendary_weapon: "#d32ce6",
		legendary: "#d32ce6",
		legendary_character: "#d32ce6",
		mythical_weapon: "#8847ff",
		mythical: "#8847ff",
		mythical_character: "#8847ff",
		rare_weapon: "#4b69ff",
		rare: "#4b69ff",
		rare_character: "#4b69ff",
		uncommon_weapon: "#5e98d9",
		common_weapon: "#b0c3d9",
		common: "#b0c3d9"
	};
	var t = function () {
		var e;
		if (n == "itemset") {
			e = i18n("in_collection")
		} else if (i) {
			e = i18n("item_contained")
		} else {
			e = i18n("weapon_case_entry")
		}
		return e
	};
	var _ = function (e, t) {
		sendRequest("/api/market/csgo_container", {
			method: "GET",
			data: {
				container: t,
				is_container: i ? 1 : 0,
				container_type: n
			},
			showLoading: false,
			success: function (t) {
				if (t.code == "OK") {
					s = {
						has_unusual: false,
						item_list: []
					};
					s.has_unusual = t.data.has_unusual;
					for (let e of t.data.items) {
						item_entry = {
							localized_name: e.goods.tags.rarity.localized_name,
							internal_name: e.goods.tags.rarity.internal_name,
							icon_url: e.goods.original_icon_url,
							name: e.localized_name,
							goods_id: e.goods.goods_id,
							max_price: e.max_price,
							min_price: e.min_price
						};
						s.item_list.push(item_entry)
					}
					e(s)
				} else {
					Buff.toast(t.error, {
						type: "error"
					})
				}
			}
		})
	};
	var l = function (t) {
		sendRequest("/api/market/csgo_goods_containers", {
			method: "GET",
			data: {
				goods_id: a
			},
			showLoading: false,
			async: false,
			success: function (e) {
				if (e.code == "OK") {
					r = [];
					n = e.data.container_type;
					if (e.data.containers.length > 0) {
						o = e.data.containers[0].container;
						for (let t of e.data.containers) {
							let e = {
								container: t.container,
								goods_id: t.goods_id,
								icon_url: t.icon_url,
								name: t.name,
								sell_min_price: t.sell_min_price
							};
							r.push(e)
						}
					}
					t(r)
				} else {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			}
		})
	};
	var e = function () {
		var e = t();
		$(document).find(".popup-header h2").text(e);
		l(f, a);
		_(p, o);
		Popup.show("j_popup_box");
		$(".weapon-col2 .hide_weapon_cate").off("click");
		$(".weapon-col2 .hide_weapon_cate").on("click", "li", function (e) {
			var t = $(e.target).closest("li");
			t.toggleClass("on");
			var a = $("#hide_weapon_list");
			if (a.is(":hidden")) {
				a.show();
				m()
			} else {
				a.hide()
			}
		});
		$(".weapon-col2").on("click", '.weapon-list:not("#hide_weapon_list_tab")', function (e) {
			var t = $(e.target).closest("li");
			var a = t.find(".pic-desc h3 a").attr("href");
			window.location.href = a
		});
		$(".weapon-col1 ul.weapon-list li").on("click", function () {
			o = $(this).find("[id]").attr("id");
			_(p, o)
		});
		$(".weapon-col1").on("click", ".weapon-list", function (e) {
			var t = $(e.target).closest("li");
			$(".weapon-col1").find("li").removeClass("on");
			t.addClass("on")
		})
	};
	var u = function (e, t, a) {
		var i = "";
		if (e == 0 && t == 0) {
			i = "-"
		} else if (e == 0) {
			i = a(t)
		} else if (t == e) {
			i = a(e)
		} else {
			i = a(e) + "&nbsp;-&nbsp;" + a(t)
		}
		return i
	};
	var d = function (t) {
		$("#hide_weapon_list").empty();
		for (let e of t) {
			$("#hide_weapon_list").append("<li>" + '<div class="weapon-pic">' + '<div class="pic-cont">' + '<img src="' + e.icon_url + '">' + "</div>" + "</div>" + '<div class="pic-desc">' + "<div>" + '<h3><a href="/goods/' + e.goods_id + '">' + e.localized_name + "</a></h3>" + '<h4 class="c_Yellow f_12px">' + u(e.min_price, e.max_price, formatPriceNormalYuan) + "</h4>" + "</div>" + "</div>" + "</li>");
			if (g.currency.symbol != "¥" && e.max_price != 0) {
				$(`#hide_weapon_list h4:last`).after('<p class="f_12px c_Gray">' + u(e.min_price, e.max_price, formatPriceCustom) + "</small></p>")
			}
		}
	};
	var p = function (t) {
		$(".weapon-col2").find("*").not(".hide_weapon_cate, #hide_weapon_list").remove();
		$("#hide_weapon_list_tab").empty();
		$("#hide_weapon_list").empty();
		$("#hide_weapon_list").hide();
		if (t.has_unusual) {
			$(".weapon-col2 .hide_weapon_cate").show();
			$("#hide_weapon_list_tab").append(`<li class="on"><div class="weapon-pic"><div class="pic-cont"><img src="https://g.fp.ps.netease.com/market/file/641c063ed99519519ef538d9ogzOGUgR04"></div></div><div class="pic-desc"><div><h3><i class="l_Right icon2x icon_arr_up_big"></i>` + i18n("an_rare_special_item") + `</h3></div></div></li>`)
		} else {
			$(".weapon-col2 .hide_weapon_cate").hide()
		}
		var a = 0;
		for (let e of t.item_list) {
			var i;
			if (i != e.internal_name) {
				var n = a == 0 && !t.has_unusual;
				a += 1;
				i = e.internal_name;
				$(".weapon-col2").append('<div class="weapon-cate" >' + e.localized_name + "</div>" + '<ul id="weapon-list_' + a + '" class="weapon-list"></ul>');
				$(".weapon-col2 .weapon-cate:last").css({
					background: c[e.internal_name],
					"margin-top": n ? "16px" : "0px"
				})
			}
			$("#weapon-list_" + a).append("<li>" + '<div class="weapon-pic">' + '<div class="pic-cont">' + '<img src="' + e.icon_url + '">' + "</div>" + "</div>" + '<div class="pic-desc">' + "<div>" + '<h3><a href="/goods/' + e.goods_id + '">' + e.name + "</a></h3>" + '<h4 class="c_Yellow f_12px">' + u(e.min_price, e.max_price, formatPriceNormalYuan) + "</h4>" + "</div>" + "</div>" + "</li>");
			if (g.currency.symbol != "¥" && e.max_price != 0) {
				$(`.weapon-col2 h4:last`).after('<p class="f_12px c_Gray">' + u(e.min_price, e.max_price, formatPriceCustom) + "</small></p>")
			}
		}
	};
	var f = function (t) {
		$(".weapon-col1 .weapon-list").empty();
		var a = true;
		for (let e of t) {
			var i = e.goods_id != undefined ? "/goods/" + e.goods_id : "javascript:;";
			$(".weapon-col1 .weapon-list").append('<li><div id="' + e.container + '"class="weapon-pic">' + '<div class="pic-cont">' + '<img src="' + e.icon_url + '">' + "</div>" + "</div>" + '<div class="pic-desc">' + "<div>" + '<h3><a href="' + i + '">' + e.name + "</a></h3>" + "</div> " + "</div></li>");
			if (n == "weaponcase") {
				$(".weapon-col1 .weapon-list h3:last").append('<h4 class="c_Yellow f_12px">' + u(e.sell_min_price, e.sell_min_price, formatPriceNormalYuan) + "</h4>");
				if (g.currency.symbol != "¥" && e.sell_min_price != 0) {
					$(".weapon-col1 .weapon-list h4:last").append('<span class="c_Gray f_Normal">&nbsp;(' + u(e.sell_min_price, e.sell_min_price, formatPriceCustom) + ")</span>")
				}
			}
			if (a) {
				$(".weapon-list .weapon-pic").addClass("on");
				a = false
			}
		}
	};
	var m = function () {
		sendRequest("/api/market/csgo_container", {
			method: "GET",
			data: {
				container: o,
				is_container: i ? 1 : 0,
				container_type: n,
				unusual_only: 1
			},
			showLoading: false,
			success: function (t) {
				if (t.code == "OK") {
					var a = [];
					for (let e of t.data.items) {
						item_entry = {
							localized_name: e.localized_name,
							internal_name: e.goods.tags.rarity.internal_name,
							icon_url: e.goods.original_icon_url,
							name: e.goods.short_name,
							goods_id: e.goods.goods_id,
							max_price: e.max_price,
							min_price: e.min_price
						};
						a.push(item_entry)
					}
					d(a)
				} else {
					Buff.toast(t.error, {
						type: "error"
					})
				}
			}
		})
	};
	return {
		show: e
	}
};
var market = function () {
	var m = g.game;
	var h = [];
	var e = null;
	var d = null;
	var c = function (e, t, a) {
		if (g.appid != 570) return;
		for (var i = 0; i < h.length; i++) {
			if (h[i].name == e) {
				h.splice(i, 1);
				break
			}
		}
		if (typeof a != "undefined") {
			h.push({
				name: e,
				value: t,
				title: a
			})
		}
		var n = 0;
		if (n < 0) n = 0;
		var r = h.slice().splice(n, h.length);
		$(".criteria-cont .w-Key").html("");
		for (var i = 0; i < r.length; i++) {
			if (r[i].name == "search") continue;
			var o = $("<span />").text(r[i].title).attr("name", r[i].name);
			o.append("<i>×</i>");
			$(".criteria-cont .w-Key").append(o)
		}
	};
	var _ = function () {
		if (g.appid != 433850) return;
		var e = $(".w-SelType.selected").attr("value");
		var t = $(".w-SelType.selected p").attr("value");
		if (e == t) {
			title = $(".w-SelType.selected p").text()
		} else {
			title = $('.w-SelType.selected li[value="' + e + '"]').text()
		}
		if (title) {
			var a = $("<span />").text(title);
			a.append("<i>×</i>");
			$(".criteria-cont .w-Key").html(a)
		} else {
			$(".criteria-cont .w-Key").html("")
		}
	};
	var v = function () {
		var e = "/api/market/goods";
		var t = "selling";
		if ($("#buying").hasClass("on")) {
			e = "/api/market/goods/buying";
			t = "buying"
		} else if ($("#bundle").hasClass("on")) {
			e = "/api/market/goods/bundle";
			t = "bundle"
		} else if ($("#top-bookmarked").hasClass("on")) {
			e = "/api/market/sell_order/top_bookmarked";
			t = "top-bookmarked"
		} else if ($("#bugged-ethereal").hasClass("on")) {
			e = "/api/market/sell_order/bugged_ethereal";
			t = "bugged-ethereal"
		}
		return {
			url: e,
			tab: t
		}
	};
	var p = function () {
		var e = [];
		if ($("body").hasClass("dota2")) {
			for (var t = 0; t < h.length; t++) {
				e.push(h[t].title)
			}
		} else if ($("body").hasClass("pubg")) {
			var a = $(".w-Tag > .on > p").text();
			if (a) {
				e.push(a)
			}
		} else if ($("body").hasClass("h1z1") || $("body").hasClass("csgo")) {
			a = $(".w-SelType.selected > ul > li.on").text() || $(".w-SelType.selected > p").text();
			if (a) {
				e.push(a)
			}
		}
		return e
	};
	var a = function (e) {
		var a = {
			game: m,
			page_num: e || 1
		};
		for (var t = 0; t < h.length; t++) {
			var i = h[t];
			a[i.name] = i.value
		}
		var n = $(".w-Tag[name=category_group]").attr("value");
		if (n) {
			a["category_group"] = n
		}
		var r = $(".w-SelType.selected").attr("value");
		if (r) {
			var n = $(".w-SelType.selected p").attr("value");
			if (g.is_partner_appid) {
				var o = r.split("=");
				a[o[0]] = o[1]
			} else if ($(".w-SelType.selected").attr("name")) {
				a[$(".w-SelType.selected").attr("name")] = r
			} else if (r == n) {
				a["category_group"] = r
			} else {
				a["category"] = r
			}
		}
		var s = $("input[name=search]").val();
		if (s && s.length > 0) {
			a["search"] = s
		}
		var c = $(".w-Order[name=price]").attr("value");
		if (c && c.length > 0) {
			if (c == "des") a["sort_by"] = "price.desc";
			else a["sort_by"] = "price.asc"
		}
		var _ = $("input[name=min_price]").val();
		if (_) {
			a["min_price"] = parseFloat(_)
		}
		var l = $("input[name=max_price]").val();
		if (l) {
			a["max_price"] = parseFloat(l)
		}
		$(".w-Select,.w-Select-Multi").each(function () {
			var e = $(this).attr("name");
			var t = $(this).attr("value");
			if (typeof e != "undefined" && typeof t != "undefined" && t) {
				a[e] = t
			}
		});
		if (a["extra_tag_ids"]) {
			var u = $(".w-Select[name=extra_tag_ids] li.on").attr("value");
			if (u) {
				if (u.replace(TAG_NAME_PREFIX, "") == TAG_NAME_STICKER) {
					var d = $(".w-Select[name=extra_tag_ids]").attr("wearless_sticker");
					if (d !== 0 && d !== "0") {
						a["wearless_sticker"] = d
					}
				}
				a["extra_tag_type"] = u
			}
		}
		var p = v();
		var f = p["tab"];
		a["tab"] = f;
		return a
	};
	var l = function (l, u) {
		clearTimeout(e);
		e = setTimeout(function () {
			var e = v();
			var i = e["tab"];
			var t = e["url"];
			if (i == "top-bookmarked") {
				$(".block-header .w-OrderGroup").hide()
			} else {
				$(".block-header .w-OrderGroup").show()
			}
			if (i == "selling") {
				$("#search-extra_tag_ids").show();
				$("#quantity_li").show()
			} else {
				$("#search-extra_tag_ids").hide();
				$("#quantity_li").hide()
			}
			l = l || 1;
			var a = u && u() || getParamsFromHash();
			if ("min_price" in a && "max_price" in a && parseFloat(a["min_price"]) > parseFloat(a["max_price"])) {
				Buff.toast(i18n("minimum_price_can_not_be"), {
					type: "warning"
				});
				return
			}
			if (i != "selling") {
				delete a["extra_tag_ids"];
				delete a["wearless_sticker"]
			} else {
				if ("extra_tag_ids" in a && ["custom_sticker", "custom_patch"].includes(a["extra_tag_ids"])) {
					delete a["extra_tag_ids"];
					delete a["extra_tag_type"];
					delete a["wearless_sticker"]
				}
			}
			var n = p();
			var r = n.slice(0, 2).join("、") + (n.length > 2 ? "等" : "");
			$("span.cru-filter").text(r);
			sessionStorage.setItem("breadcrumb_text", r);
			sessionStorage.setItem("breadcrumb_hash", window.location.hash);
			if (n.length > 0) {
				$(".cru-filter").show()
			} else {
				$(".cru-filter").hide()
			}
			if (!isUserLogined() && i == "top-bookmarked") {
				var o = format_html('<div class="nodata"><p><i class="icon icon_nodata"></i></p><p><%= i18n("view_top_bookmarked_please_login") %></p><a href="javascript:;" onclick="loginModule.showLogin()" class="i_Btn i_Btn_hollow"><%= i18n("login") %></a></div>');
				$("#j_market_card").html(o);
				return
			}
			if (!isUserLogined() && !g.is_partner_appid && (a.page_num > 1 || a.page_size > 20 || a.min_price || a.max_price || a.search || a.sort_by || h.length > 0)) {
				loginModule.showLogin();
				return
			}
			$("#j_market_card").showLoading();
			$(".pager").html("").hide();
			var s = Object.assign({}, a);
			if (s.min_price > 0) {
				s.min_price /= g.currency.rate_base_cny
			}
			if (s.max_price > 0) {
				s.max_price /= g.currency.rate_base_cny
			}
			if (i == "selling") {
				s["use_suggestion"] = $("#use_suggestion").val();
				if ($("#use_suggestion").attr("goods_ids")) {
					s["goods_ids"] = $("#use_suggestion").attr("goods_ids")
				}
				d = s["search"]
			}
			var c = $("div[name=sort_by]").attr("value");
			if (i != "selling" && c == "sell_num.desc") {
				var _ = $("div[name=sort_by] ul li:first h6").text();
				$("div[name=sort_by]").attr("value", "");
				$("div[name=sort_by] h3 span").text(_);
				delete s.sort_by
			}
			sendRequest(t, {
				method: "GET",
				data: s,
				dataType: "json",
				showLoading: false,
				success: function (e) {
					var t = "";
					if (e.code == "OK") {
						e.data.isBuying = i == "buying";
						e.data.extra_tag_ids = s["extra_tag_ids"];
						e.data.wearless_sticker = s["wearless_sticker"];
						var a = "goods_list_pat";
						e.data.show_btn_buy_order = true;
						e.data.invoker = "market";
						$("#preview_screenshots").hide();
						if (i == "bundle") {
							a = "bundle_list_pat"
						} else if (i == "top-bookmarked" || i == "bugged-ethereal") {
							a = "sell_order_list_pat";
							if (i == "bugged-ethereal") {
								e.data.preview_screenshots = {};
								e.data.cs2_inspect_infos = {}
							}
							PreviewScreenShotsDataGenerator(OriginConst.TOP_BOOKMARK).process(e.data.items, e.data.preview_screenshots.bg_img || "", "top_bookmark", 14)
						}
						t = template_render(a, e.data)
					}
					$("#j_market_card").html(t);
					if (i == "top-bookmarked") {
						$("#preview_screenshots").show();
						PreviewScreenShots().init("top_bookmark", e.data.preview_screenshots["top_bookmark"])
					}
					$("img.lazy").lazyload();
					if (e.code == "OK") {
						renderPagination({
							total_count: e.data.total_count,
							page_size: e.data.page_size,
							page_num: l,
							onPageClick: function (e, t) {
								t.preventDefault();
								f(e);
								$("html,body").scrollTop(0)
							}
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			});
			if (i == "bundle") {
				sendRequest("/api/market/goods/bundle/transact_history", {
					method: "GET",
					data: {
						game: g.game,
						page_size: 10
					},
					dataType: "json",
					showLoading: false,
					success: function (e) {
						var t = "";
						if (e.code == "OK") {
							t = template_render("bundle_history_pat", e.data)
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
						$("#j_items_container2").html(t);
						$("img.lazy").lazyload()
					}
				})
			} else {
				$("#j_items_container2").html("")
			}
		}, 200)
	};
	var t = function () {
		return d
	};
	var f = function (e, t) {
		e = t ? 1 : e;
		window.location.hash = "#" + $.param(a(e)).replace(/\+/g, "%20")
	};
	var i = function (s) {
		$(document).on("click", ".criteria-cont .w-Key i", function () {
			var e = $(this).parent().attr("name");
			c(e, "", undefined);
			if (e == "hero") {
				$(".w-Sel-Hero li").removeClass("on");
				$(".w-Sel-Hero").attr({
					value: ""
				})
			} else if (e == "search") {
				$("input[name=search]").val("")
			} else if (e == "custom") {
				$(".w-Tag[name=custom]").attr("value", "");
				$(".w-Tag[name=custom] span").removeClass("on")
			} else {
				$('.w-SelType[name="' + e + '"] li').removeClass("on");
				$('.w-SelType[name="' + e + '"]').attr({
					value: ""
				})
			}
			if (g.appid == 433850) {
				$(".w-SelType.selected").attr("value", "");
				$(".w-SelType").removeClass("selected");
				$(".w-SelType li").removeClass("on");
				_()
			}
			f()
		});
		$(document).on("change", ".w-Sel-Hero", function () {
			var e = $(this).attr("name");
			var t = $(this).attr("value");
			var a = $(this).find("li.on").attr("title");
			c(e, t, a);
			f()
		});
		$(document).on("change", ".w-SelType", function () {
			var e = $(this).attr("name");
			var t = $(this).attr("value");
			var a = $(this).find("li.on").attr("title");
			c(e, t, a);
			_();
			f()
		});
		$(document).on("click", ".w-Counter-pannel a", function () {
			f()
		});
		$(document).on("click", "#search_btn_csgo", function () {
			f()
		});
		$(document).on("change", "input[name=search]", function () {
			var e = "search";
			var t = $(this).val();
			var a = t;
			c(e, t, a);
			f()
		});
		$(document).on("change", ".market-list .w-Order", function () {
			$(this).siblings().attr("value", "");
			f()
		});
		$(document).on("change", ".w-Tag", function () {
			var e = $(this).attr("value");
			if (e) {
				c("custom", e, $(this).find(".on").text());
				f()
			} else {
				c("custom", "", undefined);
				f()
			}
		});
		$(document).on("change", ".w-Select,.w-Select-Multi", function (e, t) {
			if (!$(this).attr("name")) {
				return
			}
			var a = $(this).attr("name");
			var i = $(this).attr("value");
			if (a == "extra_tag_ids") {
				if (["custom_sticker", "custom_patch"].includes(i)) {
					return
				}
				s && s(t)
			}
			f()
		});
		$(window).on("hashchange", function () {
			var e = getParams(window.location.hash.substring(1));
			for (var t in e) {
				if (!e[t]) continue;
				if (t == "extra_tag_type") continue;
				if (t == "min_price") {
					$("input[name=min_price]").val(e[t])
				} else if (t == "max_price") {
					$("input[name=max_price]").val(e[t])
				} else if (t == "search") {
					if (e[t].length > 0) {
						$("input[name=search]").val(e[t]);
						c(t, e[t], e[t])
					}
				} else if (t == "sort_by") {
					var a = e[t].split(".");
					$(".w-Order").removeClass("w-Order_des");
					if (a[1] == "desc") {
						$(".w-Order").attr({
							value: "des"
						});
						$('.w-Order[name="' + a[0] + '"]').addClass("w-Order_des")
					} else if (a[1] == "asc") {
						$(".w-Order").attr({
							value: "asc"
						});
						$('.w-Order[name="' + a[0] + '"]').addClass("w-Order_asc")
					}
				} else if (["dota2"].indexOf(g.game) > -1 && t == "custom") {
					$(".w-Tag[name=custom]").attr("value", e[t]);
					$(".w-Tag[name=custom] span[value=" + e[t] + "]").addClass("on");
					var i = $(".w-Tag[name=custom] span[value=" + e[t] + "]").text();
					c(t, e[t], i)
				} else if (t == "extra_tag_ids") {
					updateExtraTagIdsItem(".w-Select[name=extra_tag_ids]", e[t], e.extra_tag_type, e.wearless_sticker);
					s && s({
						extra_tag_ids: e[t],
						extra_tag_type: e.extra_tag_type,
						wearless_sticker: e.wearless_sticker
					})
				} else if (t == "wearless_sticker") {
					$("#sticker_wearless_checkbox span").click()
				} else if (["page_num", "sort_by"].indexOf(t) < 0) {
					if (["h1z1", "csgo"].indexOf(g.game) > -1 && ["category", "category_group"].indexOf(t) > -1) {
						Buff.setCompValue("j_h1z1-selType", e[t])
					} else if (g.game == "tf2" && t == "type") {
						Buff.setCompValue("j_h1z1-selType", e[t])
					} else if (g.is_partner_appid && (t == "tag_1_name" || t == "tag_2_name")) {
						Buff.setCompValue("j_g101-selType", t + "=" + e[t])
					} else {
						Buff.setCompValue("search-" + t, e[t])
					}
					var n = $("#search-" + t).attr("value");
					var r = $("#search-" + t + " li.on").attr("title");
					c(t, n, r);
					_()
				}
			}
			if (e["tab"] == "buying" || e["tab"] == "bundle" || e["tab"] == "top-bookmarked" || e["tab"] == "bugged-ethereal") {
				$("#selling").removeClass("on");
				$("#" + e["tab"]).addClass("on")
			}
			var o = e["page_num"] || 1;
			l(o, function () {
				return Object.assign({}, e, {
					game: m
				})
			})
		}).trigger("hashchange");
		Buff.pricePatten("input[name=min_price]");
		Buff.pricePatten("input[name=max_price]");
		$(document).on("click", ".tab li", function () {
			$(".tab li").removeClass("on");
			$(this).addClass("on");
			f(1, true)
		});
		$(".w-SelType.no-click").on("click", function (e) {
			e.stopPropagation()
		});
		FilterDataManager().reset()
	};
	return {
		init: i,
		query: l,
		get_last_query_search: t
	}
};
var marketShow = function (P, e) {
	var n = e;
	var B = g.game;
	var l = null;
	var t = 150,
		u = "",
		d = 0;
	_preview_slide_page_num = 0;
	var _ = {};
	var p = [];
	var f = null;
	var m = null;
	var x = "";
	var r = false;
	var s = "";
	var c = "";
	var C = null;
	var h = null;
	var v = null;
	var y = null;
	var b = null;
	var j = null;
	var w = "";
	var k = {
		tag_id: -1,
		tier: "no_limit",
		paintwear: "-1"
	};
	var T = function () {
		var e = getParamsFromHash().tag_ids;
		if (!e) return e;
		var t = e.split(",");
		var a = [];
		for (var i = 0; i < t.length; i++) {
			var n = t[i];
			if ($(".criteria:visible .w-Select-Multi h6[value=" + n + "]").length > 0) {
				a.push(n)
			}
		}
		return a.join(",") || undefined
	};
	var S = function (e) {
		$(".new-tab li").removeClass("on");
		if (e) {
			$(".new-tab li.prelist").addClass("on")
		} else {
			$(".new-tab li.selling").addClass("on");
			$("#batch-buy-btn").parent().show()
		}
		if (C) C.show();
		if ($(".new-tab li.selling").hasClass("has-market-min-price")) {
			var t = template_render("market_min_price_pat");
			$(".detail-tab-cont").html(t);
			initCustomCurrency($(".detail-tab-cont"));
			return
		}
		var a = getParamsFromHash();
		var i = a.page_num || 1;
		var n = a.sort_by || "default";
		var r = a.mode || "";
		var o = a.allow_tradable_cooldown || 1;
		var s = T();
		var c = a.paintseed;
		var _ = a.paintseed_group;
		var l = a.tier;
		var u = a.min_paintwear;
		var d = a.max_paintwear;
		var p = a.min_fade;
		var f = a.max_fade;
		var m = a.name_tag;
		var h = a.min_price;
		var v = a.max_price;
		var y = a.extra_tag_ids;
		var b = a.wearless_sticker;
		var w = a.fixed_slot;
		if (h > 0 && v > 0 && parseFloat(h) > parseFloat(v)) {
			Buff.toast(i18n("minimum_price_can_not_be"), {
				type: "warning"
			});
			return
		}
		if (h > 0) {
			h /= g.currency.rate_base_cny;
			h = h.toFixed(2)
		}
		if (v > 0) {
			v /= g.currency.rate_base_cny;
			v = v.toFixed(2)
		}
		if (!isUserLogined() && !g.is_partner_appid && (i > 1 || n != "default" || s || c || _ || l || u || d || p || f || m || h || v)) {
			loginModule.showLogin();
			return
		}
		$(".detail-tab-cont").showLoading();
		x = "/api/market/goods/sell_order";
		var k = {
			game: B,
			goods_id: P,
			page_num: i,
			sort_by: n,
			mode: r,
			allow_tradable_cooldown: o,
			tag_ids: s,
			paintseed: c,
			paintseed_group: _,
			tier: l,
			min_paintwear: u,
			max_paintwear: d,
			min_fade: p,
			max_fade: f,
			name_tag: m,
			min_price: h,
			max_price: v
		};
		if (e) {
			k["prelist"] = 1;
			k["allow_tradable_cooldown"] = 1
		}
		if (y && y != "custom") {
			k["extra_tag_ids"] = y;
			k["wearless_sticker"] = b;
			k["fixed_slot"] = w
		}
		sendRequest("/api/market/goods/sell_order", {
			data: k,
			timeout: 1e4,
			method: "GET",
			dataType: "json",
			showLoading: false,
			retryLimit429: 10,
			retryCount429: 0,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				e.data.mode = r;
				if (g.item_detail_popup_appids.indexOf(g.appid) != -1) {
					PreviewScreenShotsDataGenerator(OriginConst.SELLING).process(e.data.items, e.data.preview_screenshots.bg_img || "", "selling", 10)
				}
				var t = template_render("selling_list_pat", e.data);
				$(".detail-tab-cont").html(t);
				Buff.initSelect("#mode-select");
				Buff.setCompValue("mode-select", r || undefined);
				if (g.appid == 730) {
					PreviewScreenShots().init("selling", e.data.preview_screenshots["selling"], function (e, t, a) {
						if (e != "selling") {
							return
						}
						t.removeClass("shalow-btn-green");
						if (a == "true") {
							t.removeClass("shalow-btn");
							t.removeClass("shalow-btn-green");
							t.html('<i class="icon icon_zoom"></i>')
						} else {
							t.addClass("shalow-btn");
							t.addClass("shalow-btn-green");
							t.html(i18n("to_view_figure"))
						}
					})
				}
				$("img.lazy").lazyload();
				renderPagination({
					total_count: e.data.total_count,
					page_size: e.data.page_size,
					page_num: e.data.page_num,
					onPageClick: function (e, t) {
						t.preventDefault();
						updateHash("page_num", e);
						window.scrollTo(0, 0)
					}
				})
			},
			error: function (e) {
				if (e.statusText != "abort") {
					if (this.showError != false) {
						if (e.status == 429) {
							this.retryCount429++;
							if (this.retryCount429 <= this.retryLimit429) {
								var t = this;
								setTimeout(function () {
									$.ajax(t)
								}, 2e3);
								return
							} else {
								try {
									Buff.toast(e.responseJSON.error)
								} catch (e) {
									Buff.toast(i18n("request_in_queue"))
								}
							}
						} else if (["timeout", "error"].indexOf(e.statusText) > -1) {
							this.tryCount++;
							if (this.tryCount <= this.retryLimit) {
								$.ajax(this);
								return
							}
							Buff.toast(i18n("network_error"))
						} else if (e.status == 500) {
							Buff.toast(i18n("system_busy_error"))
						}
					}
					$(".detail-tab-cont").removeLoading()
				}
			}
		})
	};
	var O = function () {
		sendRequest("/api/market/bundle_inventory/get_prefer", {
			method: "GET",
			showLoading: false,
			data: {
				keys: "show_same_goods"
			},
			success: function (e) {
				show_same_goods = e.data.show_same_goods;
				if (show_same_goods) {
					$(".w-Checkbox[name=same_goods] span").addClass("on")
				} else {
					$(".w-Checkbox[name=same_goods] span").removeClass("on")
				}
				$(".new-tab li").removeClass("on");
				$(".new-tab li.bundle").addClass("on");
				if (b) b.show();
				var t = getParamsFromHash();
				var a = t.page_num || 1;
				var i = T();
				if (!isUserLogined() && !g.is_partner_appid && (a > 1 || i)) {
					loginModule.showLogin();
					return
				}
				$(".detail-tab-cont").showLoading();
				var n = t.sort_by || "default";
				var r = t.min_price;
				var o = t.max_price;
				var s = t.min_paintwear;
				var c = t.max_paintwear;
				var _ = t.min_asset_count;
				var l = t.max_asset_count;
				var u = {
					game: B,
					goods_id: P,
					page_num: a,
					preview_limit: 4,
					sort_by: n,
					min_price: r,
					max_price: o,
					same_goods: show_same_goods,
					min_paintwear: s,
					max_paintwear: c,
					min_asset_count: _,
					max_asset_count: l
				};
				if (r > 0 && o > 0 && parseFloat(r) > parseFloat(o)) {
					Buff.toast(i18n("minimum_price_can_not_be"), {
						type: "warning"
					});
					return
				}
				if (_ > l || s > c) {
					Buff.toast(i18n("minimum_value_can_not_be"), {
						type: "warning"
					})
				}
				x = "/api/market/goods/bundle_inventory";
				sendRequest("/api/market/goods/bundle_inventory", {
					data: u,
					method: "GET",
					dataType: "json",
					showLoading: false,
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error);
							return
						}
						for (var a = 0; a < e.data.items.length; a++) {
							let t = e.data.items[a];
							if (t.discount_rate && t.discount_rate !== 0) {
								let e = t.discount_rate.toString();
								index = e.indexOf(".");
								if (index !== -1) {
									e = e.substring(0, index + 2)
								} else {
									e = e + ".0"
								}
								t.discount_rate_str = e;
								t.discount_rate = parseFloat(e)
							}
						}
						var t = template_render("bundle_inventory_list_pat", e.data);
						$(".detail-tab-cont").html(t);
						renderPagination({
							total_count: e.data.total_count,
							page_size: e.data.page_size,
							page_num: e.data.page_num,
							onPageClick: function (e, t) {
								t.preventDefault();
								updateHash("page_num", e);
								window.scrollTo(0, 0)
							}
						})
					},
					error: function (e) {
						if (e.statusText == "abort") return;
						if (e.status == 500) {
							Buff.toast(i18n("the_system_is_busy_please"))
						} else {
							Buff.toast(i18n("detects_network_anomalies_please_try"))
						}
						$(".detail-tab-cont").removeLoading()
					}
				})
			}
		})
	};
	var E = function () {
		$(".new-tab li").removeClass("on");
		$(".new-tab li.buying").addClass("on");
		if (v) v.show();
		var e = getParamsFromHash();
		var t = e.page_num || 1;
		var a = T();
		var i = e.tier;
		var n = e.min_paintwear;
		var r = e.max_paintwear;
		var o = e.max_price_only;
		if (!isUserLogined() && !g.is_partner_appid && (t > 1 || a)) {
			loginModule.showLogin();
			return
		}
		$(".detail-tab-cont").showLoading();
		x = "/api/market/goods/buy_order";
		sendRequest("/api/market/goods/buy_order", {
			data: {
				game: B,
				goods_id: P,
				page_num: t,
				tag_ids: a,
				tier: i,
				min_paintwear: n,
				max_paintwear: r,
				max_price_only: o
			},
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				var t = template_render("buying_list_pat", e.data);
				$(".detail-tab-cont").html(t);
				renderPagination({
					total_count: e.data.total_count,
					page_size: e.data.page_size,
					page_num: e.data.page_num,
					onPageClick: function (e, t) {
						t.preventDefault();
						updateHash("page_num", e);
						window.scrollTo(0, 0)
					}
				})
			},
			error: function (e) {
				if (e.statusText == "abort") return;
				if (e.status == 500) {
					Buff.toast(i18n("the_system_is_busy_please"))
				} else {
					Buff.toast(i18n("detects_network_anomalies_please_try"))
				}
				$(".detail-tab-cont").removeLoading()
			}
		})
	};
	var q = function () {
		$(".new-tab li").removeClass("on");
		$(".new-tab li.history").addClass("on");
		if (h) h.show();
		if ($(".new-tab li.history").hasClass("need-login")) {
			var t = format_html('<div class="nodata"><p><i class="icon icon_nodata"></i></p><p><%= i18n("view_history_please_login") %></p><a href="javascript:;" onclick="loginModule.showLogin()" class="i_Btn i_Btn_hollow"><%= i18n("login") %></a></div>');
			$(".detail-tab-cont").html(t);
			return
		}
		$(".detail-tab-cont").showLoading();
		x = "/api/market/goods/bill_order";
		var e = getParamsFromHash();
		var a = T();
		var i = e.paintseed;
		var n = e.tier;
		sendRequest("/api/market/goods/bill_order", {
			data: {
				game: B,
				goods_id: P,
				tag_ids: a,
				paintseed: i,
				tier: n
			},
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				t = template_render("history_list_pat", e.data);
				$(".detail-tab-cont").html(t);
				renderPagination({
					total_count: 0,
					page_size: 0,
					page_num: 0
				})
			},
			error: function (e) {
				if (e.statusText == "abort") return;
				if (e.status == 500) {
					Buff.toast(i18n("the_system_is_busy_please"))
				} else {
					Buff.toast(i18n("detects_network_anomalies_please_try"))
				}
				$(".detail-tab-cont").removeLoading()
			}
		})
	};
	var R = function () {
		$(".new-tab li").removeClass("on");
		$(".new-tab li.price-chart").addClass("on");
		if (y) {
			if (getParamsFromHash().history == "steam") {
				y.hide()
			} else {
				y.show()
			}
		}
		if ($(".new-tab li.price-chart").hasClass("need-login")) {
			var r = format_html('<div class="nodata"><p><i class="icon icon_nodata"></i></p><p><%= i18n("view_price_trends_please_login") %></p><a href="javascript:;" onclick="loginModule.showLogin()" class="i_Btn i_Btn_hollow"><%= i18n("login") %></a></div>');
			$(".detail-tab-cont").html(r);
			return
		}
		$(".detail-tab-cont").showLoading();
		var t = "/api/market/goods/price_history";
		var e = "/api/market/goods/price_history/steam/days";
		var a = g.currency.code;
		var o = localStorage.getItem("history_price_days_" + g.appid) || 30;
		if (getParamsFromHash().days) {
			o = getParamsFromHash().days
		}
		var s = [];
		var c;
		var _ = true;
		var l = [];
		var u = false;
		if (getParamsFromHash().history == "buff" || has_buff_price_history && getParamsFromHash().history != "steam") {
			t = "/api/market/goods/price_history/buff";
			e = "/api/market/goods/price_history/buff/days";
			u = true;
			if (has_buff_min_price_history) {
				s = [{
					buff_price_type: 1,
					text: i18n("buff_the_sale_price")
				}, {
					buff_price_type: 2,
					text: i18n("buff_sale_min_price")
				}]
			}
		}
		if (has_buff_min_price_history) {
			c = localStorage.getItem("buff_price_type_" + g.appid) || 2
		} else {
			c = localStorage.getItem("buff_price_type_" + g.appid) || 1
		}
		if (getParamsFromHash().buff_price_type) {
			if (getParamsFromHash().buff_price_type == 1 || has_buff_min_price_history) {
				c = getParamsFromHash().buff_price_type
			}
		}
		if (!has_buff_sell_num_history) {
			_ = false
		} else {
			if (getParamsFromHash().with_sell_num) {
				_ = getParamsFromHash().with_sell_num == "true"
			} else {
				_ = localStorage.getItem("with_sell_num_" + g.appid) || true
			}
		}
		x = e;
		sendRequest(e, {
			data: {
				game: B,
				goods_id: P
			},
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				l = e.data.options;
				x = t;
				sendRequest(t, {
					data: {
						game: B,
						goods_id: P,
						currency: a,
						days: o,
						tier: getParamsFromHash().tier,
						tag_ids: T(),
						buff_price_type: c,
						with_sell_num: _
					},
					method: "GET",
					dataType: "json",
					showLoading: false,
					success: function (t) {
						$(".detail-tab-cont").removeLoading();
						if (t.code != "OK") {
							Buff.toast(t.error);
							return
						}
						t.data.has_buff_price_history = has_buff_price_history;
						t.data.has_buff_min_price_history = has_buff_min_price_history;
						t.data.has_buff_sell_num_history = has_buff_sell_num_history;
						t.data.buff_price_type_options = s;
						t.data.days_options = l;
						t.data.days = o;
						t.data.buff_price_type = c;
						t.data.in_buff_price_tab = u;
						t.data.with_sell_num = _;
						r = template_render("price-chart", t.data);
						$(".detail-tab-cont").html(r);
						Buff.initSelect("#price-history-days");
						Buff.initSelect("#price-history-type");
						u = true;
						var e = PriceHistoryChart(t.data);
						if (has_buff_sell_num_history && u && _) {
							var a = [];
							if (c == 2) {
								tooltip_head = i18n("buff_sale_min_price")
							} else {
								tooltip_head = i18n("buff_sale_price")
							}
							t.data.price_history.forEach(e => {
								if (e[2] == null) {
									return
								}
								a.push({
									x: moment(e[0]).format("YYYY-MM-DD HH:mm:ss"),
									y: e[2]
								})
							});
							var i = parseInt(Math.max(...a.map(e => e.y)) * 1.03);
							var n = parseInt(Math.min(...a.map(e => e.y)) * .98);
							e.options.scales.y1 = {
								position: "right",
								suggestedMax: i,
								suggestedMin: n,
								ticks: {
									count: 2,
									precision: 0,
									callback: function (e) {
										return e
									}
								},
								grid: {
									drawOnChartArea: false
								}
							};
							e.data.datasets.push({
								data: a,
								type: "line",
								yAxisID: "y1",
								borderWidth: 2,
								tension: .3,
								backgroundColor: "#EEA20E",
								borderColor: "#EEA20E"
							});
							e.options.plugins.tooltip.displayColors = true;
							e.options.interaction.mode = "nearest";
							e.options.interaction.axis = "x";
							e.options.plugins.tooltip.boxWidth = 6;
							e.options.plugins.tooltip.boxHeight = 6;
							e.options.plugins.tooltip.callbacks = {
								label: function (e) {
									if (e.datasetIndex == 0) {
										return tooltip_head + " " + t.data.currency_symbol + parseFloat(e.parsed.y).toFixed(2)
									} else {
										return i18n("buff_sale_num") + " " + parseInt(e.parsed.y)
									}
								},
								title: function (e) {
									if (e.length != 0) {
										return moment(e[0].parsed.x).format("YYYY-MM-DD HH:mm:ss")
									}
								}
							};
							e.update()
						}
					},
					error: function (e) {
						if (e.statusText == "abort") return;
						if (e.status == 500) {
							Buff.toast(i18n("the_system_is_busy_please"))
						} else {
							Buff.toast(i18n("detects_network_anomalies_please_try"))
						}
						$(".detail-tab-cont").removeLoading()
					}
				});
				x = t;
				sendRequest(t, {
					data: {
						game: B,
						goods_id: P,
						currency: a,
						days: o,
						tier: getParamsFromHash().tier,
						tag_ids: T(),
						buff_price_type: c,
						with_sell_num: _
					},
					method: "GET",
					dataType: "json",
					showLoading: false,
					success: function (t) {
						$(".detail-tab-cont").removeLoading();
						if (t.code != "OK") {
							Buff.toast(t.error);
							return
						}
						t.data.has_buff_price_history = has_buff_price_history;
						t.data.show_buff_sell_num_history = show_buff_sell_num_history;
						t.data.has_buff_min_price_history = has_buff_min_price_history;
						t.data.has_buff_sell_num_history = has_buff_sell_num_history;
						t.data.buff_price_type_options = s;
						t.data.days_options = l;
						t.data.days = o;
						t.data.buff_price_type = c;
						t.data.in_buff_price_tab = u;
						t.data.with_sell_num = _;
						r = template_render("price-chart", t.data);
						$(".detail-tab-cont").html(r);
						Buff.initSelect("#price-history-days");
						Buff.initSelect("#price-history-type");
						u = true;
						var e = PriceHistoryChart(t.data);
						if (has_buff_sell_num_history && u && _) {
							var a = [];
							if (c == 2) {
								tooltip_head = i18n("buff_sale_min_price")
							} else {
								tooltip_head = i18n("buff_sale_price")
							}
							t.data.price_history.forEach(e => {
								if (e[2] == null) {
									return
								}
								a.push({
									x: moment(e[0]).format("YYYY-MM-DD HH:mm:ss"),
									y: e[2]
								})
							});
							var i = parseInt(Math.max(...a.map(e => e.y)) * 1.03);
							var n = parseInt(Math.min(...a.map(e => e.y)) * .98);
							e.options.scales.y1 = {
								position: "right",
								suggestedMax: i,
								suggestedMin: n,
								ticks: {
									count: 2,
									precision: 0,
									callback: function (e) {
										return e
									}
								},
								grid: {
									drawOnChartArea: false
								}
							};
							e.data.datasets.push({
								data: a,
								type: "line",
								yAxisID: "y1",
								borderWidth: 2,
								tension: .3,
								backgroundColor: "#EEA20E",
								borderColor: "#EEA20E"
							});
							e.options.plugins.tooltip.displayColors = true;
							e.options.interaction.mode = "nearest";
							e.options.interaction.axis = "x";
							e.options.plugins.tooltip.boxWidth = 6;
							e.options.plugins.tooltip.boxHeight = 6;
							e.options.plugins.tooltip.callbacks = {
								label: function (e) {
									if (e.datasetIndex == 0) {
										return tooltip_head + " " + t.data.currency_symbol + parseFloat(e.parsed.y).toFixed(2)
									} else {
										return i18n("buff_sale_num") + " " + parseInt(e.parsed.y)
									}
								},
								title: function (e) {
									if (e.length != 0) {
										return moment(e[0].parsed.x).format("YYYY-MM-DD HH:mm:ss")
									}
								}
							};
							e.update()
						}
					},
					error: function (e) {
						if (e.statusText == "abort") return;
						if (e.status == 500) {
							Buff.toast(i18n("the_system_is_busy_please"))
						} else {
							Buff.toast(i18n("detects_network_anomalies_please_try"))
						}
						$(".detail-tab-cont").removeLoading()
					}
				})
			},
			error: function (e) {
				if (e.statusText == "abort") return;
				if (e.status == 500) {
					Buff.toast(i18n("the_system_is_busy_please"))
				} else {
					Buff.toast(i18n("detects_network_anomalies_please_try"))
				}
				$(".detail-tab-cont").removeLoading()
			}
		})
	};
	var A = function () {
		$(".new-tab li").removeClass("on");
		$(".new-tab li.related").addClass("on");
		$(".detail-tab-cont").showLoading();
		x = "/api/market/goods/related_recommendation";
		sendRequest("/api/market/goods/related_recommendation", {
			data: {
				game: B,
				goods_id: P
			},
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				html = template_render("related_list_pat", e.data);
				$(".detail-tab-cont").html(html)
			},
			error: function (e) {
				if (e.statusText == "abort") return;
				if (e.status == 500) {
					Buff.toast(i18n("the_system_is_busy_please"))
				} else {
					Buff.toast(i18n("detects_network_anomalies_please_try"))
				}
				$(".detail-tab-cont").removeLoading()
			}
		})
	};
	var I = function () {
		$(".new-tab li").removeClass("on");
		$(".new-tab li.user-preview").addClass("on");
		if ($(".new-tab li.user-preview").hasClass("need-login")) {
			var e = format_html('<div class="nodata"><p><i class="icon icon_nodata"></i></p><p><%= i18n("view_a_player_show_please") %></p><a href="javascript:;" onclick="loginModule.showLogin()" class="i_Btn i_Btn_hollow"><%= i18n("login") %></a></div>');
			$(".detail-tab-cont").html(e);
			return
		} else {
			e = template_render("user-preview", {});
			$(".detail-tab-cont").html(e)
		}
		Buff.initSelectMulti("#j_select-Order");
		var t = $("#j-open"),
			a = $("#j-packup"),
			i = $("#reset-filter"),
			n = $("#j-select");
		t.click(function (e) {
			t.hide();
			a.show();
			i.show();
			n.show();
			return false
		});
		a.click(function (e) {
			t.show();
			a.hide();
			i.hide();
			n.hide();
			return false
		});
		o(true)
	};
	var M = function () {
		$(".new-tab li").removeClass("on");
		$(".new-tab li.paintwear-rank").addClass("on");
		if ($(".new-tab li.paintwear-rank").hasClass("need-login")) {
			var e = format_html('<div class="nodata"><p><i class="icon icon_nodata"></i></p><p><%= i18n("view_wear_ranking_please_log") %></p><a href="javascript:;" onclick="loginModule.showLogin()" class="i_Btn i_Btn_hollow"><%= i18n("login") %></a></div>');
			$(".detail-tab-cont").html(e);
			return
		}
		$(".rank-Type").show();
		Buff.initSelect("#rank_type-Select");
		x = "/api/market/paintwear_rank";
		var t = getParamsFromHash();
		var a = t.page_num || 1;
		var i = t.rank_type || 0;
		Buff.setCompValue("rank_type-Select", i);
		var n = t.order_type;
		$(".detail-tab-cont").showLoading();
		sendRequest("/api/market/paintwear_rank", {
			data: {
				game: B,
				goods_id: P,
				page_num: a,
				rank_type: i,
				order_type: n
			},
			method: "GET",
			dataType: "JSON",
			showLoading: false,
			success: function (e) {
				$(".detail-tab-cont").removeLoading();
				var t = format_html('<div class="nodata"><p><i class="icon icon_nodata"></i></p><p><%= i18n("no_meet_the_requirements_of") %></p></div>');
				if (e.code != "OK") {
					e.code == "Not Found" ? $(".detail-tab-cont").html(t) : Buff.toast(e.error);
					return
				}
				if (!e.data.ranks) {
					$(".detail-tab-cont").html(t);
					return
				}
				$(".detail-tab-cont").html(template_render("paintwear_rank_pat", e.data));
				$("#rank-title span").text($("#rank_type-Select").find("h3").text() || i18n("ranking_total_ranking"));
				Buff.initSelect("#rank_order_type-Select");
				Buff.setCompValue("rank_order_type-Select", n || e.data.order_type.toString());
				renderPagination({
					total_count: e.data.total_count,
					page_size: e.data.page_size,
					page_num: e.data.page_num,
					onPageClick: function (e, t) {
						t.preventDefault();
						updateHash("page_num", e);
						window.scrollTo(0, 0)
					}
				})
			},
			error: function (e) {
				if (e.statusText == "abort") return;
				if (e.status == 500) {
					Buff.toast(i18n("the_system_is_busy_please"))
				} else {
					Buff.toast(i18n("detects_network_anomalies_please_try"))
				}
				$(".detail-tab-cont").removeLoading()
			}
		})
	};
	var o = function (e) {
		if (u == "loading") return;
		u = "loading";
		var t = [];
		$(".pinterest-selects .w-Selectsearch").each(function () {
			var e = $(this).attr("value");
			if (e) t.push(e)
		});
		var a = false;
		if (e) {
			$("#j_waterfull").html("");
			l = new waterFall({
				id: "#j_waterfull",
				width: 1140,
				itemWidth: 212,
				colums: 5
			});
			d = 0;
			_preview_slide_page_num = 0;
			a = true;
			p = []
		} else {
			$("#j_waterfull-loading").showLoading()
		}
		d += 1;
		_preview_slide_page_num += 1;
		_ = {
			game: B,
			page_num: d
		};
		_["sort_by"] = $("#j_select-Order").attr("value");
		if (t.length > 0) {
			_.goods_ids = t.join(",")
		}
		$("#preview-total-count").text("");
		x = "/api/market/preview";
		sendRequest("/api/market/preview", {
			method: "GET",
			data: _,
			showLoading: a,
			success: function (e) {
				$("#j_waterfull-loading").removeLoading();
				u = "";
				if (e.code == "OK") {
					if (e.data.items.length == 0 && e.data.page_num == 1) {
						$(".pinterest-cont .nodata_tip").show();
						$("#j_waterfull").css({
							height: 0
						});
						$("#j_select-Order").hide()
					} else {
						$(".pinterest-cont .nodata_tip").hide();
						$("#j_select-Order").show()
					}
					var t = e.data.items;
					var a = e.data.page_size;
					var i = e.data.page_num;
					if (p.length >= e.data.total_count || t.length == 0) {
						u = "end";
						return
					} else {
						d = e.data.page_num
					}
					var n = e.data.user_infos;
					var r = "";
					for (var o = 0; o < e.data.items.length; o++) {
						var s = e.data.items[o];
						p.push(s);
						var c = template_render("pinterest_item_pat", {
							item: s,
							user_infos: n,
							index: p.length - 1
						});
						r += $.trim(c)
					}
					var _ = $(r);
					$("#j_waterfull").append(_);
					if (l == null) {
						l = new waterFall({
							id: "#j_waterfull",
							width: 1140,
							itemWidth: 212,
							colums: 5
						})
					}
					l.setPosition(_)
				} else {
					$("#j_waterfull-loading").removeLoading();
					Buff.toast(e.error)
				}
			}
		})
	};
	var F = function () {
		var e = BuffConfig.MAX_SELL_PRICE;
		var c = undefined;
		var t = undefined;
		var o = undefined;
		var _ = [];
		var a = 0;
		var s = 0;
		var l = 0;
		var u;
		var d;
		var p;
		var f = {};
		var m = [];
		var i = function (e) {
			var t = 0,
				a = 0;
			var i = [];
			var n = [];
			for (var r = 0; r < e.length; r++) {
				var o = e[r];
				if (o.success) {
					t += 1;
					if (o.data.mode == 5) n.push(o.data.id)
				} else {
					a += 1;
					if (i.indexOf(o.error) < 0) {
						i.push(o.error)
					}
				}
			}
			$("#loading-cover").hide();
			Popup.hide();
			if (u == 6 && t > 0 && e.length == 1) {
				normalBuy(g.user.id).show_wx_pay_qrcode(e[0].data.id, e[0].data.price);
				return
			}
			if (u == 10 && t > 0 && e.length == 1) {
				normalBuy(g.user.id).open_pcredit_pay(e[0].data.id);
				return
			}
			var s = "";
			if (t > 0) {
				s = '<span class="c_Gray">' + i18n("a_successful_purchase") + ": " + t + "</span><br>";
				if (n.length >= 0) {
					s += i18n("please_go_to_send_offer")
				} else {
					s += i18n("piece_of_goods_please_go")
				}
			}
			if (a > 0) {
				if (t > 0) {
					s += "<br>"
				}
				s += '<span class="c_Gray">' + i18n("purchase_failure_reason_as_follows") + ": " + a + "</span>";
				for (r in i) {
					s += "<br>" + format_html(i[r])
				}
			}
			var c = function () {
				if (n.length == 0) return;
				sendRequest("/api/market/bill_order/notify_buyer_to_send_offer", {
					method: "POST",
					dataType: "json",
					data: {
						bill_order_id: n[0],
						game: B
					},
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						Buff.toast(i18n("add_in_5_minutes_to"), {
							type: "success"
						});
						setTimeout(function () {
							window.location.reload()
						}, 3e3)
					}
				})
			};
			Buff.alert({
				title: i18n("buying_in_bulk_results"),
				safeMessage: s,
				hideCancel: true,
				success: function () {
					if (n.length > 0) {
						$("#j_popup_payed").remove();
						var e = template_render("manual_plus_pay_success_pat");
						$("body").append(e);
						$("#j_popup_payed #go_to_app, #j_popup_payed .popup-close").click(function () {
							Popup.hide();
							c()
						});
						$("#j_popup_payed #ask_seller").click(function () {
							Popup.hide();
							sendRequest("/api/market/bill_order/ask_seller_to_send_offer", {
								method: "POST",
								dataType: "json",
								data: {
									bill_orders: n,
									game: B
								},
								success: function (e) {
									if (e.code != "OK") {
										Buff.toast(e.error, {
											type: "error"
										});
										return
									}
									for (var t = 0; t < n.length; t++) {
										if (e.data[n[t]] != "OK") {
											Buff.toast(e.data[n[t]], {
												type: "error"
											});
											return
										}
									}
									Buff.toast(i18n("please_wait_for_seller_to"), {
										type: "success"
									});
									setTimeout(function () {
										window.location.reload()
									}, 3e3)
								}
							})
						});
						Popup.show("j_popup_payed", {
							forceClose: true
						})
					} else {
						window.location.reload()
					}
				},
				confirmText: i18n("confirm"),
				onClose: c,
				forceClose: true
			});
			$(".cover").last().on("click", function () {
				Popup.hide();
				c()
			})
		};
		var h = function (e) {
			if (!a || !e.length) return;
			Popup.hide();
			Buff.alert({
				title: i18n("purchase"),
				safeMessage: i18n("total") + ": " + a + "<br>" + i18n("paid") + ': <span id="batch-buy-paid-count">0</span>',
				hideCancel: true,
				hideConfirm: true,
				extraClasses: "batch_buying"
			});
			$("#loading-cover").show();
			var o = [];
			var s = function (n) {
				if (n >= a || n >= e.length) {
					i(o);
					return
				}
				var t = e[n];
				var r = undefined;
				sendRequest("/api/market/goods/buy", {
					data: {
						game: B,
						goods_id: P,
						sell_order_id: t.id,
						price: t.price,
						batch: 1,
						pay_method: u,
						allow_tradable_cooldown: l,
						password_token: p,
						hide_non_epay: payMethodPopup().isNonEpayHidden()
					},
					dataType: "json",
					method: "POST",
					showLoading: false,
					ignoreCode: ["Internal Server Error"],
					success: function (e) {
						if (e.code != "OK") {
							r = {
								success: false,
								orderid: t.id,
								error: e.error
							}
						} else {
							r = {
								success: true,
								orderid: t.id,
								data: e.data
							};
							$("#batch-buy-paid-count").text(parseInt($("#batch-buy-paid-count").text()) + 1)
						}
					},
					error: function (e) {
						r = {
							success: false,
							orderid: t.id,
							error: e
						}
					},
					complete: function (e) {
						if (e.responseJSON.code == "Realname Required") {
							$("#j_popup_batchbuy .i_Btn_main").removeClass("i_Btn_disabled")
						}
						if (!r) {
							$("#loading-cover").hide();
							var t = Popup.boxes;
							var a = t.length;
							if (a >= 2 && !t[a - 1].hasClass("batch_buying")) {
								var i = t[a - 1];
								t[a - 1] = t[a - 2];
								t[a - 2] = i
							}
							Popup.hide();
							return
						} else if (p && e.responseJSON.code == "Pay Password Error") {
							Buff.toast(e.responseJSON.error);
							return
						}
						o.push(r);
						s(n + 1)
					}
				})
			};
			s(0)
		};
		var v = function (s) {
			if (!o) {
				_ = [];
				$("#batch-buy-total-count").parent().hide();
				y();
				return
			}
			var e = assetTagFilter().getHashTags("#popup_bulkbuy_filters").hashParams;
			for (var t in e) {
				var a = e[t];
				if (a === null || a.length < 1 || a === "null") {
					delete e[t]
				}
			}
			var i = {
				game: B,
				goods_id: P,
				sort_by: "price.asc",
				mode: "",
				max_price: o,
				page_size: c,
				exclude_current_user: "1",
				allow_tradable_cooldown: l
			};
			for (var t in i) {
				e[t] = i[t]
			}
			sendRequest("/api/market/goods/sell_order", {
				data: e,
				timeout: 1e4,
				method: "GET",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					var t = e.data.items;
					var a = [];
					var i = 0;
					var n = [];
					m = [];
					for (var r = 0; r < t.length; r++) {
						if (g.is_partner_appid && t[r].asset_info && t[r].asset_info.tradable_unfrozen_time > Date.now() / 1e3) {
							continue
						}
						i += parseFloat(t[r].price);
						m.push(t[r].id);
						a.push(i);
						n.push(t[r])
					}
					_ = a;
					var o = e.data.total_count;
					if (o <= c) {
						o = n.length
					}
					if (o > 1e3) {
						o = "1000+"
					}
					$("#batch-buy-total-count").text(o);
					$("#batch-buy-total-count").parent().show();
					y(s);
					if (s) {
						h(n)
					}
				}
			})
		};
		var y = function (e) {
			if (!_.length || a <= 0) {
				s = 0;
				$("#j_popup_batchbuy .total_amount").html(formatPriceYuan(0));
				$("#j_popup_batchbuy .total_amount_custom").html(formatPriceCustom(0));
				$("#j_popup_batchbuy .i_Btn_main").addClass("i_Btn_disabled");
				return
			}
			if (a > c && c <= _.length) {
				Buff.toast(i18n("buying_in_bulk_quantity_can") + c + i18n("member"));
				$("#batch-buy-num").val(c).trigger("change");
				return
			}
			if (a > _.length) {
				Buff.toast(i18n("the_purchase_amount_can_not"), {
					type: "error"
				});
				$("#batch-buy-num").val(_.length).trigger("change");
				return
			}
			s = _[a - 1];
			$("#j_popup_batchbuy .total_amount").html(formatPriceYuan(s));
			$("#j_popup_batchbuy .total_amount_custom").html(formatPriceCustom(s));
			if (!e) {
				$("#j_popup_batchbuy .i_Btn_main").removeClass("i_Btn_disabled")
			}
		};
		var b = function (e, t, a) {
			sendRequest("/account/api/pay_password/verify", {
				data: {
					password: e,
					type: 1,
					sell_orders: t
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					a(e.data.password_token)
				}
			})
		};
		var n = function () {
			$("#batch-buy-search-sell-orders").click(function () {
				v(false)
			});
			$("#batch-buy-max-price").on("input", function () {
				$("#batch-buy-price-custom").text("");
				var e = $(this).val();
				if (!e) return;
				$("#batch-buy-price-custom").text(formatPriceNormalCustom(e, true))
			});
			$("#batch-buy-max-price").change(function () {
				o = $(this).val();
				if (o > e) {
					$(this).val(e).trigger("change").trigger("input")
				}
				v(false)
			}).trigger("change");
			$("#batch-buy-cooldown").change(function () {
				l = $(this).attr("value") ? 1 : 0;
				v(false)
			}).trigger("change");
			$("#popup_bulkbuy_filters .w-Select-Multi").change(function (e) {
				v(false)
			});
			$("#popup_bulkbuy_filters .w-Select-Multi input").change(function (e) {
				v(false)
			});
			$("#batch-buy-num").on("keypress", function () {
				var e = event.keyCode || event.charCode;
				if (e >= 48 && e <= 57) return true;
				return false
			});
			$("#batch-buy-num").change(function () {
				a = $(this).val();
				y()
			}).trigger("change");
			$("#j_popup_batchbuy .i_Btn_main").click(function () {
				if ($(this).hasClass("i_Btn_disabled")) return;
				$(this).addClass("i_Btn_disabled");
				var n = this;
				o = $("#batch-buy-max-price").val();
				a = $("#batch-buy-num").val();
				var r = [];
				for (var e = 0; e < m.length && r.length < a; e++) {
					r.push(m[e])
				}
				if (r.length == 0) return;
				sendRequest("/api/market/goods/batch_buy/preview", {
					data: {
						game: B,
						goods_id: P,
						sell_orders: r
					},
					dataType: "json",
					method: "POST",
					success: function (e) {
						$(n).removeClass("i_Btn_disabled");
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "warning"
							});
							return
						}
						var t = e.data.price;
						var a = payMethodPopup();
						var i = {
							pay_methods: e.data.pay_methods,
							price: t,
							payment_tips: e.data.payment_tips_highlight,
							onPaymethodChange: function (e, t, a) {
								u = e;
								d = t !== "false";
								f = a
							},
							onConfirm: function () {
								Popup.hide();
								if (ejzbAuthVerifyManager().process(f, a, i, t)) {
									return
								}
								if (!d) {
									payPasswordPopup(s, function (e) {
										Popup.hide();
										b(e, r, function (e) {
											p = e;
											v(true)
										})
									}, function () {
										Popup.hide();
										a.show(i)
									}).show();
									return
								}
								v(true)
							}
						};
						if (e.data.rational_confirm && !localStorage.getItem("remember_dismiss_rational_confirm")) {
							Buff.alert({
								title: e.data.rational_confirm.title,
								message: e.data.rational_confirm.message,
								hideCancel: true,
								confirmText: i18n("i_know"),
								success: function () {
									Popup.hide();
									localStorage.setItem("remember_dismiss_rational_confirm", "1");
									a.show(i)
								}
							});
							return
						}
						a.show(i)
					}
				})
			})
		};
		var r = function () {
			$("#j_popup_pay").remove();
			$("#j_popup_batchbuy").remove();
			$("#j_popup_supply").remove();
			$("#j_popup_bargain").remove();
			var e = template_render("batch_buy_pat", {
				goods: t,
				capacity: c
			});
			$("body").append(e);
			Popup.show("j_popup_batchbuy");
			w();
			k();
			n()
		};
		var w = function () {
			assetTagFilter().init(j);
			var t = [];
			$("#popup_bulkbuy_filters").find(".w-Select-Multi").each(function () {
				var e = $(this);
				e.removeClass("black");
				e.find("ul").width("160px");
				Buff.initSelectMulti(e);
				e.css("width", "160px").css("max-width", "unset");
				e.find("ul").width("160px");
				e.addClass("no-hash-update");
				t.push(e)
			});
			var e = $(".popup_bulkbuy_row_content").first();
			e.parent().appendTo("#popup_bulkbuy_filters");
			for (var a = 0; a < t.length; a++) {
				if (e.find("div").length >= 2) {
					var i = $('<div class="popup_bulkbuy_row" style="margin-top: 12px;"><div class="c_Gray popup_bulkbuy_row_header"></div><div class="popup_bulkbuy_row_content"></div></div>');
					i.appendTo("#popup_bulkbuy_filters");
					e = i.find(".popup_bulkbuy_row_content")
				}
				t[a].appendTo(e);
				e.parent().show()
			}
			var n = "";
			if ($("#popup_bulkbuy_filters").find("#custom_sticker").length > 0) {
				var r = "popup_custom_sticker";
				n = "sticker"
			} else if ($("#popup_bulkbuy_filters").find("#custom_patch").length > 0) {
				var r = "popup_custom_patch";
				n = "patch"
			}
			if (n) {
				var o = $("#" + r).clone(false);
				o.appendTo("body");
				r = "bulkbuy_" + r;
				$("#" + r).remove();
				o.attr("id", r);
				var s = custom_sticker(r, n);
				var c = "#popup_bulkbuy_filters .w-Select-Multi[name=extra_tag_ids]";
				s.init($(c), function (e) {
					switch (e.event) {
						case "custom_sticker_confirm":
							$(c).attr("value", e.data.extra_tag_ids_val);
							if (!e.data.extra_tag_ids_val) {
								$(c).find("li").removeClass("on");
								var t = $(c).find('h6[value=""]').parents("li");
								$(c).find("h3").text(t.addClass("on").text())
							}
							$(c).trigger("change");
							break;
						case "custom_sticker_confirm_jump":
							break;
						case "custom_sticker_cancel":
							break;
						default:
							break
					}
				}, true)
			}
		};
		var k = function () {
			$(".detail-header .detail-cont p>span").each(function () {
				var e = $(this).find("label").text() + " " + $(this).contents().last().text();
				$("#batch-buy-goods-tags").append($("<p />", {
					text: e,
					class: "c_Gray"
				}))
			})
		};
		var x = function () {
			sendRequest("/api/market/goods/batch_buy/preview", {
				data: {
					game: B,
					goods_id: P,
					sell_orders: []
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					pay_methods = e.data.pay_methods;
					r(pay_methods)
				}
			})
		};
		var C = function () {
			sendRequest("/api/market/goods/info", {
				data: {
					goods_id: P,
					game: B,
					with_sell_max_price: "1"
				},
				method: "GET",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					t = e.data;
					r()
				}
			})
		};
		var T = function () {
			sendRequest("/api/market/backpack", {
				data: {
					game: B
				},
				method: "GET",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					c = e.data.backpack_limit - e.data.backpack_count;
					if (c <= 0) {
						Buff.alert({
							title: i18n("purchase_failed"),
							message: i18n("backpack_capacity_is_insufficient_can")
						});
						return
					}
					C()
				}
			})
		};
		c = 50;
		C()
	};
	var a = function () {
		return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight
	};
	var i = function () {
		return window.pageYOffset || document.documentElement.scrollTop
	};
	var L = function () {
		$(document).on("change", ".pinterest-selects .w-Selectsearch", function () {
			o(true)
		});
		$(document).on("click", "#upload_file_label", function () {
			$("#upload_file").click()
		});
		$(document).on("change", "#upload_file", function (e) {
			var t = e.target.files;
			var a = t[0];
			sendRequest("/api/feedback/gen_token", {
				method: "GET",
				showLoading: false,
				success: function (e) {
					options = {
						file: a,
						upload_url: e.data.url,
						max_file_size: e.data.max_size,
						token: e.data.token,
						callback: function (e) {
							$("#upload_file_label .fileupload").html(format_html('<a href="<%= data.url %>" target="_blank" onclick="event.stopPropagation();"><img src="<%= data.url %>"/></a>', {
								data: e
							}));
							$("#upload_file_label span").text(i18n("click_on_upload_picture"))
						},
						onprogress: function (e) {
							if (e.lengthComputable) {
								var t = (e.loaded / e.total * 100).toFixed(2);
								$("#upload_file_label span").text(i18n("is_being_uploaded") + t + "%")
							}
						}
					};
					uploadFile(options)
				}
			})
		});
		$(document).on("click", "#j_popup_pubgwiki .i_Btn_main.enabled", function () {
			var t = this;
			var e = $("#upload_file_label img").attr("src");
			if (!e) {
				Buff.toast(i18n("please_upload_picture"));
				return
			}
			var a = $("#j_popup_pubgwiki .input-cont input").val();
			if (a && a.length > 24) {
				Buff.toast(i18n("do_not_exceed_24_characters"));
				return
			}
			$(this).removeClass("enabled");
			setTimeout(function () {
				$(t).addClass("enabled")
			}, 500);
			var i = {
				icon_url: e,
				desc: a,
				appid: g.appid
			};
			var n = [];
			$("#j_popup_pubgwiki .w-Selectsearch").each(function () {
				var e = $(this).attr("value");
				if (e) n.push(e)
			});
			if (n.length > 0) {
				i.goods_ids = n.join(",")
			}
			sendRequest("/api/market/preview/create", {
				method: "POST",
				showLoading: true,
				data: i,
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast(i18n("upload_success!_your_players_show"), {
							type: "success"
						});
						setTimeout(function () {
							window.location.reload()
						}, 1e3)
					} else {
						$(t).addClass("enabled");
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$(document).on("click", "#reset-filter", function () {
			I()
		});
		$(document).on("change", "#j_select-Order", function () {
			o(true)
		});
		$(document).on("click", ".pinterest-action", function (e) {
			e.stopPropagation();
			if ($(this).hasClass("disabled")) return;
			$(this).addClass("disabled");
			var i = $(this).data("previewid");
			var n = $('.pinterest-action[data-previewid="' + i + '"]');
			if ($(this).hasClass("on")) {
				sendRequest("/api/market/preview/cancel/up", {
					method: "POST",
					data: {
						preview_id: i,
						game: B
					},
					showLoading: false,
					success: function (e) {
						n.removeClass("disabled");
						if (e.code == "OK") {
							n.find("span").text(e.data.ups_num);
							n.removeClass("on");
							for (var t = 0; t < p.length; t++) {
								var a = p[t];
								if (a.id == i) {
									a.up = false;
									a.ups_num = e.data.ups_num;
									break
								}
							}
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					},
					complete: function () {
						n.removeClass("disabled")
					}
				})
			} else {
				sendRequest("/api/market/preview/up", {
					method: "POST",
					data: {
						preview_id: i,
						game: B
					},
					showLoading: false,
					success: function (e) {
						n.removeClass("disabled");
						if (e.code == "OK") {
							n.find("span").text(e.data.ups_num);
							n.addClass("on");
							for (var t = 0; t < p.length; t++) {
								var a = p[t];
								if (a.id == i) {
									a.up = true;
									a.ups_num = e.data.ups_num;
									break
								}
							}
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					},
					complete: function () {
						n.removeClass("disabled")
					}
				})
			}
		});
		$(window).on("scroll", function () {
			var e = $(".new-tab li.user-preview").hasClass("on");
			if (e && l && a() + i() + t > l.getClientHeight()) {
				if (u === "loading" || u === "end" || u === "empty") {
					return false
				}
				o()
			}
		});
		$(document).on("init", ".pinterest-selects .w-Selectsearch", function () {
			if ($(this).data("init")) return;
			$(this).data("init", true);
			var e = $(this).data("categorygroup");
			new selectSearch({
				id: "#j_Selectsearch-" + e,
				url: "/api/market/goods/all",
				queryData: {
					game: B,
					category_group: e,
					sort_by: "price.desc",
					page_size: 200
				},
				setParams: function (e) {
					return {
						search: e
					}
				}
			})
		});
		$(document).on("init", "#j_popup_pubgwiki .w-Selectsearch", function () {
			if ($(this).data("init")) return;
			$(this).data("init", true);
			var e = $(this).data("categorygroup");
			new selectSearch({
				id: "#j_Selectsearch_upload-" + e,
				url: "/api/market/goods/all",
				queryData: {
					game: B,
					category_group: e,
					sort_by: "price.desc",
					page_size: 200
				},
				setParams: function (e) {
					return {
						search: e
					}
				}
			})
		});
		$(document).on("click", ".pinterest-img", function () {
			Popup.show("j_popup_slide");
			var e = $(this).data("index");
			var t = $(this).data("previewid");
			var n = '<div class="popup_slide-main swiper-container" id="j_slideBox">                    <ul class="popup_slide-pic swiper-wrapper">                    </ul>                    <a class="popup_slide-prev icon_slide_left2 swiper-button-prev" href="javascript:void(0)" ></a>                    <a class="popup_slide-next icon_slide_right2 swiper-button-next" href="javascript:void(0)"></a>                </div>';
			$("#j_slideWrapper").html(n);
			var t = $(this).data("previewid");
			var a = {
				game: B,
				direction: "larger",
				cursor: t,
				goods_ids: _.goods_ids,
				sort_by: _.sort_by
			};
			var i = {
				game: B,
				direction: "smaller",
				cursor: t,
				goods_ids: _.goods_ids,
				sort_by: _.sort_by
			};
			var r = function (e) {
				if (f) {
					clearTimeout(f)
				}
				if (m) {
					m.abort()
				}
				$(".popup_slide_list ul").html("");
				f = setTimeout(function () {
					e = e || $("#j_slideBox .swiper-slide-active").data("previewid");
					m = sendRequest("/api/market/preview/goods", {
						method: "GET",
						data: {
							preview_id: e,
							game: B
						},
						showLoading: false,
						showError: false,
						success: function (e) {
							if (e.code == "OK") {
								var t = "";
								for (var a = 0; a < e.data.items.length; a++) {
									var i = e.data.items[a];
									t += format_html('<li><span><%- formatPriceNormalCustom(item.sell_reference_price) %></span><a href="/goods/<%= item.id %>" target="_blank"><img src="<%= item.goods_info.icon_url %>"/></a></li>', {
										item: i
									})
								}
								$(".popup_slide_list ul").html(t)
							}
						}
					})
				}, 500)
			};
			var o = new Swiper(".swiper-container", {
				navigation: {
					nextEl: ".swiper-button-next",
					prevEl: ".swiper-button-prev"
				},
				on: {
					slideChange: function () {
						var e = this.slides.length,
							t = this;
						r(null);
						if (e - this.activeIndex <= 5) {
							_preview_slide_page_num += 1;
							var a = Object.assign({}, _);
							a.page_num = _preview_slide_page_num;
							sendRequest("/api/market/preview", {
								method: "GET",
								data: a,
								showLoading: false,
								success: function (e) {
									if (e.code == "OK") {
										if (_preview_slide_page_num > e.data.total_page) {
											return
										}
										n = [];
										for (var t = 0; t < e.data.items.length; t++) {
											var a = e.data.items[t];
											var i = template_render("swiper_slide_pat", {
												item: a
											});
											n.push(i)
										}
										o.appendSlide(n)
									}
								}
							})
						}
					}
				}
			});
			var n = [];
			for (var s = 0; s < p.length; s++) {
				var c = template_render("swiper_slide_pat", {
					item: p[s]
				});
				n.push(c)
			}
			o.appendSlide(n);
			o.slideTo(e, 0, false);
			r(t)
		});
		$(document).on("click", "#j-showall", function () {
			$(this).hide();
			$("#j-hideall").show();
			$("#j_popup_pubgwiki .w-Selectsearch.isextra").toggle()
		});
		$(document).on("click", "#j-hideall", function () {
			$(this).hide();
			$("#j-showall").show();
			$("#j_popup_pubgwiki .w-Selectsearch.isextra").toggle()
		})
	};
	var N = function (i, o) {
		if (!i) {
			i = function (e) {
				return {
					tag_ids: "",
					page_num: "",
					min_paintwear: "",
					max_paintwear: "",
					min_fade: "",
					max_fade: "",
					min_price: "",
					max_price: "",
					extra_tag_ids: "",
					sort_by: "",
					name_tag: "",
					wearless_sticker: ""
				}
			}
		}
		if (!o) {
			o = function (e, t) {
				return ""
			}
		}
		w = getParamsFromHash().tab || "selling";
		$(".new-tab li a").click(function (e) {
			e.preventDefault();
			if ($(this).parent().hasClass("on")) {
				return
			}
			$("#batch-buy-btn").parent().hide();
			$(".rank-Type").hide();
			jQuery.xhrPool.abort(x);
			if ($(this).parent().hasClass("selling")) {
				var t = o(w, "selling");
				extraTagIdsParser.parse(t.extra_tag_ids, t);
				t.page_num = "";
				t.tab = "selling";
				updateHashData(t);
				w = "selling"
			} else if ($(this).parent().hasClass("prelist")) {
				var t = o(w, "prelist");
				extraTagIdsParser.parse(t.extra_tag_ids, t);
				t.page_num = "";
				t.tab = "prelist";
				updateHashData(t);
				w = "prelist"
			} else if ($(this).parent().hasClass("buying")) {
				var t = o(w, "buying");
				t.page_num = "";
				t.tab = "buying";
				updateHashData(t);
				w = "buying"
			} else if ($(this).parent().hasClass("bundle")) {
				var t = o(w, "bundle");
				t.page_num = "";
				t.tab = "bundle";
				updateHashData(t);
				w = "bundle"
			} else if ($(this).parent().hasClass("history")) {
				var t = o(w, "history");
				t.page_num = "";
				t.tab = "history";
				updateHashData(t);
				w = "history"
			} else if ($(this).parent().hasClass("price-chart")) {
				var t = o(w, "price-chart");
				t.tab = "price-chart";
				updateHashData(t);
				w = "price-chart"
			} else if ($(this).parent().hasClass("related")) {
				var t = {
					tab: "related"
				}
			} else if ($(this).parent().hasClass("user-preview")) {
				var t = o(w, "user-preview");
				t.tab = "user-preview";
				updateHashData(t);
				w = "user-preview"
			} else if ($(this).parent().hasClass("paintwear-rank")) {
				var t = o(w, "paintwear-rank");
				t.page_num = 1;
				t.tab = "paintwear-rank";
				updateHashData(t);
				w = "paintwear-rank"
			}
			if (typeof t != "undefined") {
				hashParams = getParamsFromHash();
				if (t.tab != "buying") {
					var a = t.tag_ids || T();
					var i = t.tier || hashParams.tier;
					var n = t.min_paintwear || hashParams.min_paintwear;
					var r = t.max_paintwear || hashParams.max_paintwear;
					if (a == k.tag_id) {
						t.tag_ids = ""
					}
					if (i == k.tier) {
						t.tier = ""
					}
					if (n == k.paintwear) {
						t.min_paintwear = ""
					}
					if (r == k.paintwear) {
						t.max_paintwear = ""
					}
				}
				updateHashData(t)
			}
		});
		$("#not-allow-tradable-cooldown").change(function () {
			if ($(this).attr("value")) {
				updateHash("allow_tradable_cooldown", 0)
			} else {
				updateHash("allow_tradable_cooldown", 1)
			}
		}).trigger("change");
		L();
		if (getParamsFromHash().allow_tradable_cooldown == "0") {
			$("#not-allow-tradable-cooldown").attr("value", "yes");
			$("#not-allow-tradable-cooldown span").addClass("on")
		} else {
			$("#not-allow-tradable-cooldown").attr("value", "");
			$("#not-allow-tradable-cooldown span").removeClass("on")
		}
		$(window).on("hashchange", function () {
			if (r) {
				return
			}
			if (C) C.hide();
			if (h) h.hide();
			if (v) v.hide();
			if (y) y.hide();
			if (b) b.hide();
			var e = getParamsFromHash().tab;
			if (e == "buying") {
				E()
			} else if (e == "history") {
				q()
			} else if (e == "price-chart") {
				R()
			} else if (e == "related") {
				A()
			} else if (e == "user-preview") {
				I()
			} else if (e == "paintwear-rank") {
				M()
			} else if (e == "prelist") {
				S(true)
			} else if (e == "bundle") {
				O(true)
			} else {
				S()
			}
		}).trigger("hashchange");
		$("body").on("change", "#order-by-paintwear", function () {
			if ($(this).hasClass("w-Order_asc")) {
				updateHashData({
					page_num: 1,
					sort_by: "paintwear.asc"
				})
			} else {
				updateHashData({
					page_num: 1,
					sort_by: "paintwear.desc"
				})
			}
		});
		$("body").on("change", "#order-by-price", function () {
			if ($(this).hasClass("w-Order_asc")) {
				updateHashData({
					page_num: 1,
					sort_by: "price.asc"
				})
			} else {
				updateHashData({
					page_num: 1,
					sort_by: "price.desc"
				})
			}
		});
		$("body").on("change", "#order-by-cooldown", function () {
			if ($(this).hasClass("w-Order_asc")) {
				updateHashData({
					page_num: 1,
					sort_by: "cooldown.asc"
				})
			} else {
				updateHashData({
					page_num: 1,
					sort_by: "cooldown.desc"
				})
			}
		});
		$("body").on("change", "#mode-select", function () {
			updateHashData({
				page_num: 1,
				mode: $(this).attr("value")
			})
		});
		$("body").on("change", "#history-type", function () {
			updateHash("history", $(this).attr("value"))
		});
		$("body").on("click", "#batch-buy-btn, #batch-buy-btn2", function () {
			sendRequest("/account/api/user/info/v2", {
				dataType: "json",
				method: "GET",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error);
						return
					}
					if (g.is_partner_appid) {
						if (e.data.user_info.partner_role_info && e.data.user_info.partner_role_info[g.game]) {
							F()
						} else {
							userProfile().initBindBadlanders();
							Popup.show("j_popup_g101_bind")
						}
						return
					}
					if (e.data.user_info.steamid) {
						if (e.data.user_info.trade_url) {
							F()
						} else {
							Buff.alert({
								title: i18n("prompt"),
								message: i18n("you_have_yet_to_bind"),
								hideCancel: true,
								success: function () {
									window.open("/user-center/profile", "_blank")
								}
							})
						}
					} else {
						Buff.alert({
							title: i18n("unbound_steam"),
							message: i18n("detects_that_you_are_also"),
							hideCancel: true,
							confirmText: i18n("to_bind"),
							success: function () {
								window.open("/user-center/profile", "_blank")
							}
						})
					}
				}
			})
		});
		$("body").on("click", ".cancel-buy-order", function () {
			var e = $(this).data("orderid");
			var t = $(this).data("real-num") + "/" + $(this).data("num");
			var a = formatPriceNormalYuan(parseFloat($(this).data("price") * ($(this).data("num") - $(this).data("real-num"))));
			var i = $(this).data("pay-method");
			var n = "";
			if (i == 6 || i == 7 || i == 44 || i == 45) {
				n = i18n("will_be_returned_to_origin", {
					money: a
				})
			} else if (i != 43) {
				n = i18n("will_be_returned_to_you_buff_b", {
					money: a
				})
			}
			Buff.alert({
				title: i18n("termination_buying"),
				message: i18n("whether_to_terminate_the_purchase", {
					progress: t,
					refund_desc: n
				}),
				success: function () {
					var t = function () {
						sendRequest("/api/market/buy_order/cancel", {
							data: {
								game: g.game,
								buy_orders: [e]
							},
							dataType: "json",
							method: "POST",
							success: function (e) {
								if (e.code == "OK") {
									var t = Object.values(e.data)[0];
									if (t === "OK") {
										Buff.toast(i18n("cancel_buying_success"), {
											type: "success"
										});
										setTimeout(function () {
											window.location.reload()
										}, 1e3)
									} else {
										Buff.toast(t, {
											type: "error"
										})
									}
								} else {
									Buff.toast(e.error, {
										type: "error"
									})
								}
							}
						})
					};
					sendRequest("/api/market/buy_order/cancel/check_rate_limit", {
						data: {
							game: g.game,
							buy_orders: [e]
						},
						dataType: "json",
						method: "POST",
						success: function (e) {
							if (e.code == "OK") {
								t()
							} else if (e.code == "Request Rate Will Be Limited") {
								Buff.alert({
									title: i18n("termination_buying"),
									message: e.error,
									success: t
								})
							} else {
								Buff.toast(e.error, {
									type: "error"
								})
							}
						}
					})
				}
			})
		});
		$("body").on("click", ".j_Goods-jump", function () {
			var e = $(this).data("goodsid");
			r = true;
			var t = $(this).data("is_change");
			var a = i(t);
			extraTagIdsParser.parse(a.extra_tag_ids, a);
			if (!t) {
				a["min_paintwear"] = "";
				a["max_paintwear"] = ""
			}
			a["tag_ids"] = "";
			a["paintseed_group"] = "";
			a["order_type"] = "";
			a["page_num"] = 1;
			updateHashData(a);
			window.location.href = "/goods/" + e + "#" + $.param(getParamsFromHash()).replace(/\+/g, "%20")
		});
		if (getParams()["from"] === "market") {
			var e = sessionStorage.getItem("breadcrumb_text");
			var t = sessionStorage.getItem("breadcrumb_hash") || "";
			if (t && t.substr(0, 1) != "#") {
				t = "#" + t
			}
			if (e) {
				$("span.cru-filter").append($("<a />", {
					href: "/market/" + B + t,
					text: e
				}));
				$(".cru-filter").show()
			} else {
				$("span.cru-market a").attr("href", "/market/" + B + t)
			}
		}
		$("#j_showpackage").hover(function () {
			var e = $(this).offset().top,
				t = e - 20,
				a = "auto";
			if (e + $("#j_packagebox").height() > $(window).height()) {
				t = "auto";
				a = 10 - $(window).scrollTop()
			}
			$("#j_packagebox").css({
				left: $(this).offset().left + $(this).width() + 10,
				top: t,
				bottom: a
			}).show()
		}, function () {
			boxTimer = setTimeout(function () {
				$("#j_packagebox").hide()
			}, 200)
		});
		$("#j_packagebox").hover(function () {
			if (boxTimer) {
				clearTimeout(boxTimer)
			}
		}, function () {
			$(this).hide()
		});
		$("body").on("click", ".table-toggle a", function () {
			if ($(".my-paintwear-rank.need-hide").css("display") === "none") {
				$(".my-paintwear-rank.need-hide").css("display", "table-row");
				$(this).html(format_html('<%= i18n("click_to_collapse") %>&nbsp<div class="icon_arrow down"></div>'))
			} else {
				$(".my-paintwear-rank.need-hide").css("display", "none");
				$(this).html(format_html('<%= i18n("click_to_expand") %>&nbsp<div class="icon_arrow up"></div>'))
			}
		});
		var a = function () {
			var e = {
				page_num: 1,
				tab: "paintwear-rank"
			};
			var t = $(".w-Select[id=rank_type-Select]").attr("value") || 0;
			e.rank_type = t;
			var a = $(".w-Select[id=rank_order_type-Select]").attr("value");
			if (a) {
				e.order_type = a
			}
			updateHashData(e)
		};
		$("body").on("change", "#rank_type-Select", function () {
			a()
		});
		$("body").on("change", "#rank_order_type-Select", function () {
			a()
		});
		s = "";
		c = $("#price-history-days").find("h3").text();
		$("body").on("change", "#price-history-days", function () {
			var e = function () {
				var e = "#price-history-days";
				if (s) {
					$(e + " ul li").removeClass("on");
					$(e).find("ul li[value=" + s + "]").addClass("on")
				}
				if (c) {
					$(e).find("h3").text(c)
				}
			};
			var t = $(this).attr("value");
			var a = $(this).find("li[value=" + t + "]");
			if (a && a.data("disabled")) {
				var i = a.data("disabled-confirm");
				Buff.alert({
					title: i.title,
					message: i.message,
					hideCancel: i.entry.url ? false : true,
					hideConfirm: i.entry.url ? false : true,
					success: function () {
						e();
						window.open(i.entry.url)
					},
					cancel: function () {
						e()
					},
					onClose: function () {
						e()
					}
				});
				return
			}
			s = t;
			c = a.text();
			updateHash2("days", t);
			localStorage.setItem("history_price_days_" + g.appid, t)
		});
		$("body").on("change", "#price-history-type", function () {
			var e = $(this).attr("value");
			var t = $(this).find("li[value=" + e + "]");
			$("#price-history-type").find("h3").text(t.text());
			updateHash2("buff_price_type", e);
			localStorage.setItem("buff_price_type_" + g.appid, e)
		});
		if (!has_buff_sell_num_history) {
			$("#with_sell_num").attr("disabled", true)
		}
		$("body").on("click", "#with_sell_num", function () {
			var e = $("#with_sell_num").attr("class") == "on";
			if (!has_buff_sell_num_history) {
				$("#with_sell_num").removeClass("on");
				var t = i18n("go_to_point_lottery");
				Buff.alert({
					title: i18n("prompt"),
					message: t,
					hideCancel: true,
					hideConfirm: true,
					success: function () {
						reset_selection()
					},
					cancel: function () {
						reset_selection()
					},
					onClose: function () {
						reset_selection()
					}
				})
			}
			if (has_buff_sell_num_history) {
				localStorage.setItem("with_sell_num_" + g.appid, e);
				updateHash2("with_sell_num", e)
			}
		});
		var n = null;
		$("#j_fav").on("mouseenter", function () {
			clearTimeout(n);
			if ($("#j_fav_list").is(":visible")) return;
			var e = [];
			$("#j_fav_list li.add-bookmark").each(function () {
				if ($(this).data("target-type") == 5) {
					e.push($(this).data("target-id"))
				}
			});
			sendRequest("/account/api/check_bookmark/batch", {
				method: "GET",
				data: {
					target_type: 5,
					target_ids: e.join(",")
				},
				showLoading: false,
				showError: false,
				success: function (t) {
					if (t.code != "OK") return;
					var a = bookmark();
					Object.keys(t.data.bookmarked).forEach(function (e) {
						a.setCacheData(5, e, t.data.bookmarked[e])
					});
					a.updateView();
					$("#j_fav_list").show()
				}
			})
		});
		$("#j_fav").on("mouseleave", function () {
			n = setTimeout(function () {
				$("#j_fav_list").hide()
			}, 400)
		});
		$("body").on("click", "a.csgo_inspect_img_btn_to_login", function (e) {
			e.stopPropagation();
			loginModule.showLogin()
		});
		$("#custom_inspect_btn").click(function (e) {
			e.preventDefault();
			var t = T();
			if (t) {
				window.location.href = "/market/custom_inspect#goods_id=" + P + "&tags_id=" + t
			} else {
				window.location.href = "/market/custom_inspect#goods_id=" + P
			}
		});
		bundleInventory().init_bundle_inventory_filter("market", g.game, "#asset_tag-filter-bundle");
		bundleInventory().init();
		bundleInventory().init_bundle_preview();
		bundleInventory().init_show_same_goods_checkbox()
	};
	var D = function (e) {
		C = e
	};
	var z = function (e) {
		h = e
	};
	var G = function (e) {
		v = e
	};
	var K = function (e) {
		y = e
	};
	var U = function (e) {
		j = e
	};
	var H = function (e) {
		b = e
	};
	return {
		init: N,
		setTagFilter: D,
		setTagFilterHistory: z,
		setTagFilterBuyOrder: G,
		setTagFilterChart: K,
		setTagFilterBatchBuyConfig: U,
		setTagFilterBundleOrder: H
	}
};
var FilterDataManager = function () {
	var h = {
		global: {}
	};
	var l = ["goods_id", "tab"];
	var u = ["tag_ids", "paintseed", "tier", "paintseed_group", "float_range", "fade_range", "name_tag", "min_price", "max_price", "rank_type", "extra_tag_ids"];
	var d = ["tag_ids", "paintseed", "tier", "paintseed_group", "min_paintwear", "max_paintwear", "min_fade", "max_fade", "name_tag", "min_price", "max_price", "rank_type", "extra_tag_ids"];
	return {
		get_key: function () {
			return "fdm_data"
		},
		current_tab: function () {
			return getParamsFromHash().tab || "selling"
		},
		get_exclusive_groups: function () {
			return [
				["paintseed", "tier", "paintseed_group"]
			]
		},
		get_data_imp: function (e, t, a) {
			if (t == "tag_ids") {
				var i = [];
				for (var n in e) {
					if (n == "unlock_style" || n.indexOf("gem") !== -1) {
						if (!a && !e[n]["value"]) {
							continue
						}
						var r = e[n];
						r["key"] = n;
						i.push(r)
					}
				}
				return i
			}
			if (["float_range", "fade_range"].includes(t)) {
				var o = [],
					s = {
						float_range: ["min_paintwear", "max_paintwear"],
						fade_range: ["min_fade", "max_fade"]
					},
					c = s[t];
				for (var _ = 0; _ < c.length; _++) {
					var l = c[_];
					if (e[l]) {
						o.push(e[l])
					}
				}
				return o
			}
			return e[t] ? [e[t]] : []
		},
		get_data: function (e, t) {
			var t = t || h[this.current_tab()].data;
			return this.get_data_imp(t, e, false)
		},
		get_remain_data: function (e, t) {
			var t = t || h[this.current_tab()].remain_data;
			return this.get_data_imp(t, e, true)
		},
		parse_tag_ids_imp: function (e, t) {
			var o = {};
			for (var a = 0; a < e.length; a++) {
				var i = e[a].split("--");
				var n = null;
				for (var r = 0; r < t.length; r++) {
					var s = t[r];
					var c = function (e, t, a) {
						for (var i = 0; i < e.length; i++) {
							var n = e[i];
							if (n.id && n.name) {
								var r = [t, n.name].join("--");
								if (r == a) {
									o[r] = n.id.toString();
									return true
								}
							}
						}
						return false
					};
					n = null;
					if (s.depth == 1) {
						if (s.category == i[0] || s.type == i[0]) {
							n = s
						}
					} else if (s.depth == 2) {
						for (var _ = 0; _ < s.items.length; _++) {
							if (s.items[_].category == i[0]) {
								n = s.items[_];
								break
							}
						}
					}
					if (!n) {
						continue
					}
					if (c(n.items, n.category || n.type, e[a])) {
						break
					}
				}
			}
			return o
		},
		parse_tag_ids: function (e, t, a) {
			if (!t || !a || !a.asset_tags) {
				return t ? {
					data: {},
					remain_data: t.split(",")
				} : {}
			}
			var i = t.split(",");
			var n = this.parse_tag_ids_imp(i, a.asset_tags);
			var r = Object.keys(n);
			var o = i.filter(function (e) {
				return r.indexOf(e) == -1
			});
			return {
				data: n,
				remain_data: o
			}
		},
		parse_tier_paintseed_group: function (e, t) {
			if (!t) {
				return {}
			}
			var a = e.split("--");
			var i = t.paintseed_filters;
			if (!i) {
				return {}
			}
			var n = [];
			if (a[0] == "tier" || a[0] == "paintseed_group") {
				for (var r = 0; r < i.length; r++) {
					if (i[r].type != a[0]) {
						continue
					}
					n = i[r].items;
					break
				}
			} else if (a[0] == "paintseed") {
				if (i.length >= 3) {
					if (i[2].type == a[0]) {
						n = i[2].items
					}
				} else if (i.length == 0 || i.length == 1 && i[0].type == a[0]) {
					var o = {};
					o[e] = a[1];
					return o
				}
			}
			for (var s = 0; s < n.length; s++) {
				var c = n[s];
				if (c.name == a[1]) {
					var o = {};
					o[e] = c.value;
					return o
				}
			}
			return {}
		},
		parse_float_fade_range_imp: function (e, t) {
			for (var a = 0; a < t.length; a++) {
				var i = t[a];
				var n = [i[0], i[1]].join("-");
				if (n == e) {
					return true
				}
			}
			return false
		},
		parse_float_fade_range: function (e, t, a) {
			var i = function (e) {
				var t = [];
				var a = {
					items: [],
					text: t
				};
				for (var i = 0; i < e.length; i++) {
					var n = e[i];
					var r = n.split("--");
					var o = r[0],
						s = r.length == 2 ? r[1] : "";
					t.push(s);
					a["items"].push({
						key: o,
						text: s
					})
				}
				a["text"] = rangeKeyParser.deparse(t[0], t[1]);
				return a
			};
			var n = t.split(",");
			var r = i(n);
			if (r["text"].indexOf("-") !== -1) {
				var o = a.matcher;
				if (!o) {
					return
				}
				var s = {
					float_range: o["paintwear_choices"],
					fade_range: o["fade_choices"]
				};
				var c = s[e] || [];
				var _ = false;
				if (c.length) {
					_ = true
				}
			} else if (r["text"].indexOf("≥") != -1 || r["text"].indexOf("≤") != -1) {
				var _ = true
			}
			if (_) {
				for (var l = 0; l < r.items.length; l++) {
					r.items[l].value = r.items[l].text;
					var u = r.items[l];
					var d = {};
					d[[u.key, u.text].join("--")] = u.value;
					this.merge_data_ele(a["data"], this.translate_data(d))
				}
			} else {
				var p = [];
				for (var l = 0; l < r.items.length; l++) {
					var u = r.items[l];
					p.push([u.key, u.text].join("--"))
				}
				this.merge_data_ele(a["remain_data"], this.translate_remain_data(p))
			}
		},
		parse_paintseed_group_hash_name: function (e, t) {
			var a = [];
			for (var i = 0; i < e.length; i++) {
				var n = e[i];
				var r = "";
				var o = t[1].type;
				var s = t[1].name;
				var c = t[1].items;
				for (var _ = 0; _ < c.length; _++) {
					var l = c[_];
					if (l.value && l.value == n) {
						r = [
							[s, o].join("_"), l.name
						].join(":");
						a.push(r)
					}
				}
			}
			return a
		},
		parse_tag_ids_hash_name: function (e, t) {
			var a = {};
			for (var i = 0; i < e.length; i++) {
				var n = e[i];
				for (var r = 0; r < t.length; r++) {
					var o = t[r];
					if (o.depth == 1) {
						for (var s = 0; s < o.items.length; s++) {
							var c = o.items[s];
							if (c.category && c.id && c.id == n) {
								a[n] = [
									["deep1", [o.type].join("_")].join("="), c.name
								].join("--")
							}
						}
					} else if (o.depth == 2) {
						for (var s = 0; s < o.items.length; s++) {
							for (var _ = 0; _ < o.items[s].items.length; _++) {
								var c = o.items[s].items[_];
								if (c.category && c.id && c.id == n) {
									a[n] = [
										["deep2", [o.type, o.items[s].category].join("_")].join("="), c.name
									].join("--")
								}
							}
						}
					}
				}
			}
			return a
		},
		parse_key_hash_name: function (e, t, a) {
			if (!t.length) {
				return {}
			}
			var i = {};
			switch (e) {
				case "tag_ids":
					i = this.parse_tag_ids_hash_name(t, a["asset_tags"]);
					break;
				case "paintseed_group":
					i = this.parse_paintseed_group_hash_name(t, a["paintseed_group"]);
					break;
				default:
					break
			}
			var n = Object.keys(i);
			var r = t.filter(function (e) {
				return n.indexOf(e) == -1
			});
			return {
				data: i,
				remain_data: r.join(",")
			}
		},
		register: function (e) {
			if (!h[e.tab]) {
				h[e.tab] = {
					data: {},
					remain_data: {}
				}
			}
			h[e.tab].matcher = e.matcher;
			h[e.tab].serialize_data = ""
		},
		translate_data_ele: function (e, t) {
			var a = e.split("--");
			var i = {};
			i[a[0]] = {
				key: a[0],
				text: a[1]
			};
			if (t) {
				i[a[0]]["value"] = t
			}
			return i
		},
		translate_data: function (e) {
			var t = {};
			for (var a in e) {
				var i = e[a];
				var n = this.translate_data_ele(a, i);
				for (var r in n) {
					t[r] = n[r]
				}
			}
			return t
		},
		translate_remain_data: function (e) {
			var t = {};
			for (var a = 0; a < e.length; a++) {
				var i = e[a];
				var n = this.translate_data_ele(i);
				for (var r in n) {
					t[r] = n[r]
				}
			}
			return t
		},
		de_translate_data_ele: function (e) {
			var t = [];
			for (var a = 0; a < e.length; a++) {
				var i = e[a];
				t.push([i.key, i.text].join("--"))
			}
			return t.join(",")
		},
		apply: function (e, t) {
			var a = function (e, t) {
				var a = {};
				for (var i = 0; i < e.length; i++) {
					var n = e[i].split(":");
					var r = n[1];
					if (n[0] in t) {
						continue
					}
					a[n[0]] = r
				}
				return a
			};
			var i = localStorage.getItem(this.get_key());
			if (!i) {
				return
			}
			e = e || {};
			var n = a(i.split(";"), e);
			if (!("goods_id" in n)) {
				localStorage.removeItem(this.get_key());
				return
			}
			if (t.length && !t.includes(n["goods_id"])) {
				localStorage.removeItem(this.get_key());
				return
			}
			var r = h[this.current_tab()];
			if (!r) {
				h[this.current_tab()] = {
					serialize_data: "",
					data: {},
					remain_data: {}
				};
				r = h[this.current_tab()]
			}
			for (var o in n) {
				if (l.includes(o)) {
					h["global"][o] = n[o]
				} else if (o == "tag_ids") {
					var s = this.parse_tag_ids(o, n[o], r.matcher);
					if (!$.isEmptyObject(s)) {
						this.merge_data_ele(r["data"], this.translate_data(s["data"]));
						this.merge_data_ele(r["remain_data"], this.translate_remain_data(s["remain_data"]))
					}
				} else if (["paintseed_group", "paintseed", "tier"].includes(o)) {
					var c = [o, n[o]].join("--");
					if (o == "paintseed_group") {
						c = n[o]
					}
					var _ = this.parse_tier_paintseed_group(c, r.matcher);
					if (!$.isEmptyObject(_)) {
						this.merge_data_ele(r["data"], this.translate_data(_))
					} else {
						this.merge_data_ele(r["remain_data"], this.translate_remain_data([c]))
					}
				} else if (["float_range", "fade_range"].includes(o)) {
					this.parse_float_fade_range(o, n[o], r)
				}
			}
		},
		serialize: function (e, t) {
			var a = [];
			if (!h[this.current_tab()]) {
				return
			}
			for (var i = 0; i < u.length; i++) {
				var n = u[i];
				if (!t && n == "float_range") {
					continue
				}
				var r = this.get_data(n);
				var o = this.de_translate_data_ele(r);
				var s = this.get_remain_data(n);
				var c = this.de_translate_data_ele(s);
				var _ = [];
				if (o) {
					_.push(o)
				}
				if (c) {
					_.push(c)
				}
				if (_.length) {
					a.push([n, _.join(",")].join(":"))
				}
			}
			a.push(["goods_id", e].join(":"));
			a.push(["tab", this.current_tab()].join(":"));
			localStorage.setItem(this.get_key(), a.join(";"))
		},
		parse_sync_key_value: function (e, t, a) {
			a = a || {};
			var i = {};
			var n = e;
			var r = t;
			if (["tier", "paintseed", "paintseed_group"].includes(e)) {
				var o = t.split("-");
				n = o[0];
				r = o[1];
				e == "tier" && n == "paintseed" ? a["text"] = r : ""
			} else if (["float_range", "fade_range"].includes(e)) {
				var o = rangeKeyParser.parse(t);
				var s = {
					float_range: ["min_paintwear", "max_paintwear"],
					fade_range: ["min_fade", "max_fade"]
				};
				var c = s[e];
				var _ = [o[0], o[1]];
				var l = [];
				for (var u = 0; u < c.length; u++) {
					var i = {};
					n = c[u];
					r = _[u];
					i["key"] = n;
					i["text"] = r;
					i["value"] = r;
					l.push({
						key: n,
						value: i
					})
				}
				return l
			}
			var l = [];
			i["key"] = n;
			a["value"] = r;
			for (var d in a) {
				i[d] = a[d]
			}
			l.push({
				key: n,
				value: i
			});
			return l
		},
		sync: function (e, t, a, i) {
			var n = i || this.current_tab();
			var r = h[n];
			if (!t) {
				var o = [e];
				if (["float_range", "fade_range"].includes(e)) {
					var s = {
						float_range: ["min_paintwear", "max_paintwear"],
						fade_range: ["min_fade", "max_fade"]
					};
					o = s[e]
				}
				for (var c in o) {
					var _ = o[c];
					delete r["data"][_];
					delete r["remain_data"][_]
				}
				var l = this.get_exclusive_groups();
				for (var c = 0; c < l.length; c++) {
					var l = l[c];
					if (l.includes(e)) {
						for (var u = 0; u < l.length; u++) {
							var d = l[u];
							delete r["data"][d];
							delete r["remain_data"][d]
						}
					}
				}
				for (var i in h) {
					if (i == n) {
						continue
					}
					if (!h[i]) {
						continue
					}
					if (h[i].data) {
						for (var c in o) {
							delete h[i]["data"][o[c]]
						}
					}
					if (h[i].remain_data) {
						for (var c in o) {
							delete h[i]["remain_data"][o[c]]
						}
					}
				}
				return
			}
			var p = this.parse_sync_key_value(e, t, a);
			for (var c = 0; c < p.length; c++) {
				var f = p[c]["value"];
				var m = p[c]["key"];
				r["data"][m] = f;
				delete r["remain_data"][m]
			}
			this.process_exclusive_group_keys(r, m)
		},
		process_exclusive_group_keys: function (e, t) {
			var a = this.get_exclusive_groups();
			for (var i = 0; i < a.length; i++) {
				var n = a[i];
				if (n.indexOf(t) !== -1) {
					for (var r = 0; r < n.length; r++) {
						var o = a[i][r];
						if (o !== t) {
							delete e["data"][o];
							delete e["remain_data"][o]
						}
					}
				}
			}
		},
		merge_data_ele: function (e, t) {
			for (var a in t) {
				e[a] = t[a]
			}
		},
		sync_tab_tag_ids: function (e, t, a) {
			var i = h[a];
			var n = i.matcher;
			var r = this.get_data(e, h[t]["data"]);
			if (r.length) {
				var o = this.de_translate_data_ele(r);
				var s = this.parse_tag_ids(e, o, n);
				var c = this.translate_data(s["data"]);
				var _ = this.translate_remain_data(s["remain_data"]);
				this.merge_data_ele(i["data"], c);
				this.merge_data_ele(i["remain_data"], _)
			}
			var l = this.get_remain_data(e, h[t]["remain_data"]);
			if (l.length) {
				var u = this.de_translate_data_ele(l);
				var d = this.parse_tag_ids(e, u, n);
				var p = this.translate_data(d["data"]);
				var f = this.translate_remain_data(d["remain_data"]);
				this.merge_data_ele(i["data"], p);
				this.merge_data_ele(i["remain_data"], f)
			}
		},
		sync_tab_tier_paintseed_group: function (e, t, a) {
			var i = h[a];
			var n = i.matcher;
			var r = this.get_data(e, h[t]["data"]);
			if (r.length) {
				var o = this.de_translate_data_ele(r);
				var s = this.parse_tier_paintseed_group(o, n);
				if (!$.isEmptyObject(s)) {
					this.merge_data_ele(i["data"], this.translate_data(s));
					this.process_exclusive_group_keys(i, e)
				} else {
					this.merge_data_ele(i["remain_data"], this.translate_remain_data([o]));
					this.process_exclusive_group_keys(i, e)
				}
			} else {
				delete i["data"][e]
			}
			var c = this.get_data(e, h[t]["remain_data"]);
			if (c.length) {
				var _ = this.de_translate_data_ele(c);
				var l = this.parse_tier_paintseed_group(_, n);
				if (!$.isEmptyObject(l)) {
					this.merge_data_ele(i["data"], this.translate_data(l));
					this.process_exclusive_group_keys(i, e)
				} else {
					this.merge_data_ele(i["remain_data"], this.translate_remain_data([_]));
					this.process_exclusive_group_keys(i, e)
				}
			}
		},
		sync_tab_float_fade_range: function (e, t, a) {
			var i = h[a];
			var n = this.get_data(e, h[t]["data"]);
			if (n.length) {
				var r = this.de_translate_data_ele(n);
				this.parse_float_fade_range(e, r, i)
			} else {
				var o = this.get_data(e, h[t]["remain_data"]);
				if (o.length) {
					var s = this.de_translate_data_ele(o);
					this.parse_float_fade_range(e, s, i)
				}
			}
		},
		sync_tab_specify_tab_key: function (e, t, a) {
			var i = h[a];
			if (e == "rank_type") {
				if (a == "paintwear-rank") {
					if (e in h[t]["remain_data"]) {
						i["data"][e] = h[t]["remain_data"][e];
						return
					}
				} else if (t == "paintwear-rank") {
					if (e in h[t]["data"]) {
						i["remain_data"][e] = h[t]["data"][e];
						return
					}
				} else {
					if (e in h[t]["remain_data"]) {
						i["remain_data"][e] = h[t]["remain_data"][e];
						return
					}
				}
			} else if (t == "selling") {
				i["remain_data"][e] = h[t]["data"][e] || h[t]["remain_data"][e]
			} else if (a == "selling") {
				if (!(e in i["remain_data"])) {
					i["data"][e] = h[t]["remain_data"][e]
				}
			} else {
				if (e in h[t]["remain_data"]) {
					i["remain_data"][e] = h[t]["remain_data"][e]
				}
			}
		},
		sync_tab: function (e, t) {
			if (!h[e]) {
				return
			}
			if (!h[t]) {
				h[t] = {
					data: {},
					remain_data: {},
					serialize_data: ""
				}
			}
			for (var a = 0; a < u.length; a++) {
				var i = u[a];
				switch (i) {
					case "tag_ids":
						this.sync_tab_tag_ids(i, e, t);
						break;
					case "tier":
					case "paintseed":
					case "paintseed_group":
						this.sync_tab_tier_paintseed_group(i, e, t);
						break;
					case "float_range":
					case "fade_range":
						this.sync_tab_float_fade_range(i, e, t);
						break;
					case "name_tag":
					case "rank_type":
					case "extra_tag_ids":
					case "min_price":
					case "max_price":
						this.sync_tab_specify_tab_key(i, e, t);
						break;
					default:
						break
				}
			}
		},
		get_all: function (e, t, a) {
			var e = e == undefined ? true : e;
			var t = t || this.current_tab();
			if (!a && (!h[t] || $.isEmptyObject(h[t].data))) {
				return e ? "" : {}
			}
			if (a && (!h[t] || $.isEmptyObject(h[t].data) && $.isEmptyObject(h[t].remain_data))) {
				return e ? "" : {}
			}
			var i = {};
			for (var n = 0; n < d.length; n++) {
				var r = d[n];
				var o = this.get(r, t, a);
				if (o) {
					i[r] = o
				}
			}
			var s = i;
			if (e) {
				var c = [];
				for (var _ in i) {
					c.push([_, i[_]].join("="))
				}
				s = c.join("&")
			}
			return s
		},
		get: function (e, t, a) {
			var t = t || this.current_tab();
			if (!h[t]) {
				return ""
			}
			var i = this.get_data(e, h[t].data);
			if (!i.length && a) {
				var i = this.get_remain_data(e, h[t].remain_data);
				if (i.length) {
					for (var n = 0; n < i.length; n++) {
						if (!i[n]["value"]) {
							i[n]["value"] = specifyKeyParser.parse(e, i[n]["text"]) || i[n]["text"]
						}
					}
				}
			}
			var r = [];
			for (var n = 0; n < i.length; n++) {
				r.push(i[n]["value"])
			}
			var o = ["float_range", "fade_range"].includes(e) ? "-" : ",";
			return r.join(o)
		},
		reset: function () {
			localStorage.removeItem(this.get_key())
		},
		sync_tab_from_hash: function (e, t) {
			if (!h[t]) {
				h[t] = {
					data: {},
					remain_data: {},
					serialize_data: ""
				}
			}
			if (!$.isEmptyObject(e)) {
				for (var a in e) {
					this.sync(a, e[a]["value"], {
						text: e[a]["text"]
					}, t)
				}
				var i = ["buying", "history", "user-preview", "price-chart", "paintwear-rank"];
				for (var n in i) {
					var t = i[n];
					this.sync_tab("selling", t)
				}
			}
		}
	}
};
var specifyKeyParser = function () {
	var e = function (e, t) {
		if (!["paintseed", "name_tag", "tier"].includes(e)) {
			return
		}
		if (e == "name_tag") {
			if (["有", "Renamed"].includes(t)) {
				return "1"
			}
			if (["无", "None"].includes(t)) {
				return "0"
			}
		}
		if (e == "tier") {
			return t.replace("T", "Tier")
		}
	};
	return {
		parse: e
	}
}();
var extraTagIdsParser = function () {
	var e = function (e, t, a) {
		if (e === undefined) {
			t.wearless_sticker = "";
			t.extra_tag_ids = "";
			t.fixed_slot = "";
			return
		}
		t.fixed_slot = "";
		t.wearless_sticker = "";
		if (e === "non_empty" || e === "squad_combos" || e === "five_combos" || e === "empty" || e === "") {
			t.wearless_sticker = ""
		} else if (e === "non_empty_wearless") {
			t.wearless_sticker = "1";
			e = "non_empty"
		} else if (e === "non_empty_fixed") {
			t.fixed_slot = "1";
			e = "non_empty"
		} else if (e === "non_empty_wearless_fixed") {
			t.fixed_slot = "1";
			t.wearless_sticker = "1";
			e = "non_empty"
		} else if (e === "squad_combos_wearless") {
			t.wearless_sticker = "1";
			e = "squad_combos"
		} else if (e === "squad_combos_fixed") {
			t.fixed_slot = "1";
			e = "squad_combos"
		} else if (e === "squad_wearless_fixed") {
			t.fixed_slot = "1";
			t.wearless_sticker = "1";
			e = "squad_combos"
		} else if (e === "five_combos_wearless") {
			t.wearless_sticker = "1";
			e = "five_combos"
		} else if (e === "five_combos_fixed") {
			t.fixed_slot = "1";
			e = "five_combos"
		} else if (e === "five_wearless_fixed") {
			t.wearless_sticker = "1";
			t.fixed_slot = "1";
			e = "five_combos"
		} else {
			if (a === undefined) {
				var i = getParamsFromHash();
				if (!$.isEmptyObject(i) && i.wearless_sticker) {
					t.wearless_sticker = i.wearless_sticker
				}
			} else {
				t.wearless_sticker = a
			}
		}
		if (e === "custom") {
			t.extra_tag_ids = getParamsFromHash().extra_tag_ids
		} else {
			t.extra_tag_ids = e
		}
	};
	return {
		parse: e
	}
}();
var rangeKeyParser = function () {
	var e = function (e) {
		var t = "";
		var a = "";
		if (e.includes("~")) {
			t = e.split("~")[0];
			a = e.split("~")[1]
		} else if (e.includes("-")) {
			t = e.split("-")[0];
			a = e.split("-")[1]
		} else if (e.includes("≥")) {
			t = e.split("≥")[1]
		} else if (e.includes("≤")) {
			a = e.split("≤")[1]
		}
		return [t, a]
	};
	var t = function (e, t, a) {
		var i = "";
		if (t && e) {
			rang_separator = a || "-";
			i = e + rang_separator + t
		}
		if (!t && e) {
			i = "≥" + e
		}
		if (t && !e) {
			i = "≤" + t
		}
		return i
	};
	return {
		parse: e,
		deparse: t
	}
}();
var assetInfoMgr = function () {
	var e = null;
	var i = {};
	var t = function (e) {
		for (var t in e) {
			var a = e[t];
			i[a.assetid] = a
		}
	};
	var a = function (e) {
		return i[e]
	};
	return function () {
		if (!e) {
			e = {
				save: t,
				get_item: a
			}
		}
		return e
	}
}();
var steamInventory = function (l) {
	var e = null;
	var u = g.game;
	var d = [];
	var p = [];
	var _ = {};
	var f = {};
	var m = {};
	var h = "false";
	var v = 0;
	var t = BuffConfig.MAX_SELL_PRICE;
	var a = BuffConfig.MIN_PRICE;
	var y = false;
	var i = null;
	var c = function () {
		return Object.keys(_).sort(function (e, t) {
			return _[e] - _[t]
		})
	};
	var b = function () {
		var e = $("#j_list_card > ul > li.on").length;
		var t = $("#j_list_card > ul > li.salable").length;
		if (e < t || e === 0) {
			$(".w-Checkbox[name=select-all] span").removeClass("on");
			$(".w-Checkbox[name=select-all]").attr({
				value: ""
			})
		} else {
			$(".w-Checkbox[name=select-all] span").addClass("on");
			$(".w-Checkbox[name=select-all]").attr({
				value: "selectall"
			})
		}
	};
	var w = function (e) {
		var t = c();
		$("#j_overpage-handler").find(".selected-count").text(t.length);
		$("#j_overpage-handler").find(".total-count").text(v);
		var a = 0;
		var i = {};
		t.forEach(function (e) {
			var t = assetInfoMgr().get_item(e);
			a += parseFloat(t.steam_price);
			i[e] = t
		});
		if (!e || t.length == 0) {
			$("#j_overpagetip").html(template_render("overpagetip_template", {
				selected: t,
				total_price: a,
				infos: i
			}))
		} else {
			$("#j_overpagetip").find(".f_Strong").html(formatPriceNormalCustom(a, undefined, "USD"));
			$("#j_overpagetip").find("#selected-count").text(t.length)
		}
	};
	var k = function () {
		$("#j_list_card > ul > li.salable").each(function () {
			var e = $(this).data("assetid");
			if (_[e]) {
				$(this).addClass("on")
			} else {
				$(this).removeClass("on")
			}
		})
	};
	var x = sellingPricing().check_price_value;
	var C = function () {
		clearTimeout(i);
		jQuery.xhrPool.abort("/api/market/batch/fee");
		i = setTimeout(function () {
			var e = [];
			var a = [];
			var i = 0;
			var n = 0;
			var t = [];
			var r = [];
			var o = 0;
			for (var s = 0; s < p.length; s++) {
				if (!p[s]) continue;
				if (p[s].price > 0) {
					if (x(p[s].price, false) == false) {
						return
					}
					if (!p[s].has_market_min_price) {
						e.push(p[s].price);
						a.push(s);
						r.push(p[s].goods_id);
						i += p[s].price;
						if (m[p[s].assetid] != h) {
							t.push(m[p[s].assetid])
						} else {
							t.push("")
						}
					} else {
						i += p[s].income;
						o += p[s].reward_points || 0
					}
				}
			}
			if (e.length < 1) {
				$("#j_popup_selling_preview span.sale_fee").html(formatPriceYuan(n));
				$("#j_popup_selling_preview span.real_income").html(formatPriceYuan(i - n));
				$("#j_popup_selling_preview span.real_income_custom").html(formatPriceNormalCustom(i - n));
				$("#j_popup_selling_preview span.reward_points").html(o);
				return
			}
			$("#j_popup_selling_preview .confirm").addClass("i_Btn_disabled");
			sendRequest("/api/market/batch/fee", {
				data: {
					game: u,
					prices: e.join(","),
					cdkey_ids: t.join(","),
					goods_ids: r.join(",")
				},
				dataType: "json",
				method: "GET",
				showLoading: false,
				success: function (t) {
					if (t.code == "OK") {
						$("#j_popup_selling_preview .confirm").removeClass("i_Btn_disabled");
						n += parseFloat(t.data.total_fee);
						$("#j_popup_selling_preview span.sale_fee").html(formatPriceYuan(n));
						$("#j_popup_selling_preview span.real_income").html(formatPriceYuan(i - parseFloat(n)));
						$("#j_popup_selling_preview span.real_income_custom").html(formatPriceNormalCustom(i - parseFloat(n)));
						$("#j_popup_selling_preview span.reward_points").html(t.data.total_reward_points + o);
						$("#j_popup_selling_preview input[name=income]").each(function () {
							var e = $(this).data("index") - 1;
							if (a.indexOf(e) != -1) {
								if (!$(this).is(":focus")) {
									p[e].income = p[e].price - parseFloat(t.data.fees[a.indexOf(e)]);
									$(this).val(p[e].income.toFixed(2));
									$(this).parents("tr").find(".sell-income-custom").text(formatPriceNormalCustom(p[e].income, true));
									$(this).removeClass("i_Text_error")
								}
							}
						});
						T()
					} else {
						Buff.toast(t.error, {
							type: "error"
						})
					}
				},
				error: function (e) {
					if (e.statusText != "abort") {
						Buff.toast("获取手续费失败，请稍后再试")
					}
				}
			})
		}, 500)
	};
	var T = function () {
		var e = false;
		for (var t in m) {
			if (m[t] && m[t] != h) {
				e = true;
				break
			}
		}
		if (e) {
			$("#discount_icon").show()
		} else {
			$("#discount_icon").hide()
		}
	};
	var r = function (e) {
		e.forEach(function (e) {
			$("#" + e).hide()
		})
	};
	var P = function (e, t, a) {
		var t = parseInt(t) || 1;
		var e = e || 0;
		var a = a || $(".w-Select[name=page_size]").attr("value") || 50;
		var o = {
			game: u,
			force: e,
			page_num: t,
			page_size: a
		};
		o["search"] = $(".w-Search input").val() || "";
		var i = $(".w-Order.selected").attr("name");
		var n = $(".w-Order.selected").attr("value");
		if (typeof i != "undefined") {
			if (n == "des") o["sort_by"] = i + ".desc";
			else if (n == "asc") o["sort_by"] = i + ".asc"
		}
		$(".w-Select").each(function () {
			var e = $(this).attr("name");
			var t = $(this).attr("value");
			if (typeof t != "undefined" && t != "0") {
				o[e] = t
			}
		});
		$(".w-Tag").each(function () {
			var e = $(this).attr("name");
			var t = $(this).attr("value");
			if (typeof t != "undefined" && t != "0") {
				o[e] = t
			}
		});
		var r = $(".w-SelHero").attr("value");
		if (typeof r != "undefined" && r != "0") {
			o["hero"] = r
		}
		$(".w-Select-Multi").each(function () {
			var e = $(this).attr("name");
			if (e == "rarity") {
				var t = $(this).attr("value");
				if (typeof t != "undefined" && t != "0") {
					o[e] = t
				}
				return
			}
			if (e == "badlanders_category") {
				var a = $(this).attr("value");
				o["tag_1_name"] = o["tag_2_name"] = "";
				if (a) {
					var i = a.split("=");
					o[i[0]] = i[1]
				}
				return
			}
			var n = $(this).attr("value");
			if (typeof n != "undefined") {
				var r = $('.w-Select-Multi h6[value="' + n + '"]').attr("value");
				if (n == r) {
					o["category_group"] = n
				} else {
					o["category"] = n
				}
			}
		});
		var s = "#";
		for (var c in o) {
			if (["game", "force"].indexOf(c) < 0) s += c + "=" + o[c] + "&"
		}
		window.location.hash = s.slice(0, -1);
		$("#refresh").text(i18n("refreshing"));
		$("#j_list_card").showLoading();
		var _ = "/api/market/steam_inventory";
		if (l) _ = "/api/market/partner_inventory";
		sendRequest(_, {
			data: o,
			method: "GET",
			dataType: "json",
			showLoading: false,
			timeout: BuffConfig.STEAM_TIMEOUT,
			ignoreCode: ["Steam Binding Required", "Backpack Is Private"],
			success: function (a) {
				var e = "";
				if (a.code == "OK") {
					v = a.data.total_count;
					if ($("#j_list_card > ul > li.salable.on.punishing").length || y) {
						$("#shelve").addClass("i_Btn_disabled")
					} else {
						$("#shelve").removeClass("i_Btn_disabled")
					}
					$("#inventory_price").val(a.data.inventory_price);
					$(".brief-info").html(format_html('<span><%= i18n("quantity") %><strong class="c_Yellow f_Normal"><%= data.data.total_count %></strong> <%= i18n("valuation") %><strong class="c_Yellow f_Normal"><%- formatPriceNormalCustom(data.data.total_amount_usd, undefined, "USD") %></strong></span>', {
						data: a
					}));
					d = a.data.items;
					if (d.length < 1) {
						e = format_html('<div class="nodata">                                    <p><i class="icon icon_nodata"></i></p>                                    <p><%= i18n("no_related") %></p>                                    <div><a href="/market/<%= game %><%= hash %>" class="i_Btn i_Btn_hollow"><%= i18n("go_to_market") %></a></div>                                </div>', {
							game: u,
							hash: window.location.hash
						})
					} else {
						PreviewScreenShotsDataGenerator(OriginConst.INVENTORY).process(a.data.items, a.data.preview_screenshots.bg_img || "", "my_inventory", 14);
						e = template_render("item_card_pat", a.data)
					}
					assetInfoMgr().save(d);
					renderPagination({
						total_count: a.data.total_count,
						page_size: a.data.page_size,
						page_num: t,
						show_size_select: false,
						onPageClick: function (e, t) {
							t.preventDefault();
							P(0, e, a.data.page_size);
							window.scrollTo(0, 0)
						}
					})
				} else if (a.code == "Backpack Is Private") {
					e = format_html('<div class="nodata">                                <p><i class="icon icon_unbind"></i></p>                                <p><%= data.error %></p>                                <div><a href="https://steamcommunity.com/my/edit/settings" target="_blank" class="i_Btn i_Btn_hollow"><%= i18n("go_to_set") %></a></div>                            </div>', {
						data: a
					})
				} else if (a.code == "Steam Binding Required") {
					e = format_html('<div class="nodata">                                <p><i class="icon icon_unbind"></i></p>                                <p><%= i18n("unbound_steam_notice") %><%= i18n("back_for_refresh") %></p>                                <div><a href="/user-center/profile" target="_blank" class="i_Btn i_Btn_hollow"><%= i18n("go_to_bind") %></a></div>                            </div>')
				} else {
					Buff.toast(a.error)
				}
				$("#j_list_card").html(e);
				PreviewScreenShots().init("my_inventory", a.data.preview_screenshots["my_inventory"]);
				$("img.lazy").lazyload();
				k();
				b();
				w()
			},
			complete: function () {
				$("#refresh").text(i18n("refresh"));
				$("#j_list_card").removeLoading()
			}
		})
	};
	var n = function () {
		sendRequest("/account/api/user/info/v2", {
			method: "GET",
			dataType: "json",
			showLoading: false,
			timeout: 15e3,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				} else if (e.data.user_info.trade_url_state != 0) {
					$("#trade_state_tip").show();
					$("#deposit").addClass("i_Btn_disabled");
					$("#shelve").addClass("i_Btn_disabled");
					y = true
				}
			}
		})
	};
	var o = function () {
		bundleInventory().init_bundle_preview();
		$(document).on("click", "#j_list_card > ul > li.salable", function () {
			$(this).toggleClass("on");
			$(this).trigger("change");
			b();
			w()
		});
		$(document).on("change", "#j_list_card > ul > li.salable", function () {
			var e = $(this).data("assetid");
			if ($(this).hasClass("on")) {
				_[e] = Date.now()
			} else {
				delete _[e]
			}
			var a = true;
			c().forEach(function (e) {
				var t = assetInfoMgr().get_item(e);
				if (!t.allow_bundle_inventory) {
					a = false
				}
			});
			if (a) {
				$("#bundle_shelve").removeClass("i_Btn_disabled")
			} else {
				$("#bundle_shelve").addClass("i_Btn_disabled")
			}
		});
		$(document).on("click", "#j_list_card > ul > li.unsalable", function () {
			if ($(this).data("state-toast")) {
				Buff.toast($(this).data("state-toast"))
			}
		});
		$(document).on("click", "#refresh", function () {
			P(1)
		});
		$(document).on("change", ".w-Select", function () {
			P()
		});
		$(document).on("change", ".w-Select-Multi", function () {
			P()
		});
		$(document).on("change", ".w-Tag", function () {
			P()
		});
		$(document).on("change", ".w-SelHero", function () {
			P()
		});
		$(document).on("change", ".h1z1-selType", function () {
			var e = $(".w-SelType.selected").attr("value");
			if (e != "csgo_type_other") {
				P()
			}
		});
		$(document).on("change", ".w-Order", function () {
			$(".w-Order").removeClass("selected");
			$(this).addClass("selected");
			$(".w-Order:not(.selected)").attr({
				value: null,
				class: "w-Order"
			});
			P()
		});
		$(document).on("change", ".w-Search input", function () {
			P()
		});
		$(document).on("click", "#recheck_trade_state", function () {
			sendRequest("/api/market/steam/trade_url_state/refresh", {
				method: "POST",
				dataType: "json",
				timeout: 15e3,
				success: function (e) {
					if (e.code == "OK") {
						if (e.data.trade_url_state == 0) {
							Buff.toast(i18n("your_steam_account_tradable"));
							$("#trade_state_tip").hide();
							$("#deposit").removeClass("i_Btn_disabled");
							$("#shelve").removeClass("i_Btn_disabled");
							y = false
						} else if (e.data.trade_url_state == 1) {
							Buff.toast(i18n("your_steam_account_halt"), {
								type: "error"
							})
						} else if (e.data.trade_url_state == 2) {
							Buff.toast(i18n("your_steam_acctoun_trade_limit"), {
								type: "error"
							})
						}
					} else {
						Buff.toast(i18n("detect_fail_try_later"))
					}
				}
			})
		});
		var e = window.location.hash;
		var t = getParams(e.substring(1));
		for (name in t) {
			if (!t[name]) continue;
			if (name == "sort_by") {
				var a = t[name].split(".")[0];
				$(".w-Order").attr({
					value: ""
				});
				$(".w-Order").removeClass("w-Order_des");
				if (t[name].indexOf("desc") > 0) {
					$(".w-Order[name=" + a + "]").attr({
						value: "des"
					});
					$(".w-Order[name=" + a + "]").addClass("w-Order_des")
				} else {
					$(".w-Order[name=" + a + "]").attr({
						value: "asc"
					});
					$(".w-Order[name=" + a + "]").addClass("w-Order_asc")
				}
				$(".w-Order[name=" + a + "]").addClass("selected")
			} else if (["page_num"].indexOf(name) < 0) {
				if (name == "category_group") {
					Buff.setCompValue("search-category", t[name])
				} else {
					Buff.setCompValue("search-" + name, t[name])
				}
			}
		}
		var i = t["page_num"] || 1;
		var n = t["page_size"] || 50;
		P(0, i, n);
		$(".w-Checkbox[name=select-all]").change(function () {
			var e = $(this).attr("value");
			if (e == "selectall") {
				$("#j_list_card > ul > li.salable").addClass("on");
				if ($("#j_list_card > ul > li.salable").length < 1) {
					Buff.toast(i18n("no_available_items"))
				}
			} else {
				$("#j_list_card > ul > li.salable").removeClass("on")
			}
			$("#j_list_card > ul > li.salable").trigger("change");
			b();
			w()
		});
		$("#shelve").click(function () {
			B(c(), false)
		});
		$("#bundle_shelve").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			j(c(), false)
		});
		var o = function () {
			$("#j_popup_selling_preview tr.assets-item input[name=price]").each(function () {
				var e = $(this).data("index") - 1;
				var t = parseFloat($(this).val());
				if (isNaN(t) || $(this).val().length == 0) {
					p[e].price = ""
				} else {
					p[e].price = t
				}
			});
			$("#j_popup_selling_preview tr.assets-item input[name=income]").each(function () {
				var e = $(this).data("index") - 1;
				var t = parseFloat($(this).val());
				if (isNaN(t) || $(this).val().length == 0) {
					p[e].income = ""
				} else {
					p[e].income = t
				}
			})
		};
		$(document).on("change", ".w-Checkbox[name=combine]", function () {
			var e = $(this).attr("value");
			if (e == "combine") {
				var t = $("#j_popup_selling_preview").data("group-key");
				var a = [];
				p.forEach(function (e) {
					a.push(e.assetid)
				});
				for (var i in t) {
					var n = [];
					t[i].assetids.forEach(function (e) {
						if (a.includes(e)) {
							n.push(e)
						}
					});
					var r = n.length;
					if (r > 1) {
						$("#j_popup_selling_preview tr.group_key_" + i + ":not(:first)").hide();
						$("#j_popup_selling_preview tr.group_key_" + i + ":first .name-cont p.num").remove();
						$("#j_popup_selling_preview tr.group_key_" + i + ":first .name-cont").append('<p class="num c_Gray" style="font-size: 13px;"> ×' + r + "</p>");
						$("#j_popup_selling_preview tr.group_key_" + i + " input").val("");
						$("#j_popup_selling_preview tr.group_key_" + i + " .sell-price-custom").html("");
						$("#j_popup_selling_preview tr.group_key_" + i + " .sell-income-custom").html("");
						$("#j_popup_selling_preview tr.group_key_" + i + " .pic-cont .item-count").show();
						$("#j_popup_selling_preview tr.group_key_" + i).next(".des_row").hide();
						$("#j_popup_selling_preview tr.group_key_" + i + " td").css("border-bottom", "1px solid #E9E9E9");
						$("#j_popup_selling_preview tr.group_key_" + i + " .edit_order_desc a").hide();
						$("#j_popup_selling_preview tr.group_key_" + i + " .edit_order_desc .w-Select-coupon").hide();
						$("#j_popup_selling_preview tr.group_key_" + i + " .paint-wear").hide();
						$("#j_popup_selling_preview tr.group_key_" + i + " .csgo_sticker_inline").hide();
						$("#j_popup_selling_preview tr.group_key_" + i + " .group_key_notice").show();
						$("#j_popup_selling_preview tr.group_key_" + i + " div.notes").hide()
					}
				}
				o();
				C()
			} else {
				$("#j_popup_selling_preview tr.assets-item").show();
				$("#j_popup_selling_preview tr.assets-item .edit_order_desc a").show();
				$("#j_popup_selling_preview tr.assets-item .edit_order_desc .w-Select-coupon").show();
				$("#j_popup_selling_preview tr.assets-item .paint-wear").show();
				$("#j_popup_selling_preview tr.assets-item .csgo_sticker_inline").show();
				$("#j_popup_selling_preview tr.assets-item.has_des").next().show();
				$("#j_popup_selling_preview tr.assets-item.has_des td").css("border-bottom", "0");
				$("#j_popup_selling_preview tr.assets-item .name-cont p.num").remove();
				$("#j_popup_selling_preview tr.assets-item .pic-cont .item-count").hide();
				$("#j_popup_selling_preview tr.assets-item .group_key_notice").hide();
				$("#j_popup_selling_preview tr.assets-item div.notes").show()
			}
		});
		$(document).on("input", "#j_popup_selling_preview input[name=price]", function () {
			var e = $(this).data("index") - 1;
			var t = $(this).val();
			var a = $(this).parents("tr").find("input[name=income]").val();
			var i = parseFloat(t);
			var n = parseFloat(a);
			var r = parseFloat($(this).data("market-min-price"));
			var o = parseInt($(this).data("reward-points")) || 0;
			if (r > 0 && i < r) {
				i = r
			}
			if (x($(this).val())) {
				$(this).removeClass("i_Text_error")
			} else {
				$(this).addClass("i_Text_error")
			}
			p[e].price = i;
			p[e].income = n;
			p[e].has_market_min_price = r > 0;
			p[e].reward_points = o;
			var s = $(".w-Checkbox[name=combine]").attr("value");
			if (s == "combine") {
				var c = $("#j_popup_selling_preview").data("group-key");
				var _ = $(this).data("group-key");
				var l = c[_].assetids;
				for (var u = 0; u < p.length; u++) {
					if (l.indexOf(p[u].assetid) > -1) {
						p[u].price = p[e].price;
						p[u].income = p[e].income;
						p[u].has_market_min_price = p[e].has_market_min_price;
						p[u].reward_points = p[e].reward_points
					}
				}
				$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=price]").val(t);
				$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=income]").val(a);
				$("#j_popup_selling_preview tr.group_key_" + _ + " .sell-price-custom").html(i ? formatPriceNormalCustom(i, true) : "");
				$("#j_popup_selling_preview tr.group_key_" + _ + " .sell-price-income").html(n ? formatPriceNormalCustom(n, true) : "");
				if ($(this).hasClass("i_Text_error")) {
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=price]").addClass("i_Text_error");
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=income]").addClass("i_Text_error")
				} else {
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=price]").removeClass("i_Text_error");
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=income]").removeClass("i_Text_error");
					$("#j_popup_selling_preview tr.group_key_" + _ + " .cannot-quick-pricing").remove()
				}
			}
			if (i) {
				$(this).parents("tr").find(".sell-price-custom").html(formatPriceNormalCustom(i, true))
			} else {
				$(this).parents("tr").find(".sell-price-custom").html("")
			}
			C()
		});
		$(document).on("change", "#j_popup_selling_preview input[name=price]", function () {
			if (x($(this).val(), true)) {
				C()
			}
		});
		var r = sellingPricing();
		$(document).on("input", "#j_popup_selling_preview input[name=income]", function () {
			var e = $(this).parents("tr");
			var t = $(e).attr("id").replace("asset_", "");
			var a = m[t] != "false" ? m[t] : "";
			r.get_price_from_income(e, a);
			var i = $(this).val();
			if (i) {
				$(this).parents("tr").find(".sell-income-custom").html(formatPriceNormalCustom(i, true))
			} else {
				$(this).parents("tr").find(".sell-income-custom").html("")
			}
		});
		$(document).on("change", "#j_popup_selling_preview input[name=income]", function () {
			if (x($(this).val(), true)) {
				var e = $(this).parents("tr");
				var t = $(e).attr("id").replace("asset_", "");
				var a = m[t] != "false" ? m[t] : "";
				r.get_price_from_income(e, a)
			}
		});
		$(document).on("click", "#j_popup_selling_preview #quick-pricing", function () {
			r.quick_pricing($("#j_popup_selling_preview"));
			C()
		});
		$(document).on("click", "#j_popup_selling_preview .confirm:not(.i_Btn_disabled)", function () {
			for (var e = 0; e < p.length; e++) {
				if (x(p[e].price, true) == false) {
					return
				}
			}
			var n = function () {
				var a = [];
				p.forEach(function (e) {
					var t = m[e.assetid] || "";
					if (t != h) {
						e["cdkey_id"] = t
					}
					a.push(e)
				});
				sendRequest("/api/market/sell_order/create/" + $("#shelve").data("mode"), {
					data: {
						game: u,
						assets: p
					},
					method: "POST",
					timeout: BuffConfig.STEAM_TIMEOUT + 1e3 * p.length,
					success: function (e) {
						if (e.code == "OK") {
							var t = "";
							var a = 0;
							var i = [];
							for (var n = 0; n < p.length; n++) {
								var r = p[n].assetid;
								var o = e.data[r];
								if (o == "OK") {
									a += 1;
									delete _[r]
								} else {
									i.push({
										asset: p[n],
										reason: o,
										info: assetInfoMgr().get_item(r)
									})
								}
							}
							if (i.length > 0) {
								Popup.hide();
								var s = template_render("result_pat", {
									failures: i,
									success: a
								});
								$("#popup-container").html(s);
								Popup.show("j_popup_charge-result")
							} else {
								if ($(".c_Yellow.offline_tips").is(":visible")) {
									Popup.hide();
									Buff.alert({
										title: i18n("shelve_success"),
										message: i18n("shelve_notice"),
										rememberDismiss: "deliver_tips",
										hideCancel: true,
										success: function (e) {
											if (e) {
												Buff.toast(i18n("shelve_success"), {
													type: "success"
												});
												Popup.hide()
											}
										}
									})
								} else {
									Buff.toast(i18n("shelve_success"), {
										type: "success"
									});
									Popup.hide()
								}
							}
							P(0, $(".pager li.active .current").html())
						} else {
							Buff.toast(e.error || e.code, {
								type: "warning"
							})
						}
					}
				})
			};
			r.find_unusual_price($("#j_popup_selling_preview"), function () {
				var e = false;
				for (var t = 0; t < p.length; t++) {
					var a = assetInfoMgr().get_item(p[t].assetid).asset_info.info.stickers;
					if (a && a.length > 0) {
						for (var i = 0; i < a.length; i++) {
							if (a[i].category != "patch") {
								e = true;
								break
							}
						}
					}
					if (e) break
				}
				if (e) {
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("scratch_sticker_notice"),
						cancelText: i18n("reconfirm"),
						confirmText: i18n("continue_selling"),
						rememberDismiss: "scratch_sticker_notice",
						success: n
					})
				} else {
					n()
				}
			})
		});
		$(document).on("click", "#j_popup_bundle_inventory_preview .create:not(.i_Btn_disabled)", function () {
			var e = parseFloat($('#j_popup_bundle_inventory_preview input[name="price"]').val());
			var t = parseFloat($('#j_popup_bundle_inventory_preview input[name="income"]').val());
			if (x(e, true) == false) {
				return
			}
			var a = [];
			for (var i = 0; i < p.length; i++) {
				a.push(p[i].goods_id)
			}
			var n = function () {
				sendRequest("/api/market/sell_order/create/bundle_inventory", {
					data: {
						game: u,
						price: e,
						income: t,
						assets: p
					},
					method: "POST",
					timeout: BuffConfig.STEAM_TIMEOUT + 1e3 * p.length,
					success: function (e) {
						if (e.code == "OK") {
							var t = "";
							var a = 0;
							var i = [];
							for (var n = 0; n < p.length; n++) {
								var r = p[n].assetid;
								result = e.data[r];
								if (result == null || result === "OK") {
									a += 1
								} else {
									var o = assetInfoMgr().get_item(r);
									i.push({
										info: {
											assetid: o.assetid,
											icon_url: o.icon_url,
											name: o.name
										},
										reason: result
									})
								}
							}
							if (i.length > 0) {
								Popup.hide();
								var s = template_render("_bundle_inventory_result_pat", {
									type: "create-order",
									failures: i,
									success: a
								});
								$("#popup-container").html(s);
								Popup.show("j_popup_bundle_inventory_result")
							} else {
								for (var c = 0; c < p.length; c++) {
									delete _[p[c].assetid]
								}
								if ($(".c_Yellow.offline_tips").is(":visible")) {
									Popup.hide();
									Buff.alert({
										title: i18n("shelve_success"),
										message: i18n("shelve_notice"),
										rememberDismiss: "deliver_tips",
										hideCancel: true,
										success: function (e) {
											if (e) {
												Buff.toast(i18n("shelve_success"), {
													type: "success"
												});
												Popup.hide()
											}
										}
									})
								} else {
									Buff.toast(i18n("shelve_success"), {
										type: "success"
									});
									Popup.hide()
								}
							}
							P(0, $(".pager li.active .current").html())
						} else if (e.code == "Invalid Argument" && e.error.indexOf("price") > -1) {
							Buff.toast(i18n("unset_price_item"), {
								type: "error"
							})
						} else {
							Buff.toast(e.error || e.code, {
								type: "warning"
							})
						}
					}
				})
			};
			r.find_bundle_unusual_price($("#j_popup_bundle_inventory_preview"), a, function () {
				var e = false;
				for (var t = 0; t < p.length; t++) {
					var a = assetInfoMgr().get_item(p[t].assetid).asset_info.info.stickers;
					if (a && a.length > 0) {
						for (var i = 0; i < a.length; i++) {
							if (a[i].category != "patch") {
								e = true;
								break
							}
						}
					}
					if (e) break
				}
				if (e) {
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("scratch_sticker_notice"),
						cancelText: i18n("reconfirm"),
						confirmText: i18n("continue_selling"),
						rememberDismiss: "scratch_sticker_notice",
						success: n
					})
				} else {
					n()
				}
			})
		});
		$("#deposit").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) return;
			var e = function () {
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("fraud_notice"),
					cancelText: i18n("go_to_check"),
					confirmText: i18n("i_know"),
					rememberDismiss: "fraud_notice",
					hide_popup_after_cancel: false,
					success: s,
					cancel: function () {
						openPageOnNewTab("https://steamcommunity.com/dev/apikey")
					}
				})
			};
			if (u == "csgo") {
				Buff.alert({
					title: i18n("deposit_backpack"),
					safeMessage: i18n("csgo_deposit_notice"),
					rememberDismiss: "csgo_deposit",
					success: e
				})
			} else {
				e()
			}
		});
		var s = function () {
			p = [];
			var a = 0;
			var i = undefined;
			c().forEach(function (e) {
				var t = assetInfoMgr().get_item(e);
				p.push({
					game: t.game,
					market_hash_name: t.market_hash_name,
					contextid: t.contextid,
					assetid: t.assetid,
					classid: t.classid,
					instanceid: t.instanceid
				});
				if (t.amount > 0) {
					i = t;
					a += t.amount
				}
			});
			if (p.length < 1) {
				Buff.toast(i18n("please_select_deposit_item"));
				return
			}
			var e = function () {
				sendRequest("/api/market/backpack/deposit", {
					data: {
						game: u,
						assets: p
					},
					dataType: "json",
					method: "POST",
					success: function (e) {
						if (e.code == "OK") {
							bot_trades = {};
							bot_trades[e.data.id] = e.data;
							update_bot();
							_ = {};
							P()
						} else if (e.code == "Steam Trade URL Failure") {
							Buff.alert({
								title: i18n("prompt"),
								message: i18n("your_steam_trade_url_invalid"),
								success: function () {
									window.open("/user-center/profile", "_blank")
								},
								cancel: function () {
									Buff.toast(i18n("deposit_failed"))
								}
							})
						} else {
							Buff.alert({
								type: "error",
								title: i18n("deposit_failed"),
								message: e.error,
								hideCancel: true
							})
						}
					}
				})
			};
			if (a > p.length) {
				Buff.alert({
					title: i18n("deposit_instructions_title"),
					message: i["name"] + i18n("deposit_instructions_message"),
					confirmText: i18n("deposit_instructions_confirm"),
					success: e
				})
			} else {
				e()
			}
		};
		$(document).on("click", ".edit_order_desc a", function () {
			var e = $(this).data("assetid");
			Popup.show("j_pupup_add_desc");
			var t = $("#asset_" + e).next().find(".desc_content").text();
			$("#j_pupup_add_desc .addDesWrapper textarea").focus().val(t).trigger("input");
			$("#j_pupup_add_desc .i_Btn_main").data("assetid", e)
		});
		$(document).on("click", "#j_pupup_add_desc .i_Btn_main", function () {
			var e = $(this).data("assetid");
			var t = $("#j_pupup_add_desc .addDesWrapper textarea").val();
			if (t.length > 40) {
				Buff.toast(i18n("input_content_too_long_to_40_words"))
			} else {
				$("#asset_" + e).next().find(".desc_content").text(t);
				for (var a = 0; a < p.length; a++) {
					if (p[a].assetid == e) {
						p[a].desc = t
					}
				}
				if (t.length > 0) {
					$("#asset_" + e).next().show();
					$("#asset_" + e).addClass("has_des");
					$("#asset_" + e + " td").css("border-bottom", "0");
					$("#asset_" + e + " .edit_order_desc a").text(i18n("edit_description"))
				} else {
					$("#asset_" + e + " td").css("border-bottom", "1px solid #E9E9E9");
					$("#asset_" + e).next().hide();
					$("#asset_" + e).removeClass("has_des");
					$("#asset_" + e + " .edit_order_desc a").text(i18n("add_description"))
				}
				Popup.hide()
			}
		});
		$(document).on("click", ".overpage-del", function () {
			delete _[$(this).data("id")];
			$(this).parent().remove();
			w(true);
			k();
			b()
		});
		gallery.init();
		userStoreOfflinePopup(OriginConst.INVENTORY).show_daily()
	};
	update_bot({
		polling: true,
		onStateChange: function () {
			setTimeout(function () {
				P()
			}, 5e3)
		},
		onBotStatusClose: function () {
			P()
		}
	});
	window.showPunishRemain = function (e, t) {
		var a = Date.now() / 1e3;
		if (t <= a) {
			$(e).attr("data-content", "");
			return
		}
		var i = Math.floor((t - a) / 3600);
		var n = Math.ceil((t - a) % 3600 / 60);
		var r = i18n("undelivered_notice", {
			hours: i,
			minutes: n
		});
		$(e).attr("data-content", r)
	};
	var s = function (e, t) {
		if (t) {
			for (var a in e) {
				var i = e[a];
				$(`#j_list_card>ul>li[id=${i}]`).trigger("click")
			}
		}
		O(e)
	};
	var B = function (e, t) {
		if ($(this).hasClass("i_Btn_disabled")) {
			return
		}
		var a = $("#shelve_mode").val();
		if (localStorage.getItem("remember_dismiss_" + a + "_sell_2") || l) {
			s(e, t);
			return
		}
		$("#j_popup_sell" + a).data("assetids", e);
		$("#j_popup_sell" + a).data("should_delegate", t);
		Popup.show("j_popup_sell" + a);
		$(document).off("click", ".confirm-shelve").on("click", ".confirm-shelve", function (e) {
			e.preventDefault();
			var t = $("#shelve").data("mode");
			if ($("#j_popup_sell" + t + " .w-Checkbox").attr("value") === "dontshow") {
				localStorage.setItem("remember_dismiss_" + t + "_sell_2", "1")
			}
			Popup.hide();
			s($("#j_popup_sell" + t).data("assetids"), $("#j_popup_sell" + t).data("should_delegate"))
		})
	};
	var j = function (e, t) {
		if ($(this).hasClass("i_Btn_disabled")) {
			return
		}
		var a = "bundle_inventory";
		if (localStorage.getItem("remember_dismiss_bundle_inventory_sell_2") || localStorage.getItem("remember_dismiss_manual_plus_sell_2") || l) {
			E(e, t);
			return
		}
		$("#j_popup_sell" + a).data("assetids", e);
		$("#j_popup_sell" + a).data("should_delegate", t);
		Popup.show("j_popup_sell" + a);
		$(document).off("click", ".confirm-shelve").on("click", ".confirm-shelve", function (e) {
			e.preventDefault();
			if ($("#j_popup_sell" + a + " .w-Checkbox").attr("value") === "dontshow") {
				localStorage.setItem("remember_dismiss_" + a + "_sell_2", "1")
			}
			Popup.hide();
			E($("#j_popup_sell" + a).data("assetids"), $("#j_popup_sell" + a).data("should_delegate"))
		})
	};
	var S = function (t) {
		if (!t || !t.length) {
			return
		}
		var a = [];
		p.forEach(function (e) {
			if (t.includes(e.assetid)) {
				a.push(e)
			}
		});
		p = a
	};
	var O = function (e) {
		p = [];
		var a = 0;
		var i = undefined;
		e.forEach(function (e) {
			var t = assetInfoMgr().get_item(e);
			p.push({
				game: t.game,
				market_hash_name: t.market_hash_name,
				contextid: t.contextid,
				assetid: t.assetid,
				classid: t.classid,
				instanceid: t.instanceid,
				goods_id: t.goods_id,
				price: "",
				income: "",
				has_market_min_price: false
			});
			if (t.amount > 0) {
				i = t;
				a += t.amount
			}
		});
		if (p.length < 1) {
			Buff.toast(i18n("please_select_item"));
			return
		}
		var t = function (e, t, n) {
			sendRequest("/api/activity/coupon/my/", {
				method: "GET",
				data: {
					game: e,
					state: "unuse",
					coupon_type: "fee_discount",
					only_coupon: 1,
					page_size: 500
				},
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					var t = e.data.items;
					if (t.length < 1) {
						n([], true);
						return
					}
					var a = [];
					var i = false;
					t.forEach(function (e) {
						if (e.state != "using") {
							a.push({
								label: e.name,
								value: e.id,
								desc: e.expire_time.message + "&nbsp" + formatTimestamp(e.expire_time.time, "YYYY-MM-DD"),
								goods_id: e.info.goods_id,
								paintwear: e.info.paintwear
							});
							i = true
						}
					});
					if (a.length > 0) {
						a.push({
							value: h,
							label: i18n("not_use_coupon"),
							desc: ""
						})
					}
					n(a, !i && a.length < 1)
				}
			})
		};
		var n = function () {
			sendRequest("/market/sell_order/preview/" + $("#shelve").data("mode"), {
				data: {
					game: u,
					assets: p
				},
				dataType: "json",
				method: "POST",
				timeout: BuffConfig.STEAM_TIMEOUT + 1e3 * p.length,
				success: function (e) {
					if (e.code == "OK") {
						$("#popup-container").html(e.data);
						initCustomCurrency($("#j_popup_selling_preview"));
						Popup.show("j_popup_selling_preview");
						S($("#j_popup_selling_preview").data("selected_items") || []);
						Buff.pricePatten("input[name=price]");
						Buff.pricePatten("input[name=income]");
						t(u, "unuse", function (u, e) {
							f = {};
							m = {};
							var t = [];
							var a = "coupon_sel_";
							p.forEach(function (e) {
								t.push(a + e.assetid)
							});
							if (e) {
								r(t);
								return
							}
							p.forEach(function (e) {
								m[e.assetid] = ""
							});
							u.forEach(function (e) {
								f[e.value] = true
							});
							var i = function (e, t) {
								var a = $("#" + t);
								var i = a.attr("data-value");
								f[i] = true;
								f[e] = false;
								m[a.attr("assetid")] = e;
								return new Promise(function (e, t) {
									C();
									e()
								})
							};
							var n = function (e) {
								var t = $("#" + e).attr("assetid");
								var a = assetInfoMgr().get_item(t);
								var i = m[t];
								var n = false;
								var r = -1;
								var o = -1;
								var s = [];
								var c = a.goods_id;
								var _ = a.asset_info.paintwear;
								u.forEach(function (e) {
									if (f[e.value] || i == e.value) {
										if (e.value == h) {
											n = true
										}
										var t = true;
										if (e.goods_id && e.paintwear) {
											if (e.goods_id != c || e.paintwear != _) {
												t = false
											}
										}
										if (t) {
											s.push({
												value: e.value,
												label: e.label,
												desc: e.desc
											});
											r += 1;
											if (i == e.value) {
												o = r
											}
										}
									}
								});
								if (!n) {
									s.push({
										value: h,
										label: i18n("not_use_coupon"),
										desc: ""
									})
								}
								if (s.length <= 1) {
									s = []
								}
								var l = {
									placeholder: i18n("please_choose_coupon"),
									options: s
								};
								if (o != -1) {
									l.defaultIndex = o
								}
								return l
							};
							t.forEach(function (e) {
								var t = n(e);
								Buff.initCouponSelect(e, t, i)
							});
							t.forEach(function (e) {
								$("body").on("change", "#" + e, function () {
									var a = $(this).attr("id");
									t.forEach(function (e) {
										if (e == a) {
											return
										}
										var t = n(e);
										Buff.initCouponSelect(e, t, i)
									})
								})
							})
						})
					} else {
						Buff.alert({
							type: "error",
							title: i18n("shelve_failed"),
							message: e.error,
							hideCancel: true
						})
					}
				}
			})
		};
		if (a > p.length) {
			Buff.alert({
				title: i18n("listing_instructions_title"),
				message: i["name"] + i18n("listing_instructions_message"),
				confirmText: i18n("listing_instructions_confirm"),
				success: n
			})
		} else {
			n()
		}
	};
	var E = function (e, t) {
		if (t) {
			for (var a in assetids) {
				var i = assetids[a];
				$(`#j_list_card>ul>li[id=${i}]`).trigger("click")
			}
		}
		p = [];
		var n = 0;
		var r = undefined;
		e.forEach(function (e) {
			var t = assetInfoMgr().get_item(e);
			p.push({
				game: t.game,
				market_hash_name: t.market_hash_name,
				contextid: t.contextid,
				assetid: t.assetid,
				classid: t.classid,
				instanceid: t.instanceid,
				goods_id: t.goods_id,
				price: "",
				income: "",
				has_market_min_price: false
			});
			if (t.amount > 0) {
				r = t;
				n += t.amount
			}
		});
		if (p.length < 2) {
			Buff.toast(i18n("bundle_inventory_create_order_count"));
			return
		}
		var o = function () {
			sendRequest("/market/sell_order/preview/bundle_inventory", {
				data: {
					game: u,
					assets: p
				},
				dataType: "json",
				method: "POST",
				timeout: BuffConfig.STEAM_TIMEOUT + 1e3 * p.length,
				success: function (e) {
					if (e.code == "OK") {
						$("#popup-container").html(e.data);
						initCustomCurrency($("#j_popup_bundle_inventory_preview"));
						Popup.show("j_popup_bundle_inventory_preview");
						S($("#j_popup_bundle_inventory_preview").data("selected_items") || []);
						Buff.pricePatten("input[name=price]");
						Buff.pricePatten("input[name=income]")
					} else {
						Buff.alert({
							type: "error",
							title: i18n("shelve_failed"),
							message: e.error,
							hideCancel: true
						})
					}
				}
			})
		};
		if (n > p.length) {
			Buff.alert({
				title: i18n("listing_instructions_title"),
				message: r["name"] + i18n("listing_instructions_message"),
				confirmText: i18n("listing_instructions_confirm"),
				success: o
			})
		} else {
			o()
		}
	};
	return {
		init: o,
		CreateSellOrderPreview: B
	}
};
var selling = function (t) {
	var t = t;
	var d = g.game;
	var p = [];
	var o = {};
	var e = BuffConfig.MAX_SELL_PRICE;
	var a = BuffConfig.MIN_PRICE;
	var i = false;
	var n = null;
	var f = {};
	var m = {};
	var h = {};
	var v = "false";
	var c = function () {
		var e = $("#j_list_card li.on").length;
		$(".w-Checkbox[name=select-all] span").html(format_html('<i class="icon icon_checkbox"></i><%= i18n("all") %> (<%= count %>/<%= total_count %>)', {
			count: e,
			total_count: t
		}));
		if (e < 1) {
			$(".w-Checkbox[name=select-all] span").removeClass("on");
			$(".w-Checkbox[name=select-all]").attr({
				value: ""
			})
		}
	};
	var y = sellingPricing().check_price_value;
	var b = function () {
		clearTimeout(n);
		jQuery.xhrPool.abort("/api/market/batch/fee");
		n = setTimeout(function () {
			var e = [];
			var a = [];
			var i = 0;
			var n = 0;
			var t = [];
			var r = [];
			var o = 0;
			for (var s = 0; s < p.length; s++) {
				if (p[s].price > 0) {
					if (y(p[s].price, false, p[s].origin_price) == false) {
						return
					}
					if (!p[s].has_market_min_price) {
						e.push(p[s].price);
						a.push(s);
						r.push(p[s].goods_id);
						i += p[s].price;
						if (m[p[s].sell_order_id] != v) {
							t.push(m[p[s].sell_order_id])
						} else {
							t.push("")
						}
					} else {
						i += p[s].income;
						o += p[s].reward_points || 0
					}
				}
			}
			if (e.length < 1) {
				$("#j_popup_selling_change_preview span.sale_fee").html(formatPriceYuan(n));
				$("#j_popup_selling_change_preview span.real_income").html(formatPriceYuan(i - n));
				$("#j_popup_selling_change_preview span.real_income_custom").html(formatPriceNormalCustom(i - n));
				$("#j_popup_selling_change_preview span.reward_points").html(o);
				return
			}
			$("#j_popup_selling_change_preview a.confirm").addClass("i_Btn_disabled");
			sendRequest("/api/market/batch/fee", {
				data: {
					game: d,
					prices: e.join(","),
					cdkey_ids: t.join(","),
					goods_ids: r.join(",")
				},
				dataType: "json",
				method: "GET",
				showLoading: false,
				success: function (t) {
					if (t.code == "OK") {
						$("#j_popup_selling_change_preview a.confirm").removeClass("i_Btn_disabled");
						n += parseFloat(t.data.total_fee);
						$("#j_popup_selling_change_preview span.sale_fee").html(formatPriceYuan(n));
						$("#j_popup_selling_change_preview span.real_income").html(formatPriceYuan(i - parseFloat(n)));
						$("#j_popup_selling_change_preview span.real_income_custom").html(formatPriceNormalCustom(i - parseFloat(n)));
						$("#j_popup_selling_change_preview span.reward_points").html(t.data.total_reward_points + o);
						$("#j_popup_selling_change_preview input[name=income]").each(function () {
							var e = $(this).data("index") - 1;
							if (a.indexOf(e) != -1) {
								if (!$(this).is(":focus")) {
									p[e].income = p[e].price - parseFloat(t.data.fees[a.indexOf(e)]);
									$(this).val(p[e].income.toFixed(2));
									$(this).parents("tr").find(".sell-income-custom").text(formatPriceNormalCustom(p[e].income, true));
									$(this).removeClass("i_Text_error")
								}
							}
						});
						w()
					} else {
						Buff.toast(t.error, {
							type: "error"
						})
					}
				},
				error: function (e) {
					if (e.statusText != "abort") {
						Buff.toast(i18n("acquisition_fee_failed_please_try"))
					}
				}
			})
		}, 500)
	};
	var w = function () {
		var e = false;
		for (var t in m) {
			if (m[t] && m[t] != v) {
				e = true;
				break
			}
		}
		if (e) {
			$("#discount_icon").show()
		} else {
			$("#discount_icon").hide()
		}
	};
	var k = function (e) {
		e.forEach(function (e) {
			$("#" + e).hide()
		})
	};
	var r = function () {
		gameNavigator.setKeepParams(["mode"]);
		c();
		$(document).on("click", "#j_list_card > ul > li", function () {
			$(this).toggleClass("on");
			c()
		});
		$(".w-Checkbox[name=select-all]").change(function () {
			var e = $(this).attr("value");
			if (e == "selectall") {
				$("#j_list_card > ul > li").addClass("on")
			} else {
				$("#j_list_card > ul > li").removeClass("on")
			}
			c()
		});
		$(document).on("click", "#j_list_card .icon_recommend,#j_list_card .icon_fav2", function (e) {
			var t = this;
			sendRequest("/api/market/sell_order/featured", {
				data: {
					sell_order: $(this).data("orderid"),
					featured: $(this).hasClass("on") ? 0 : 1
				},
				dataType: "json",
				method: "PUT",
				showLoading: false,
				success: function (e) {
					if (e.code == "Featured Limit Excceed") {
						Buff.alert({
							title: i18n("the_recommended_bit_is_already"),
							message: e.error,
							hideCancel: true
						});
						return
					}
					if (e.code == "OK") {
						$(t).toggleClass("on");
						if ($(t).hasClass("on")) {
							$(t).attr("data-title", i18n("cancel_recommend"));
							$("#j_fixedtip h3").text(i18n("cancel_recommend"))
						} else {
							$(t).attr("data-title", i18n("the_set_of_recommended_items"));
							$("#j_fixedtip h3").text(i18n("the_set_of_recommended_items"))
						}
						return
					}
					Buff.toast(e.error, {
						type: "error"
					})
				}
			});
			e.stopPropagation()
		});
		s();
		_();
		userStoreOfflinePopup(OriginConst.MY_SELLING).show_daily()
	};
	var s = function () {
		var t = function (e) {
			p = e;
			if (e.length < 1) {
				Buff.toast(i18n("please_select_the_you_want"));
				return
			}
			Buff.alert({
				title: i18n("the_shelves"),
				message: $("#mode").val() === "manual" || $("#mode").val() === "partner" || $("#mode").val() === "bundle_inventory" || [2, 5, 7].includes(p[0].mode) ? i18n("determine_the_selected_accessories_to") : i18n("consignment_goods_shelf_will_be"),
				success: function () {
					var n = [];
					for (var e = 0; e < p.length; e++) {
						n.push(p[e]["sell_order_id"])
					}
					var t = function () {
						sendRequest("/api/market/sell_order/cancel", {
							data: {
								game: d,
								sell_orders: n
							},
							method: "POST",
							processData: false,
							timeout: Math.max(5e3, 1e3 * n.length),
							success: function (e) {
								if (e.code == "OK") {
									var t = 0;
									var a = 0;
									for (orderid in e.data) {
										if (e.data[orderid] == "OK") {
											t += 1
										} else {
											a += 1
										}
									}
									if (t == n.length) {
										Buff.toast(i18n("shelves_successful"), {
											type: "success"
										});
										window.location.reload()
									} else {
										var i = t + i18n("_piece_of_goods_off");
										i += "\n" + a + i18n("_piece_of_goods_has");
										Buff.alert({
											title: i18n("off_the_shelves_results"),
											message: i,
											hideCancel: true,
											success: function () {
												window.location.reload()
											}
										})
									}
									$("#j_list_card > ul > li").removeClass("on")
								}
							}
						})
					};
					sendRequest("/api/market/sell_order/cancel/check_rate_limit", {
						data: {
							game: d,
							sell_orders: n
						},
						method: "POST",
						processData: false,
						timeout: Math.max(5e3, 1e3 * n.length),
						success: function (e) {
							if (e.code == "OK") {
								t()
							} else if (e.code == "Request Rate Will Be Limited") {
								Buff.alert({
									title: i18n("the_shelves"),
									message: e.error,
									success: t
								})
							} else {
								Buff.toast(e.error, {
									type: "error"
								})
							}
						}
					})
				}
			})
		};
		$(document).off("click", "#cancel-order").on("click", "#cancel-order", function () {
			var e = [];
			$("#j_list_card > ul > li.on").each(function () {
				e.push({
					sell_order_id: $(this).data("orderid"),
					price: parseFloat($(this).data("price"))
				})
			});
			t(e)
		});
		$(document).off("click", "#my-selling-cancel-order").on("click", "#my-selling-cancel-order", function () {
			var e = $(this);
			t([{
				sell_order_id: e.data("orderid"),
				price: parseFloat(e.data("price")),
				mode: e.data("order-mode")
			}])
		});
		$(document).off("click", "#cancel-bundle-order").on("click", "#cancel-bundle-order", function () {
			var e = [];
			e.push({
				sell_order_id: $(this).data("orderid"),
				price: parseFloat($(this).data("price"))
			});
			t(e)
		})
	};
	var _ = function (e) {
		var e = e || {};
		var s = e.on_finish_change_price_callback;
		var t = function () {
			if (p.length < 1) {
				Buff.toast(i18n("select_to_change_the_price"));
				return
			}
			var i = function (e, t, n) {
				sendRequest("/api/activity/coupon/my/", {
					method: "GET",
					data: {
						game: e,
						state: "unuse",
						coupon_type: "fee_discount",
						only_coupon: 1,
						page_size: 500
					},
					dataType: "json",
					showLoading: false,
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						var t = e.data.items;
						if (t.length < 1) {
							n([], true);
							return
						}
						var a = [];
						var i = {};
						t.forEach(function (e) {
							if (e.state != "using") {
								a.push({
									label: e.name,
									value: e.id,
									desc: e.expire_time.message + "&nbsp" + formatTimestamp(e.expire_time.time, "YYYY-MM-DD"),
									goods_id: e.info.goods_id,
									paintwear: e.info.paintwear
								})
							} else {
								i[e.id] = e
							}
						});
						a.push({
							value: v,
							label: i18n("not_use_coupon"),
							desc: ""
						});
						n(a, i, Object.keys(i).length < 0 && a.length <= 1)
					}
				})
			};
			var n = function (t) {
				if (!t || !t.length) {
					return
				}
				var a = [];
				p.forEach(function (e) {
					if (t.includes(e.sell_order_id)) {
						a.push(e)
					}
				});
				p = a
			};
			sendRequest("/market/sell_order/change_preview", {
				method: "POST",
				data: {
					game: d,
					sell_orders: p
				},
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						var t = false;
						if (e.msg) {
							t = true
						}
						$("#popup-container").html(e.data);
						initCustomCurrency($("#j_popup_selling_change_preview"));
						Popup.show("j_popup_selling_change_preview");
						if (t) {
							var a = $("#j_popup_selling_change_preview").data("selected_items") || [];
							n(a)
						}
						Buff.pricePatten("input[name=price]");
						Buff.pricePatten("input[name=income]");
						l();
						h = {};
						m = {};
						var o = {};
						var u = {};
						var s = [];
						var c = "coupon_sel_";
						p.forEach(function (e) {
							var t = e.sell_order_id;
							var a = $("#sell_order_" + t);
							var i = a.data("coupon-infos");
							if (i) {
								var n = i[0];
								var r = n.cdkey_id;
								o[t] = i;
								m[t] = r;
								h[r] = {
									state: false,
									value: r,
									original_order_id: t
								};
								s.push(c + t);
								u[r] = {
									value: r,
									label: n.cdkey_text,
									desc: "loading....."
								}
							}
						});
						var _ = function (e) {
							var t = [];
							var a = $("#" + e).attr("order_id");
							var i = m[a];
							var n = false;
							var r = -1;
							var o = -1;
							var s = f[a];
							for (var c in u) {
								var _ = u[c];
								if (h[_.value]["state"] || i == _.value) {
									if (_.value == v) {
										n = true
									}
									if (_.goods_id && _.paintwear) {
										if (_.goods_id != s.goods_id || _.paintwear != s.paintwear) {
											continue
										}
									}
									t.push({
										value: _.value,
										label: _.label,
										desc: _.desc
									});
									r += 1;
									if (i == _.value) {
										o = r
									}
								}
							}
							if (!n && t.length > 0) {
								t.push({
									value: v,
									label: i18n("not_use_coupon"),
									desc: ""
								})
							}
							if (t.length <= 1) {
								t = []
							}
							var l = {
								placeholder: i18n("please_choose_coupon"),
								options: t
							};
							if (o != -1) {
								l.defaultIndex = o
							}
							return l
						};
						s.forEach(function (e) {
							w()
						});
						i(d, "unuse", function (e, i, t) {
							u = {};
							h = {};
							m = {};
							var n = [];
							var a = "coupon_sel_";
							p.forEach(function (e) {
								n.push(a + e.sell_order_id)
							});
							if (t) {
								k(n);
								return
							}
							p.forEach(function (e) {
								var a = e.sell_order_id;
								if (o[a]) {
									o[a].forEach(function (e) {
										if (e.coupon_type == "fee_discount") {
											var t = i[e.cdkey_id];
											u[e.cdkey_id] = {
												value: e.cdkey_id,
												label: t.name,
												desc: t.expire_time.message + "&nbsp" + formatTimestamp(t.expire_time.time, "YYYY-MM-DD"),
												goods_id: t.info.goods_id,
												paintwear: t.info.paintwear
											};
											h[e.cdkey_id] = {
												state: false,
												value: e.cdkey_id,
												is_expired: t.expire_time.is_expired,
												original_order_id: a
											};
											m[a] = e.cdkey_id
										}
									})
								}
							});
							if (e.length <= 1 && Object.keys(o).length == 0) {
								k(n);
								return
							}
							e.forEach(function (e) {
								u[e.value] = e;
								h[e.value] = {
									state: true,
									value: e.value,
									is_expired: false
								}
							});
							var r = function (a, e) {
								var t = $("#" + e);
								var i = t.attr("order_id");
								var n = t.attr("data-value");
								var r = h[n];
								if (n && r.is_expired && r.original_order_id == i) {
									return new Promise(function (e, t) {
										Buff.alert({
											message: i18n("expired_coupon_switch"),
											cancel: function () {
												t()
											},
											success: function () {
												m[i] = a;
												h[a]["state"] = false;
												delete h[n];
												delete u[n];
												b();
												e()
											}
										})
									})
								} else {
									m[i] = a;
									if (n) {
										h[n]["state"] = true
									}
									h[a]["state"] = false;
									return new Promise(function (e, t) {
										b();
										e()
									})
								}
							};
							n.forEach(function (e) {
								var t = _(e);
								Buff.initCouponSelect(e, t, r);
								w()
							});
							n.forEach(function (e) {
								$("body").on("change", "#" + e, function () {
									var a = $(this).attr("id");
									n.forEach(function (e) {
										if (e == a) {
											return
										}
										var t = _(e);
										Buff.initCouponSelect(e, t, r)
									})
								})
							})
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		};
		$("#change-price").click(function () {
			p = [];
			o = {};
			$("#j_list_card > ul > li.on").each(function () {
				p.push({
					sell_order_id: $(this).data("orderid"),
					price: "",
					income: "",
					has_market_min_price: false,
					goods_id: $(this).data("goodsid"),
					paintwear: ($(this).data("asset-info") || {})["paintwear"]
				});
				o[$(this).data("assetid").toString()] = $(this).data("orderid");
				f[$(this).data("orderid")] = {
					name: $(this).data("goods-name"),
					icon_url: $(this).data("icon-url"),
					tags: $(this).data("goods-tags"),
					appid: $(this).data("appid"),
					assetid: $(this).data("assetid").toString(),
					goods_id: $(this).data("goodsid"),
					paintwear: ($(this).data("asset-info") || {})["paintwear"]
				}
			});
			t()
		});
		$(document).on("click", ".change-price-btn", function (e) {
			e.stopPropagation();
			p = [{
				sell_order_id: $(this).data("orderid"),
				price: "",
				income: "",
				has_market_min_price: false,
				goods_id: $(this).data("goodsid"),
				paintwear: ($(this).data("asset-info") || {})["paintwear"]
			}];
			f[$(this).data("orderid")] = {
				name: $(this).data("goods-name"),
				icon_url: $(this).data("icon-url"),
				tags: $(this).data("goods-tags"),
				appid: $(this).data("appid"),
				goods_id: $(this).data("goodsid"),
				paintwear: ($(this).data("asset-info") || {})["paintwear"]
			};
			t()
		});
		var l = function () {
			$("#j_popup_selling_change_preview tr.assets-item input[name=price]").each(function () {
				var e = $(this).data("index") - 1;
				var t = parseFloat($(this).val());
				if (isNaN(t) || $(this).val().length == 0) {
					p[e].price = ""
				} else {
					p[e].price = t
				}
				p[e].has_market_min_price = parseFloat($(this).data("market-min-price")) > 0;
				p[e].reward_points = parseInt($(this).data("reward-points")) || 0
			});
			$("#j_popup_selling_change_preview tr.assets-item input[name=income]").each(function () {
				var e = $(this).data("index") - 1;
				var t = parseFloat($(this).val());
				if (isNaN(t) || $(this).val().length == 0) {
					p[e].income = ""
				} else {
					p[e].income = t
				}
			})
		};
		$(document).on("change", ".w-Checkbox[name=combine]", function () {
			var e = $(this).attr("value");
			if (e == "combine") {
				var t = [];
				p.forEach(function (e) {
					t.push(e.sell_order_id)
				});
				var a = $("#j_popup_selling_change_preview").data("group-key");
				for (var i in a) {
					var n = [];
					a[i].assetids.forEach(function (e) {
						if (t.includes(o[e])) {
							n.push(e)
						}
					});
					var r = n.length;
					if (r > 1) {
						$("#j_popup_selling_change_preview tr.group_key_" + i + ":not(:first)").hide();
						$("#j_popup_selling_change_preview tr.group_key_" + i + ":first .name-cont p.num").remove();
						$("#j_popup_selling_change_preview tr.group_key_" + i + ":first .name-cont").append('<p class="num c_Gray" style="font-size: 13px;"> ×' + r + "</p>");
						$("#j_popup_selling_change_preview tr.group_key_" + i + " input").val("");
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .sell-price-custom").html("");
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .sell-income-custom").html("");
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .pic-cont .item-count").show();
						$("#j_popup_selling_change_preview tr.group_key_" + i).next(".des_row").hide();
						$("#j_popup_selling_change_preview tr.group_key_" + i + " td").css("border-bottom", "1px solid #E9E9E9");
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .edit_order_desc a").hide();
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .edit_order_desc .w-Select-coupon").hide();
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .paint-wear").hide();
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .csgo_sticker_inline").hide();
						$("#j_popup_selling_change_preview tr.group_key_" + i + " .group_key_notice").show();
						$("#j_popup_selling_change_preview tr.group_key_" + i + " div.notes").hide()
					}
				}
				l();
				b()
			} else {
				$("#j_popup_selling_change_preview tr.assets-item").show();
				$("#j_popup_selling_change_preview tr.assets-item .edit_order_desc a").show();
				$("#j_popup_selling_change_preview tr.assets-item .edit_order_desc .w-Select-coupon").show();
				$("#j_popup_selling_change_preview tr.assets-item .paint-wear").show();
				$("#j_popup_selling_change_preview tr.assets-item .csgo_sticker_inline").show();
				$("#j_popup_selling_change_preview tr.assets-item.has_des").next().show();
				$("#j_popup_selling_change_preview tr.assets-item.has_des td").css("border-bottom", "0");
				$("#j_popup_selling_change_preview tr.assets-item .name-cont p.num").remove();
				$("#j_popup_selling_change_preview tr.assets-item .pic-cont .item-count").hide();
				$("#j_popup_selling_change_preview tr.assets-item .group_key_notice").hide();
				$("#j_popup_selling_change_preview tr.assets-item div.notes").show()
			}
		});
		$(document).on("input", "#j_popup_selling_change_preview input[name=price]", function () {
			var e = $(this).data("index") - 1;
			var t = $(this).val();
			var a = $(this).parents("tr").find("input[name=income]").val();
			var i = parseFloat(t);
			var n = parseFloat(a);
			var r = parseFloat($(this).data("market-min-price"));
			var o = parseInt($(this).data("reward-points")) || 0;
			if (r > 0 && i < r) {
				i = r
			}
			if (y($(this).val(), false, $(this).attr("value"))) {
				$(this).removeClass("i_Text_error")
			} else {
				$(this).addClass("i_Text_error")
			}
			p[e].price = i;
			p[e].origin_price = $(this).attr("value");
			p[e].income = n;
			p[e].has_market_min_price = r > 0;
			p[e].reward_points = o;
			var s = $(".w-Checkbox[name=combine]").attr("value");
			if (s == "combine") {
				var c = $("#j_popup_selling_change_preview").data("group-key");
				var _ = $(this).data("group-key");
				var l = c[_].assetids;
				for (var u = 0; u < p.length; u++) {
					if (l.indexOf(f[p[u].sell_order_id].assetid) > -1) {
						p[u].price = p[e].price;
						p[u].income = p[e].income;
						p[u].has_market_min_price = p[e].has_market_min_price;
						p[u].reward_points = p[e].reward_points
					}
				}
				$("#j_popup_selling_change_preview tr.group_key_" + _ + " input[name=price]").val(t);
				$("#j_popup_selling_change_preview tr.group_key_" + _ + " input[name=income]").val(a);
				$("#j_popup_selling_change_preview tr.group_key_" + _ + " .sell-price-custom").html(i ? formatPriceNormalCustom(i, true) : "");
				$("#j_popup_selling_change_preview tr.group_key_" + _ + " .sell-price-income").html(n ? formatPriceNormalCustom(n, true) : "");
				if ($(this).hasClass("i_Text_error")) {
					$("#j_popup_selling_change_preview tr.group_key_" + _ + " input[name=price]").addClass("i_Text_error");
					$("#j_popup_selling_change_preview tr.group_key_" + _ + " input[name=income]").addClass("i_Text_error")
				} else {
					$("#j_popup_selling_change_preview tr.group_key_" + _ + " input[name=price]").removeClass("i_Text_error");
					$("#j_popup_selling_change_preview tr.group_key_" + _ + " input[name=income]").removeClass("i_Text_error");
					$("#j_popup_selling_change_preview tr.group_key_" + _ + " .cannot-quick-pricing").remove()
				}
			}
			$(this).parents("tr").find(".sell-price-custom").html(i ? formatPriceNormalCustom(i, true) : "");
			b()
		});
		$(document).on("change", "#j_popup_selling_change_preview input[name=price]", function () {
			if (y($(this).val(), true, $(this).attr("value"))) {
				b()
			}
		});
		var n = sellingPricing();
		$(document).on("input", "#j_popup_selling_change_preview input[name=income]", function () {
			var e = $(this).parents("tr");
			var t = $(e).attr("id").replace("sell_order_change_", "");
			var a = m[t] != "false" ? m[t] : "";
			n.get_price_from_income(e, a);
			var i = $(this).val();
			$(this).parents("tr").find(".sell-income-custom").html(i ? formatPriceNormalCustom(i, true) : "")
		});
		$(document).on("change", "#j_popup_selling_change_preview input[name=income]", function () {
			if (y($(this).val(), true)) {
				var e = $(this).parents("tr");
				var t = $(e).attr("id").replace("sell_order_change_", "");
				var a = m[t] != "false" ? m[t] : "";
				n.get_price_from_income(e, a)
			}
		});
		$(document).on("click", "#j_popup_selling_change_preview #quick-pricing", function () {
			n.quick_pricing($("#j_popup_selling_change_preview"));
			b()
		});
		$(document).on("click", "#j_popup_selling_change_preview a.confirm:not(.i_Btn_disabled)", function () {
			for (var e = 0; e < p.length; e++) {
				var t = p[e];
				if (y(t.price, true, t.origin_price) == false) {
					return
				}
				var a = $("#sell_order_change_" + t.sell_order_id).next().find(".desc_content").text();
				t.desc = a
			}
			n.find_unusual_price($("#j_popup_selling_change_preview"), function () {
				p.forEach(function (e) {
					var t = m[e.sell_order_id] || "";
					if (t != v) {
						e["cdkey_id"] = t
					}
				});
				sendRequest("/api/market/sell_order/change", {
					method: "POST",
					data: {
						game: d,
						sell_orders: p
					},
					timeout: Math.max(5e3, 1e3 * p.length),
					success: function (e) {
						if (e.code == "OK") {
							var t = 0;
							var a = [];
							for (var i = 0; i < p.length; i++) {
								var n = p[i].sell_order_id;
								var r = e.data[n];
								if (r == "OK") {
									t += 1;
									$("#sell_order_" + n).find(".sell_order_price").html(formatPriceCustom(p[i].price));
									$("#sell_order_" + n).data("price", p[i].price)
								} else {
									a.push({
										order: p[i],
										reason: r,
										info: f[n]
									})
								}
							}
							if (a.length > 0) {
								Popup.hide();
								var o = template_render("change_price_result_pat", {
									failures: a,
									success: t
								});
								$("#popup-container").html(o);
								Popup.show("j_popup_change_price_result")
							} else {
								if ($(".c_Yellow.offline_tips").is(":visible")) {
									Popup.hide();
									Buff.alert({
										title: i18n("the_modified_price_of_success"),
										message: i18n("add_in_the_buyers_payment"),
										hideCancel: true,
										rememberDismiss: "deliver_tips",
										success: function (e) {
											if (e) {
												Buff.toast(i18n("the_modified_price_of_success"), {
													type: "success"
												});
												Popup.hide()
											}
											setTimeout(function () {
												window.location.reload()
											}, 2e3)
										}
									})
								} else {
									Buff.toast(i18n("the_modified_price_of_success"), {
										type: "success"
									});
									Popup.hide();
									if (s) {
										s()
									} else {
										setTimeout(function () {
											window.location.reload()
										}, 2e3)
									}
								}
								$("#select-all").removeClass("all");
								$("#j_list_card > ul > li").removeClass("on")
							}
							c()
						} else if (e.code == "Invalid Argument") {
							Buff.toast(e.error || e.code, {
								type: "warning"
							})
						} else {
							Buff.toast(e.error || i18n("change_price_of_failure"), {
								type: "error"
							})
						}
					}
				})
			}, true)
		});
		$(document).on("click", ".edit_order_desc a", function () {
			var e = $(this).data("orderid");
			Popup.show("j_pupup_add_desc");
			var t = $("#sell_order_change_" + e).next().find(".desc_content").text();
			$("#j_pupup_add_desc .addDesWrapper textarea").focus().val(t).trigger("input");
			$("#j_pupup_add_desc .i_Btn_main").data("orderid", e)
		});
		$(document).on("click", "#j_pupup_add_desc .i_Btn_main", function () {
			var e = $(this).data("orderid");
			var t = $("#j_pupup_add_desc .addDesWrapper textarea").val();
			if (t.length > 40) {
				Buff.toast(i18n("the_content_of_the_input"))
			} else {
				$("#sell_order_change_" + e).next().find(".desc_content").text(t);
				for (var a = 0; a < p.length; a++) {
					if (p[a].sell_order_id == e) {
						p[a].desc = t
					}
				}
				if (t.length > 0) {
					$("#sell_order_change_" + e).next().show();
					$("#sell_order_change_" + e).addClass("has_des");
					$("#sell_order_change_" + e + " td").css("border-bottom", "0");
					$("#sell_order_change_" + e + " .edit_order_desc a").text(i18n("edit_the_description"))
				} else {
					$("#sell_order_change_" + e + " td").css("border-bottom", "1px solid #E9E9E9");
					$("#sell_order_change_" + e).next().hide();
					$("#sell_order_change_" + e).removeClass("has_des");
					$("#sell_order_change_" + e + " .edit_order_desc a").text(i18n("add_a_description"))
				}
				Popup.hide()
			}
		})
	};
	return {
		init: r,
		init_change_price: _,
		init_cancel_order: s
	}
};
var exportRecord = function () {
	var a = undefined;
	var e = function () {
		var e = ".export-record";
		var u = function () {
			sendRequest("/account/api/export/bill_order/history", {
				method: "GET",
				showLoading: false,
				success: function (e) {
					var t = e.data.items;
					for (let e of t) {
						e["created_at"] = moment(e["created_at"] * 1e3).format("YYYY.MM.DD");
						e["time_range"] = moment(e["start_time"] * 1e3).format("YYYY.MM.DD") + " - " + moment(e["end_time"] * 1e3).format("YYYY.MM.DD");
						e["categorys"] = e["categorys"].join(",")
					}
					var a = template_render("record_table_body", {
						items: t
					});
					$("#j_record_table").find("tbody").find("tr:not(:first)").remove();
					$("#j_record_table").find("tbody").append(a)
				}
			})
		};
		$("body").on("change", "#j_popup_export", function (e, t) {
			if (e.target.id == "j_popup_export") {
				clearInterval(a)
			}
		});
		$("body").on("change", "#j_select_export_time", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).attr("value");
			if (t == 100) {
				$('[data-toggle="datepicker"]').datepicker("reset");
				$("#j_data-picker-cont").show()
			} else {
				$("#j_data-picker-cont").hide()
			}
		});
		$(document).off("click", e);
		$(document).on("click", e, function (e) {
			u();
			a = setInterval(u, 10 * 1e3);
			$.fn.datepicker.languages["zh-CN"] = {
				format: "yyyy年mm月dd日",
				days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
				daysShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
				daysMin: ["日", "一", "二", "三", "四", "五", "六"],
				months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
				monthsShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
				weekStart: 1,
				startView: 0,
				yearFirst: true,
				yearSuffix: "年"
			};
			var t = moment().format("YYYY-MM-DD");
			$('[data-toggle="datepicker"]').datepicker({
				autoHide: true,
				format: "yyyy-mm-dd",
				endDate: t,
				language: i18n("datepicker_language")
			});
			$("#j_autoClose span.on").click();
			Buff.setCompValue("j_select_export_time", "-1");
			$("#j_select_export_time").change();
			$(".confirm-export").unbind("click").click(function (e) {
				e.preventDefault();
				e.stopPropagation();
				var t = $("#j_autoClose").attr("value");
				if (!t) {
					Buff.toast(i18n("select_export_option"), {
						type: "warning"
					});
					return
				}
				var a = $("#j_select_export_time").attr("value");
				var i = moment();
				if (!a || a == -1) {
					Buff.toast(i18n("select_export_time"), {
						type: "warning"
					});
					return
				} else if (a == 1) {
					var n = i.clone().subtract(6, "months");
					var r = i
				} else if (a == 2) {
					var n = i.clone().subtract(12, "months");
					var r = i
				} else if (a == 3) {
					var n = i.clone().subtract(24, "months");
					var r = i
				} else if (a == 100) {
					var o = $("#j_time_start h3").html();
					var s = $("#j_time_end h3").html();
					var c = "00:00:00";
					var _ = "23:59:59";
					if (!moment(o).isValid()) {
						Buff.toast(i18n("select_export_time"), {
							type: "warning"
						});
						return
					} else {
						var n = moment(o + " " + c)
					}
					if (!moment(r).isValid()) {
						Buff.toast(i18n("select_export_time"), {
							type: "warning"
						});
						return
					} else {
						var r = moment(s + " " + _)
					}
					if (r < n) {
						Buff.toast(i18n("export_time_invalid"), {
							type: "warning"
						});
						return
					}
				}
				var l = {
					categorys: t,
					start_time: n.unix(),
					end_time: r.unix()
				};
				sendRequest("/account/api/export/bill_order", {
					method: "POST",
					dataType: "json",
					data: l,
					success: function (e) {
						if (e.error) {
							Buff.toast(e.error, {
								type: "warning"
							})
						} else {
							Buff.toast(i18n("export_bill_order_success"));
							u()
						}
					}
				})
			});
			Popup.show("j_popup_export")
		})
	};
	return {
		init: e
	}
};
var sellingToDeliver = function (e, t) {
	var n = g.game;
	var e = e;
	var r = [];
	var o = function () {
		var e = $(".deliver-order.TO_DELIVER .pic-cont.on").length;
		$(".w-Checkbox[name=select-all] span").html(format_html('<i class="icon icon_checkbox"></i><%= i18n("all") %> (<%= count %>/<%= total_count %>)', {
			count: e,
			total_count: t
		}));
		if (e < 1) {
			$(".w-Checkbox[name=select-all] span").removeClass("on");
			$(".w-Checkbox[name=select-all]").attr({
				value: ""
			})
		}
	};
	var i = function (e) {
		if (e == 0) {
			return "00"
		} else if (e > 0 && e < 10) {
			return "0" + e
		}
		return "" + e
	};
	var s = function (e) {
		$("span.count-down").each(function () {
			var e = $(this).data("expire");
			$(this).data("expire", e - 1);
			e = parseInt(e);
			var t = i18n("delivery_timeout");
			if (e > 0) {
				var a = moment.duration(e, "seconds");
				t = i(parseInt(a.asHours())) + ":" + i(a.minutes()) + ":" + i(a.seconds())
			}
			$(this).text(t)
		});
		if (e == true) setTimeout(function () {
			s(true)
		}, 1e3)
	};
	s(true);
	var c = function (a) {
		sendRequest("/market/sell_order/to_deliver/batch", {
			data: {
				game: n,
				bill_orders: e.join(",")
			},
			showLoading: false,
			showError: false,
			method: "GET",
			dataType: "json",
			success: function (e) {
				if (e.code == "OK") {
					$("table.list_tb tbody").html(e.data);
					initCustomCurrency($("table.list_tb tbody"));
					for (var t = 0; t < r.length; t++) {
						$("#bill_order_" + r[t] + " .pic-cont").addClass("on")
					}
					s();
					if (a == true) setTimeout(function () {
						c(true)
					}, 5e3)
				} else {
					Buff.toast(e.error)
				}
			}
		})
	};
	if (e.length > 0) c(true);
	update_bot({
		polling: true,
		onStateChange: function () {
			c()
		}
	});
	var a = function () {
		o();
		$(".w-Checkbox[name=select-all]").change(function () {
			var e = $(this).attr("value");
			if (e == "selectall") {
				$(".deliver-order.TO_DELIVER .pic-cont").addClass("on")
			} else {
				$(".deliver-order.TO_DELIVER .pic-cont").removeClass("on")
			}
			r = [];
			$(".deliver-order.TO_DELIVER .pic-cont.on").each(function () {
				var e = $(this).data("orderid");
				r.push(e)
			});
			o()
		});
		$("#deliver").click(function () {
			Buff.alert({
				title: i18n("prompt"),
				message: i18n("beware_of_phishing_scams_please"),
				cancelText: i18n("to_check"),
				confirmText: i18n("i_know"),
				rememberDismiss: "fraud_notice",
				hide_popup_after_cancel: false,
				success: e,
				cancel: function () {
					openPageOnNewTab("https://steamcommunity.com/dev/apikey")
				}
			})
		});
		var e = function () {
			r = [];
			$(".deliver-order.TO_DELIVER .pic-cont.on").each(function () {
				var e = $(this).data("orderid");
				r.push(e)
			});
			a(r)
		};
		var a = function (e) {
			if (e.length < 1) {
				Buff.toast(i18n("please_select_to_ship_the"));
				return
			}
			sendRequest("/api/market/bill_order/deliver", {
				data: {
					game: n,
					bill_orders: e
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code == "OK") {
						bot_trades = {};
						bot_trades[e.data.id] = e.data;
						update_bot();
						c()
					} else if (e.code == "Steam Trade URL Binding Required") {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("unbound_steam_trading_link_whether"),
							success: function () {
								window.open("/user-center/profile", "_blank")
							},
							cancel: function () {
								Buff.toast(i18n("the_quote_failed_to_send"))
							}
						})
					} else {
						Buff.toast(i18n("the_quote_failed_to_send") + e.error)
					}
				}
			})
		};
		$(document).on("click", ".cancel-deliver", function (e) {
			e.stopPropagation();
			var t = $(this).data("orderid");
			sendRequest("/api/market/bill_order/deliver/cancel/preview", {
				data: {
					game: n,
					bill_order_id: t
				},
				dataType: "json",
				method: "GET",
				success: function (e) {
					if (e.code == "OK") {
						Buff.alert({
							title: i18n("cancel_the_shipment"),
							message: e.data.message,
							cancelText: i18n("i_think_again"),
							confirmText: i18n("cancel_the_shipment"),
							success: function () {
								sendRequest("/api/market/bill_order/deliver/cancel", {
									data: {
										game: n,
										bill_order_id: t
									},
									dataType: "json",
									method: "POST",
									success: function (e) {
										if (e.code == "OK") {
											c();
											Buff.toast(i18n("cancel_delivery_success"))
										} else {
											Buff.toast(e.error, {
												type: "error"
											})
										}
									}
								})
							}
						})
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$(document).on("click", ".replace-asset", function (e) {
			e.stopPropagation();
			var t = $(this).data("orderid");
			i(t, false)
		});
		$(document).on("click", ".refresh-inventory", function (e) {
			$(this).hide();
			$("#j_popup_replace_asset .packlist").showLoading();
			$("#j_popup_replace_asset").find("#deliver-confirm").addClass("i_Btn_disabled");
			$("#j_popup_replace_asset").find("#fee").html(formatPriceNormalYuan(0));
			$("#j_popup_replace_asset").find("#total_price").html(formatPriceYuan(0));
			$("#j_popup_replace_asset").find("#total_price_custom").html(formatPriceNormalCustom(0));
			var t = $(this).data("orderid");
			i(t, true)
		});
		var i = function (e, t) {
			var a = t ? 1 : undefined;
			sendRequest("/api/market/bill_order/replace_asset/preview", {
				method: "GET",
				timeout: BuffConfig.STEAM_TIMEOUT,
				data: {
					bill_order_id: e,
					force_update: a
				},
				showLoading: !t,
				success: function (a) {
					if (a.code != "OK") {
						Buff.toast(a.error, {
							type: "error"
						});
						return
					}
					var e = template_render("replace_asset_pat", a.data);
					$("#popup-container").html(e);
					var i = null;
					$("#j_popup_replace_asset").find(".packcard li").click(function () {
						var e = $(this).attr("data-assetid");
						if ($(this).hasClass("on")) {
							$(this).removeClass("on");
							if (i == e) i = null
						} else {
							if (i && i != e) return;
							$(this).addClass("on");
							i = e
						}
						$("#j_popup_replace_asset").find("#deliver-confirm").data("assetid", i);
						var t = i ? 1 : 0;
						$("#selected-backpack-num").text(t);
						if (i) {
							$("#j_popup_replace_asset").find("#deliver-confirm").removeClass("i_Btn_disabled")
						} else {
							$("#j_popup_replace_asset").find("#deliver-confirm").addClass("i_Btn_disabled")
						}
						if (i) {
							$("#j_popup_replace_asset").find(".packcard li").each(function () {
								if (!$(this).hasClass("on")) {
									$(this).find(".mask").css("display", "block")
								} else {
									$(this).find(".mask").hide()
								}
							})
						} else {
							$("#j_popup_replace_asset").find(".mask").hide()
						}
						$("#j_popup_replace_asset").find("#fee").html(formatPriceNormalYuan(t * parseFloat(a.data.bill_order.fee)));
						$("#j_popup_replace_asset").find("#total_price").html(formatPriceYuan(t * (a.data.bill_order.price - a.data.bill_order.fee)));
						$("#j_popup_replace_asset").find("#total_price_custom").html(formatPriceNormalCustom(t * (a.data.bill_order.price - a.data.bill_order.fee)))
					});
					if (t) {
						Popup.hide()
					}
					Popup.show("j_popup_replace_asset")
				}
			})
		};
		$(document).on("click", "#j_popup_replace_asset #deliver-confirm", function () {
			if ($(this).hasClass("i_Btn_disabled")) return;
			$(this).addClass("i_Btn_disabled");
			var t = $(this).data("orderid");
			var e = $(this).data("assetid");
			sendRequest("/api/market/bill_order/replace_asset", {
				method: "POST",
				data: {
					bill_order_id: t,
					assetid: e
				},
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					Popup.hide();
					a([t])
				}
			})
		});
		$(document).on("click", ".deliver-order.TO_DELIVER", function () {
			$(this).find(".pic-cont").toggleClass("on");
			r = [];
			$(".deliver-order.TO_DELIVER .pic-cont.on").each(function () {
				var e = $(this).data("orderid");
				r.push(e)
			});
			o()
		})
	};
	return {
		init: a
	}
};
var sellingPricing = function () {
	var e = function (e, a = "absolute") {
		e.find('input[name="price"]').each(function () {
			var e = $(this).data("quick-price");
			if (e > 0) {
				$(this).val(e).trigger("input")
			} else {
				$(this).val("");
				$(this).parents("tr").find('input[name="income"]').val("");
				$(this).trigger("input");
				$(this).parents("tr").find('input[name="income"]').trigger("input");
				var t = $(this).data("error");
				if (t.length < 1) t = i18n("the_goods_can_not_a");
				if (a === "absolute") {
					css = {
						"padding-top": "5px",
						position: "absolute"
					}
				} else {
					css = {
						"padding-top": "5px"
					}
				}
				var t = $("<p />", {
					class: "c_Gray cannot-quick-pricing"
				}).append($("<small />", {
					text: t
				})).css(css);
				$(this).parent().append(t)
			}
		})
	};
	var t = function (e, t, a) {
		var i = e.find('input[name="price"]');
		var n = [];
		var r = [];
		var o = [];
		for (var s = 0; s < i.length; s++) {
			var c = $(i[s]).data("goodsid");
			n.push($(i[s]).val());
			r.push(c);
			o.push($(i[s]).data("assetid"))
		}
		sendRequest("/api/market/batch/fee", {
			method: "GET",
			dataType: "json",
			data: {
				game: g.game,
				prices: n.join(","),
				goods_ids: r.join(","),
				asset_ids: o.join(","),
				is_change: a ? 1 : 0,
				check_price: 1
			},
			showLoading: false,
			success: function (e) {
				if (e.code !== "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				if (e.data.unusual) {
					config = {
						title: e.data.title,
						message: e.data.message,
						cancelText: e.data.cancel_text,
						confirmText: e.data.confirm_text,
						confirm_wait: e.data.confirm_wait,
						success: function () {
							t()
						}
					};
					cancel_entry = e.data.cancel_entry;
					if (cancel_entry) {
						config.cancel = function () {
							window.open(cancel_entry.url)
						}
					}
					Buff.alert(config)
				} else {
					t()
				}
			}
		})
	};
	var a = function (e, t, a, i) {
		var n = e.find('input[name="price"]').val();
		sendRequest("/api/market/bundle_inventory/fee", {
			method: "GET",
			dataType: "json",
			data: {
				game: g.game,
				price: n,
				goods_ids: t.join(","),
				is_change: i ? 1 : 0,
				check_price: 1
			},
			showLoading: false,
			success: function (e) {
				if (e.code !== "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				if (e.data.unusual) {
					Buff.alert({
						title: e.data.title,
						message: e.data.message,
						cancelText: e.data.cancel_text,
						confirmText: e.data.confirm_text,
						success: function () {
							a()
						}
					})
				} else {
					a()
				}
			}
		})
	};
	var r = function (e, t, a) {
		var i = BuffConfig.MIN_PRICE;
		var n = BuffConfig.MAX_SELL_PRICE;
		if (typeof e == "string" && e.length == 0 || typeof e == "object" || isNaN(e)) {
			if (t) {
				Buff.toast(i18n("there_goods_is_not_input"), {
					type: "error"
				})
			}
			return false
		}
		e = parseFloat(e);
		a = a && parseFloat(a) || 0;
		if (e < i) {
			if (t) {
				Buff.toast(i18n("price_must_be_greater_than") + i)
			}
			return false
		}
		return true
	};
	var o = {};
	var i = {};
	var s = {};
	var n = function (t, a) {
		var e = $(t).find("input[name=income]");
		var i = $(t).attr("id");
		var n = $(e).data("goodsid");
		if (r($(e).val())) {
			$(e).removeClass("i_Text_error")
		} else {
			$(e).addClass("i_Text_error")
		}
		clearTimeout(o[i]);
		if (s[i]) s[i].abort();
		o[i] = setTimeout(function () {
			var e = $(t).find("input[name=income]").val();
			if (r(e, false)) {
				sendRequest("/api/market/get_prices_from_incomes", {
					data: {
						game: g.game,
						incomes: e,
						cdkey_ids: a,
						goods_ids: n
					},
					dataType: "json",
					method: "GET",
					showLoading: false,
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						$(t).find("input[name=price]").val(e.data.prices[0]).data("reward-points", e.data.reward_points[0]).trigger("input")
					},
					beforeSend: function (e, t) {
						s[i] = e
					}
				})
			}
		}, 500)
	};
	var c = function () {
		var e = $("input[name=income]");
		var t = [];
		$(".bundle-asset-info").each(function () {
			t.push($(this).data("goodsid"))
		});
		if (r($(e).val())) {
			$(e).removeClass("i_Text_error")
		} else {
			$(e).addClass("i_Text_error")
		}
		clearTimeout(i);
		jQuery.xhrPool.abort("/api/market/get_bundle_price_from_income");
		i = setTimeout(function () {
			var e = $("input[name=income]").val();
			if (r(e, false)) {
				sendRequest("/api/market/get_bundle_price_from_income", {
					data: {
						game: g.game,
						income: e,
						goods_ids: t.join(",")
					},
					dataType: "json",
					method: "GET",
					showLoading: false,
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						$("input[name=price]").val(e.data.price).data("reward_point", e.data.reward_point).trigger("input")
					}
				})
			}
		}, 500)
	};
	$(document).on("input", '.popup input[name="price"]', function () {
		$(this).parent().find(".cannot-quick-pricing").remove()
	});
	return {
		quick_pricing: e,
		find_unusual_price: t,
		find_bundle_unusual_price: a,
		get_price_from_income: n,
		get_bundle_price_from_income: c,
		check_price_value: r
	}
};
var backpack = function () {
	var s = g.game;
	var r = {};
	var o = {};
	var c = {};
	var d = [];
	var _ = {};
	var l = {};
	var e = BuffConfig.MAX_SELL_PRICE;
	var t = BuffConfig.MIN_PRICE;
	var a = undefined;
	var u = undefined;
	var i = undefined;
	var n = 0;
	var p = null;
	var f = function () {
		return Object.keys(_).sort(function (e, t) {
			return _[e] - _[t]
		})
	};
	var m = function () {
		var e = $("#j_list_card > ul > li.on").length;
		var t = $("#j_list_card > ul > li.salable").length;
		if (e < t || e === 0) {
			$(".w-Checkbox[name=select-all] span").removeClass("on");
			$(".w-Checkbox[name=select-all]").attr({
				value: ""
			})
		} else {
			$(".w-Checkbox[name=select-all] span").addClass("on");
			$(".w-Checkbox[name=select-all]").attr({
				value: "selectall"
			})
		}
	};
	var h = function (e) {
		var t = f();
		var a = u;
		$("#j_overpage-handler").find(".selected-count").text(t.length);
		$("#j_overpage-handler").find(".total-count").text(u);
		var i = 0;
		var n = {};
		t.forEach(function (e) {
			var t = o[r[e].goods_id];
			var a = r[e].asset_info;
			i += parseFloat(t.steam_price);
			n[e] = {
				appid: t.appid,
				name: t.name,
				assetid: a.assetid,
				contextid: a.contextid,
				classid: a.classid,
				instanceid: a.instanceid,
				icon_url: a.info.icon_url || t.icon_url
			}
		});
		if (!e || t.length == 0) {
			$("#j_overpagetip").html(template_render("overpagetip_template", {
				selected: t,
				total_price: i,
				infos: n
			}))
		} else {
			$("#j_overpagetip").find(".f_Strong").html(formatPriceNormalCustom(i, undefined, "USD"));
			$("#j_overpagetip").find("#selected-count").text(t.length)
		}
	};
	var v = function () {
		var e = template_render("brief_info_pat", {
			backpack_count: a,
			visible_backpack_count: u,
			backpack_limit: i,
			total_amount: n
		});
		$(".brief-info").html(e)
	};
	var y = sellingPricing().check_price_value;
	var b = function () {
		clearTimeout(p);
		jQuery.xhrPool.abort("/api/market/batch/fee");
		p = setTimeout(function () {
			var e = [];
			var a = [];
			var t = [];
			var i = 0;
			var n = 0;
			var r = 0;
			for (var o = 0; o < d.length; o++) {
				if (!d[o]) continue;
				if (d[o].price > 0) {
					if (y(d[o].price, false) == false) {
						return
					}
					if (!d[o].has_market_min_price) {
						t.push(d[o].goods_id);
						e.push(d[o].price);
						a.push(o);
						i += d[o].price
					} else {
						i += d[o].income;
						r += d[o].reward_points || 0
					}
				}
			}
			if (e.length < 1) {
				$("#j_popup_selling_preview span.sale_fee").html(formatPriceYuan(n));
				$("#j_popup_selling_preview span.real_income").html(formatPriceYuan(i - n));
				$("#j_popup_selling_preview span.real_income_custom").html(formatPriceNormalCustom(i - n));
				$("#j_popup_selling_preview span.reward_points").html(r);
				return
			}
			$("#j_popup_selling_preview .confirm").addClass("i_Btn_disabled");
			sendRequest("/api/market/batch/fee", {
				data: {
					game: s,
					prices: e.join(","),
					goods_ids: t.join(",")
				},
				dataType: "json",
				method: "GET",
				showLoading: false,
				success: function (t) {
					if (t.code == "OK") {
						$("#j_popup_selling_preview .confirm").removeClass("i_Btn_disabled");
						n += parseFloat(t.data.total_fee);
						$("#j_popup_selling_preview span.sale_fee").html(formatPriceYuan(n));
						$("#j_popup_selling_preview span.real_income").html(formatPriceYuan(i - parseFloat(n)));
						$("#j_popup_selling_preview span.real_income_custom").html(formatPriceNormalCustom(i - parseFloat(n)));
						$("#j_popup_selling_preview span.reward_points").html(t.data.total_reward_points + r);
						$("#j_popup_selling_preview input[name=income]").each(function () {
							var e = $(this).data("index") - 1;
							if (a.indexOf(e) != -1) {
								if (!$(this).is(":focus")) {
									d[e].income = d[e].price - parseFloat(t.data.fees[a.indexOf(e)]);
									$(this).val(d[e].income.toFixed(2));
									$(this).parents("tr").find(".sell-income-custom").text(formatPriceNormalCustom(d[e].income, true));
									$(this).removeClass("i_Text_error")
								}
							}
						})
					} else {
						Buff.toast(t.error, {
							type: "error"
						})
					}
				},
				error: function (e) {
					if (e.statusText != "abort") {
						Buff.toast(i18n("acquisition_fee_failed_please_try"))
					}
				}
			})
		}, 500)
	};
	var w = function (e) {
		$("#backpack_list").showLoading();
		var t = getParams();
		t.page_num = getParamsFromHash().page_num || 1;
		sendRequest("/api/market/backpack", {
			method: "GET",
			data: t,
			showLoading: false,
			ignoreCode: ["Steam Binding Required"],
			success: function (e) {
				if (e.code == "OK") {
					x(e.data);
					if (e.notice) {
						var t = "";
						$(".market-tip.backpack-tip").show();
						if (e.notice.extra) {
							t = format_html('<span class="j_tips_handler" data-title=" " data-content="<%= data.notice.extra %>"><i class="icon icon_qa"></i></span>', {
								data: e
							})
						}
						$(".market-tip.backpack-tip").html(format_html("<div><p><%= data.notice.text %><%- tip %></p></div>", {
							data: e,
							tip: t
						}));
						$(".market-tip.backpack-tip").addClass("market-tip_" + e.notice.type)
					} else {
						$(".market-tip.backpack-tip").show()
					}
				}
			},
			complete: function () {
				$("#backpack_list").removeLoading()
			}
		});
		if (!e) {
			C()
		}
	};
	var k = function () {
		$("#j_list_card > ul > li.salable").each(function () {
			if (_[$(this).data("backpackid")]) {
				$(this).addClass("on")
			} else {
				$(this).removeClass("on")
			}
		})
	};
	var x = function (e) {
		var t = template_render("backpack_list_pat", e);
		$("#backpack_list").html(t);
		e.items.forEach(function (e) {
			r[e.id] = e
		});
		o = $.extend(o, e.goods_infos);
		a = e.backpack_count;
		i = e.backpack_limit;
		u = e.total_count;
		v();
		k();
		m();
		h();
		renderPagination({
			total_count: e.total_count,
			page_size: e.page_size,
			page_num: e.page_num,
			show_size_select: false,
			onPageClick: function (e, t) {
				t.preventDefault();
				updateHash("page_num", e);
				w(true)
			}
		})
	};
	var C = function () { };
	var T = function () {
		sendRequest("/account/api/user/info/v2", {
			method: "GET",
			dataType: "json",
			showLoading: false,
			timeout: 15e3,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				} else if ([0, 1].indexOf(e.data.user_info.trade_url_state) == -1) {
					$("#trade_state_tip").show();
					$("#withdraw").addClass("i_Btn_disabled")
				}
			}
		})
	};
	var P = function () {
		w();
		$(document).on("click", "#recheck_trade_state", function () {
			sendRequest("/api/market/steam/trade_url_state/refresh", {
				method: "POST",
				dataType: "json",
				timeout: 15e3,
				success: function (e) {
					if (e.code == "OK") {
						if ([0, 1].indexOf(e.data.trade_url_state) > -1) {
							Buff.toast(i18n("it_detects_your_steam_account"));
							$("#trade_state_tip").hide();
							$("#withdraw").removeClass("i_Btn_disabled")
						} else if (e.data.trade_url_state == 2) {
							Buff.toast(i18n("it_detects_your_steam_account"), {
								type: "error"
							})
						}
					} else {
						Buff.toast(i18n("detection_failed_please_try_again"))
					}
				}
			})
		});
		$("#withdraw").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) return;
			Buff.guide({
				title: i18n("retrieve_the_process_description"),
				rememberDismiss: "backpack_withdraw",
				hideClose: false,
				onConfirm: e,
				content: '<img style="width:100%;margin-top: 20px;" src="/static/images/first_fetch_from_backpack.png"/><div class="guide-strong"><a href="/help#how_to_fetch_cosmetics" target="_blank" class="f_14px">查看取回饰品详细教程</a></div>'
			})
		});
		var e = function () {
			var e = f();
			if (e.length == 0) {
				Buff.toast(i18n("select_to_retrieve_the_goods"));
				return
			}
			sendRequest("/api/market/backpack/withdraw", {
				data: {
					game: s,
					backpack_ids: e
				},
				showLoading: false,
				method: "POST",
				dataType: "json",
				success: function (e) {
					if (e.code == "OK") {
						for (var t = 0; t < e.data.length; t++) {
							bot_trades[e.data[t].id] = e.data[t]
						}
						_ = {};
						w();
						render_bot()
					} else if (e.code == "Steam Trade URL Binding Required") {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("unbound_steam_trading_link_whether"),
							success: function () {
								window.open("/user-center/profile", "_blank")
							},
							cancel: function () {
								Buff.toast(i18n("retrieval_failure"))
							}
						})
					} else if (e.code == "Steam Trade Limit") {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("your_current_steam_account_cant"),
							success: function () {
								window.open("/help#before_trade", "_blank")
							},
							cancel: function () {
								Buff.toast(i18n("retrieval_failure"))
							}
						})
					} else if (e.code == "Steam Trade URL Failure") {
						Buff.alert({
							title: i18n("prompt"),
							message: i18n("your_steam_trade_url_invalid"),
							success: function () {
								window.open("/user-center/profile", "_blank")
							},
							cancel: function () {
								Buff.toast(i18n("retrieval_failure"))
							}
						})
					} else {
						Buff.toast(e.error)
					}
				}
			})
		};
		update_bot({
			polling: true,
			onStateChange: function (e, t) {
				w()
			}
		});
		$(document).on("click", "#j_list_card > ul > li.salable", function () {
			$(this).toggleClass("on");
			$(this).trigger("change");
			m();
			h()
		});
		$(document).on("change", "#j_list_card > ul > li.salable", function () {
			var e = $(this).data("backpackid");
			if ($(this).hasClass("on")) {
				if (Object.keys(_).length >= 200 && !_[e]) {
					Buff.toast(i18n("select_up_to_200_pieces"));
					$(this).toggleClass("on");
					return
				}
				_[e] = Date.now()
			} else {
				delete _[e]
			}
		});
		$(".w-Checkbox[name=select-all]").change(function () {
			var e = $(this).attr("value");
			if (e == "selectall") {
				$("#j_list_card > ul > li.salable").addClass("on");
				if ($("#j_list_card > ul > li.salable").length < 1) {
					Buff.toast(i18n("the_current_page_is_no"))
				}
			} else {
				$("#j_list_card > ul > li.salable").removeClass("on")
			}
			$("#j_list_card > ul > li.salable").trigger("change");
			m();
			h()
		});
		$("#confirm-shelve").click(function () {
			if ($("#j_popup_sellauto .w-Checkbox").attr("value") === "dontshow") {
				localStorage.setItem("remember_dismiss_auto_sell", "1")
			}
			t()
		});
		$("#shelve").click(function () {
			if (localStorage.getItem("remember_dismiss_auto_sell")) {
				t();
				return
			}
			Popup.show("j_popup_sellauto")
		});
		var t = function () {
			var a = [];
			f().forEach(function (e) {
				var t = r[e];
				a.push({
					game: t.game,
					market_hash_name: o[t.goods_id].market_hash_name,
					contextid: t.asset_info.contextid,
					assetid: t.asset_info.assetid,
					classid: t.asset_info.classid,
					instanceid: t.asset_info.instanceid,
					goods_id: t.goods_id,
					price: "",
					income: "",
					has_market_min_price: false
				});
				c[t.asset_info.assetid] = o[t.goods_id];
				l[t.asset_info.assetid] = e
			});
			d = a;
			if (d.length < 1) {
				Buff.toast(i18n("please_choose_to_be_on"));
				return
			}
			sendRequest("/market/sell_order/preview/auto", {
				data: {
					game: s,
					assets: d
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code == "OK") {
						$("#popup-container").html(e.data);
						initCustomCurrency($("#j_popup_selling_preview"));
						Popup.show("j_popup_selling_preview");
						Buff.pricePatten("input[name=price]");
						Buff.pricePatten("input[name=income]")
					} else {
						Buff.alert({
							type: "error",
							title: i18n("on_frame_failure"),
							message: e.error,
							hideCancel: true
						})
					}
				}
			})
		};
		var i = function () {
			$("#j_popup_selling_preview tr.assets-item input[name=price]").each(function () {
				var e = $(this).data("index") - 1;
				var t = parseFloat($(this).val());
				if (isNaN(t) || $(this).val().length == 0) {
					d[e].price = ""
				} else {
					d[e].price = t
				}
			});
			$("#j_popup_selling_preview tr.assets-item input[name=income]").each(function () {
				var e = $(this).data("index") - 1;
				var t = parseFloat($(this).val());
				if (isNaN(t) || $(this).val().length == 0) {
					d[e].income = ""
				} else {
					d[e].income = t
				}
			})
		};
		$(document).on("change", ".w-Checkbox[name=combine]", function () {
			var e = $(this).attr("value");
			if (e == "combine") {
				var t = $("#j_popup_selling_preview").data("group-key");
				for (var a in t) {
					if (t[a].assetids.length > 1) {
						$("#j_popup_selling_preview tr.group_key_" + a + ":not(:first)").hide();
						$("#j_popup_selling_preview tr.group_key_" + a + ":first .name-cont p.num").remove();
						$("#j_popup_selling_preview tr.group_key_" + a + ":first .name-cont").append('<p class="num c_Gray" style="font-size: 13px;"> ×' + t[a].assetids.length + "</p>");
						$("#j_popup_selling_preview tr.group_key_" + a + " input").val("");
						$("#j_popup_selling_preview tr.group_key_" + a + " .sell-price-custom").html("");
						$("#j_popup_selling_preview tr.group_key_" + a + " .sell-income-custom").html("");
						$("#j_popup_selling_preview tr.group_key_" + a + " .pic-cont .item-count").show();
						$("#j_popup_selling_preview tr.group_key_" + a).next(".des_row").hide();
						$("#j_popup_selling_preview tr.group_key_" + a + " td").css("border-bottom", "1px solid #E9E9E9");
						$("#j_popup_selling_preview tr.group_key_" + a + " .edit_order_desc a").hide();
						$("#j_popup_selling_preview tr.group_key_" + a + " .paint-wear").hide();
						$("#j_popup_selling_preview tr.group_key_" + a + " .csgo_sticker_inline").hide();
						$("#j_popup_selling_preview tr.group_key_" + a + " .group_key_notice").show()
					}
				}
				i();
				b()
			} else {
				$("#j_popup_selling_preview tr.assets-item").show();
				$("#j_popup_selling_preview tr.assets-item .edit_order_desc a").show();
				$("#j_popup_selling_preview tr.assets-item .paint-wear").show();
				$("#j_popup_selling_preview tr.assets-item .csgo_sticker_inline").show();
				$("#j_popup_selling_preview tr.assets-item.has_des").next().show();
				$("#j_popup_selling_preview tr.assets-item.has_des td").css("border-bottom", "0");
				$("#j_popup_selling_preview tr.assets-item .name-cont p.num").remove();
				$("#j_popup_selling_preview tr.assets-item .pic-cont .item-count").hide();
				$("#j_popup_selling_preview tr.assets-item .group_key_notice").hide()
			}
		});
		$(document).on("input", "#j_popup_selling_preview input[name=price], #j_popup_trans input[name=price], #j_popup_private input[name=price]", function () {
			var e = $(this).data("index") - 1;
			var t = $(this).val();
			var a = $(this).parents("tr").find("input[name=income]").val();
			var i = parseFloat(t);
			var n = parseFloat(a);
			var r = parseFloat($(this).data("market-min-price"));
			var o = parseInt($(this).data("reward-points")) || 0;
			if (r > 0 && i < r) {
				i = r
			}
			if (y($(this).val())) {
				$(this).removeClass("i_Text_error")
			} else {
				$(this).addClass("i_Text_error")
			}
			d[e].price = i;
			d[e].income = n;
			d[e].has_market_min_price = r > 0;
			d[e].reward_points = o;
			var s = $(".w-Checkbox[name=combine]").attr("value");
			if (s == "combine") {
				var c = $("#j_popup_selling_preview").data("group-key");
				var _ = $(this).data("group-key");
				var l = c[_].assetids;
				for (var u = 0; u < d.length; u++) {
					if (l.indexOf(d[u].assetid) > -1) {
						d[u].price = d[e].price;
						d[u].income = d[e].income;
						d[u].has_market_min_price = d[e].has_market_min_price;
						d[u].reward_points = d[e].reward_points
					}
				}
				$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=price]").val(t);
				$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=income]").val(a);
				$("#j_popup_selling_preview tr.group_key_" + _ + " .sell-price-custom").html(i ? formatPriceNormalCustom(i, true) : "");
				$("#j_popup_selling_preview tr.group_key_" + _ + " .sell-price-income").html(n ? formatPriceNormalCustom(n, true) : "");
				if ($(this).hasClass("i_Text_error")) {
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=price]").addClass("i_Text_error");
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=income]").addClass("i_Text_error")
				} else {
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=price]").removeClass("i_Text_error");
					$("#j_popup_selling_preview tr.group_key_" + _ + " input[name=income]").removeClass("i_Text_error");
					$("#j_popup_selling_preview tr.group_key_" + _ + " .cannot-quick-pricing").remove()
				}
			}
			if (i) {
				$(this).parents("tr").find(".sell-price-custom").html(formatPriceNormalCustom(i, true))
			} else {
				$(this).parents("tr").find(".sell-price-custom").html("")
			}
			b()
		});
		$(document).on("change", "#j_popup_selling_preview input[name=price], #j_popup_trans input[name=price], #j_popup_private input[name=price]", function () {
			if (y($(this).val(), true)) {
				b()
			}
		});
		var a = sellingPricing();
		$(document).on("input", "#j_popup_selling_preview input[name=income]", function () {
			a.get_price_from_income($(this).parents("tr"));
			var e = $(this).val();
			if (e) {
				$(this).parents("tr").find(".sell-income-custom").html(formatPriceNormalCustom(e, true))
			} else {
				$(this).parents("tr").find(".sell-income-custom").html("")
			}
		});
		$(document).on("change", "#j_popup_selling_preview input[name=income]", function () {
			if (y($(this).val(), true)) {
				a.get_price_from_income($(this).parents("tr"))
			}
		});
		$(document).on("click", "#j_popup_selling_preview #quick-pricing", function () {
			a.quick_pricing($("#j_popup_selling_preview"));
			b()
		});
		$(document).on("click", "#j_popup_selling_preview .confirm:not(.i_Btn_disabled)", function () {
			for (var e = 0; e < d.length; e++) {
				if (y(d[e].price, true) == false) {
					return
				}
			}
			a.find_unusual_price($("#j_popup_selling_preview"), function () {
				sendRequest("/api/market/sell_order/create/auto", {
					data: {
						game: s,
						assets: d
					},
					method: "POST",
					timeout: Math.max(5e3, 1e3 * d.length),
					success: function (e) {
						if (e.code == "OK") {
							var t = "";
							var a = 0;
							var i = [];
							for (var n = 0; n < d.length; n++) {
								var r = d[n].assetid;
								var o = e.data[r];
								if (o == "OK") {
									a += 1;
									delete _[l[r]]
								} else {
									i.push({
										asset: d[n],
										reason: o,
										info: c[r]
									})
								}
							}
							if (i.length > 0) {
								Popup.hide();
								var s = template_render("result_pat", {
									failures: i,
									success: a
								});
								$("#popup-container").html(s);
								Popup.show("j_popup_charge-result")
							} else {
								Buff.toast(i18n("items_on_the_shelves_successful"), {
									type: "success"
								});
								Popup.hide()
							}
							w()
						} else if (e.code == "Invalid Argument" && e.error.indexOf("price") > -1) {
							Buff.toast(i18n("there_goods_is_not_input"), {
								type: "error"
							})
						} else {
							Buff.toast(e.error || e.code, {
								type: "warning"
							})
						}
					}
				})
			})
		});
		$(document).on("click", ".edit_order_desc a", function () {
			var e = $(this).data("assetid");
			Popup.show("j_pupup_add_desc");
			var t = $("#asset_" + e).next().find(".desc_content").text();
			$("#j_pupup_add_desc .addDesWrapper textarea").focus().val(t).trigger("input");
			$("#j_pupup_add_desc .i_Btn_main").data("assetid", e)
		});
		$(document).on("click", "#j_pupup_add_desc .i_Btn_main", function () {
			var e = $(this).data("assetid");
			var t = $("#j_pupup_add_desc .addDesWrapper textarea").val();
			if (t.length > 40) {
				Buff.toast(i18n("the_content_of_the_input"))
			} else {
				$("#asset_" + e).next().find(".desc_content").text(t);
				for (var a = 0; a < d.length; a++) {
					if (d[a].assetid == e) {
						d[a].desc = t
					}
				}
				if (t.length > 0) {
					$("#asset_" + e).next().show();
					$("#asset_" + e).addClass("has_des");
					$("#asset_" + e + " .edit_order_desc a").text(i18n("edit_the_description"))
				} else {
					$("#asset_" + e).next().hide();
					$("#asset_" + e).removeClass("has_des");
					$("#asset_" + e + " .edit_order_desc a").text(i18n("add_a_description"))
				}
				Popup.hide()
			}
		});
		$("#bundle-shelve").click(function () {
			if (!$(this).data("has-perm")) {
				Buff.toast(i18n("packaged_transaction_within_the_test"), {
					type: "warning"
				});
				return
			}
			var e = f();
			if (e.length < 2) {
				Buff.toast(i18n("require_minimal_packaging_of_two"));
				return
			}
			d = [{
				price: 0
			}];
			var t = 0;
			for (var a = 0; a < e.length; a++) {
				t += parseFloat(o[r[e[a]].goods_id].steam_price_cny)
			}
			var i = template_render("bundle_pat", {
				selected: e,
				items: r,
				goods_infos: o,
				sum_price: t
			});
			$("#popup-container").html(i);
			Popup.show("j_popup_trans")
		});
		$(document).on("click", "#j_popup_trans .confirm", function () {
			var e = $("#j_popup_trans input[name=price]").val();
			var t = $("#j_popup_trans input[name=description]").val();
			var a = [];
			$("#j_popup_trans #uploaded-pics img.success").each(function (e, t) {
				a.push($(t).data("src"))
			});
			if (!e || !e.length) {
				Buff.toast(i18n("please_enter_pricing"), {
					type: "error"
				});
				return
			}
			if ($(".upload-item:not(.success)").length > 0) {
				Buff.toast(i18n("a_picture_is_not_uploaded"), {
					type: "error"
				});
				return
			}
			if (y(e, true) == false) {
				return
			}
			sendRequest("/api/market/sell_order/create/bundle", {
				method: "POST",
				dataType: "json",
				data: {
					game: g.game,
					backpack_ids: f(),
					price: e,
					description: t,
					images: a
				},
				success: function (e) {
					if (e.code !== "OK") {
						Buff.toast(e.error, {
							type: "error"
						})
					} else {
						Buff.toast(i18n("create_a_package_of_trading"), {
							type: "success"
						});
						_ = {};
						w();
						Popup.hide()
					}
				}
			})
		});
		$("#private-shelve").click(function () {
			if (!$(this).data("has-perm")) {
				Buff.toast(i18n("private_transaction_within_the_test"), {
					type: "warning"
				});
				return
			}
			var e = f();
			if (e.length < 1) {
				Buff.toast(i18n("please_choose_to_be_a"));
				return
			}
			d = [{
				price: 0
			}];
			var t = 0;
			for (var a = 0; a < e.length; a++) {
				t += parseFloat(o[r[e[a]].goods_id].steam_price_cny)
			}
			var i = template_render("bundle_pat", {
				selected: e,
				items: r,
				goods_infos: o,
				sum_price: t,
				isPrivate: true
			});
			$("#popup-container").html(i);
			Popup.show("j_popup_private")
		});
		$(document).on("click", "#j_popup_private .confirm", function () {
			var a = $("#j_popup_private input[name=price]").val();
			if (!a || !a.length) {
				Buff.toast(i18n("please_enter_pricing"), {
					type: "error"
				});
				return
			}
			if (y(a, true) == false) {
				return
			}
			if ($(".upload-item:not(.success)").length > 0) {
				Buff.toast(i18n("a_picture_is_not_uploaded"), {
					type: "error"
				});
				return
			}
			var i = [];
			$("#j_popup_private #uploaded-pics img.success").each(function (e, t) {
				i.push($(t).data("src"))
			});
			Popup.hide();
			var e = function (e) {
				sendRequest("/api/market/sell_order/create/private/send_authcode", {
					method: "POST",
					dataType: "json",
					showLoading: false,
					success: function () {
						if (e) {
							e()
						}
					}
				})
			};
			bindCard.show_authcode_popup({
				send_authcode_function: e,
				verify_authcode_function: function (e, t) {
					sendRequest("/api/market/sell_order/create/private", {
						method: "POST",
						data: {
							game: g.game,
							backpack_ids: f(),
							price: a,
							authcode: e,
							images: i
						},
						success: function (e) {
							if (e.code !== "OK") {
								Buff.toast(e.error, {
									type: "error"
								})
							} else {
								t();
								$("#j_popup_private-link").find(".i_Text").text(e.data.link);
								$("#j_popup_private-link").find(".i_Btn_main").click(function () {
									setClipboard(e.data.link);
									Buff.toast(i18n("replicated"), {
										type: "success"
									})
								});
								Popup.show("j_popup_private-link");
								_ = {};
								w()
							}
						}
					})
				},
				mobile: $("#mobile").text(),
				authcode_length: 4,
				popup_id: "j_popup_private-check"
			});
			e()
		});
		$(document).on("click", ".overpage-del", function () {
			delete _[$(this).data("id")];
			$(this).parent().remove();
			h(true);
			k();
			m()
		});
		gallery.init()
	};
	return {
		init: P
	}
};
var storeInfo = function () {
	var a = function () {
		$("body").on("focus", ".timepicker input", function () {
			if ($(this).parent().hasClass("disabled")) {
				$(this).blur();
				return false
			} else {
				var e = $(".timepicker input").index(this);
				$(".timepicker-drop").eq(e).show()
			}
		}).on("blur", ".timepicker input", function () {
			var t = this;
			setTimeout(function () {
				var e = $(".timepicker input").index(t);
				$(".timepicker-drop").eq(e).hide()
			}, 200)
		}).on("keypress", ".timepicker input", function () {
			return false
		}).on("click", ".timepicker-drop li", function () {
			$(this).addClass("on").siblings().removeClass("on");
			var e = $(this).parent().attr("data-for");
			$("#" + e).val($(this).html())
		}).on("change", "#j_autoClose", function () {
			if ($(this).attr("value") != "") {
				$("#j_timepicker").removeClass("disabled")
			} else {
				$("#j_timepicker").addClass("disabled")
			}
		}).on("click", "#set_store_name, #modify_store_name", function () {
			$("#store_name").find(".store_name_tab1").hide();
			$("#store_name").find(".store_name_tab2").show();
			$("#store_name_input").val($("span.store_name_span").attr("pre_text"))
		}).on("click", "#change_store_name_cancel", function () {
			$("#store_name").find(".store_name_tab1").show();
			$("#store_name").find(".store_name_tab2").hide()
		}).on("click", "#change_store_name_confirm", function () {
			var t = $("#store_name_input").val();
			if (!t) {
				Buff.toast(i18n("please_input_store_name"));
				return
			}
			if ($("span.store_name_span").attr("pre_text") == t) {
				Buff.toast(i18n("have_not_modify_store_name"));
				return
			}
			var a = function (e) {
				sendRequest("/api/market/user_store/change_name", {
					method: "POST",
					data: {
						name: t,
						cdkey_id: e
					},
					success: function (e) {
						if (e.code === "OK") {
							$("#store_name").find(".store_name_tab1").show();
							$("#store_name").find(".store_name_tab2").hide();
							$("#store_name_input").val("");
							$("span.store_name_span").text(t);
							$("span.store_name_span").attr("has_set", t);
							$("span.store_name_span").attr("pre_text", t);
							Buff.toast(i18n("set_success"), {
								type: "success"
							})
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					}
				})
			};
			if (!$("span.store_name_span").attr("has_set")) {
				a();
				return
			}
			Buff.alert({
				title: i18n("prompt"),
				message: i18n("determine_use_store_name_coupon"),
				success: function () {
					sendRequest("/api/activity/coupon/my/", {
						method: "GET",
						data: {
							state: "unuse",
							coupon_type: "store_rename"
						},
						success: function (e) {
							if (e.data && e.data.items.length == 0) {
								Buff.toast(i18n("please_exchange_store_name_coupon_at_app"));
								return
							}
							a(e.data.items[0].id)
						}
					})
				}
			})
		});
		$("#j_popup_shop a.confirm").click(function () {
			var e = $("#j_popup_shop #j_autoClose").attr("value") || "0";
			var t = $("#j_input-hour").val();
			var a = $("#j_input-minute").val();
			if (e !== "0" && (!t || !a)) {
				Buff.toast(i18n("please_enter_the_auto_logoff"));
				return
			}
			sendRequest("/api/market/user_store/change_state", {
				method: "POST",
				data: {
					state: $("#j_storeState").attr("value"),
					auto_offline: e,
					auto_offline_hour: t,
					auto_offline_minute: a
				},
				success: function (e) {
					if (e.code === "OK") {
						Popup.hide();
						Buff.toast(i18n("set_success"), {
							type: "success"
						});
						if ($("#j_storeState").attr("value") == 0) {
							$(".has-store, .icon-store").removeClass("store-offline").addClass("store-online");
							$(".c_Yellow.offline_tips").hide();
							$(".c_Yellow.deliver_tips").show()
						} else {
							$(".has-store, .icon-store").removeClass("store-online").addClass("store-offline")
						}
					} else {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				}
			})
		});
		$("#store_name").find(".store_name_tab1").show();
		$("#store_name").find(".store_name_tab2").hide()
	};
	var e = function () {
		sendRequest("/api/market/user_store/info", {
			method: "GET",
			data: {
				user_id: g.user.id
			},
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				$("#j_popup_shop").remove();
				var t = template_render("shop_popup_tmpl", e.data);
				$("body").append(t);
				a();
				Popup.show("j_popup_shop")
			}
		})
	};
	return {
		init: a,
		showPopup: e
	}
};
var userStoreOfflinePopup = function (n) {
	function r() {
		const e = new Date;
		const t = e.getFullYear();
		const a = String(e.getMonth() + 1).padStart(2, "0");
		const i = String(e.getDate()).padStart(2, "0");
		return `${t}${a}${i}`
	}
	var e = function () {
		var e = true;
		const t = getCookie("shop_last_check_date");
		var a = r();
		if (t && a == t) {
			e = false
		}
		if (!e) {
			return
		}
		var i = "/api/market/user_store/info";
		sendRequest(i, {
			data: {
				user_id: g.user.id,
				store_state_only: true
			},
			dataType: "json",
			method: "GET",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				if (e.data.store_state == 1) {
					setCookie("shop_last_check_date", r(), 1);
					Buff.alert({
						title: i18n("shop_state_offline_popup_title"),
						message: i18n("shop_state_offline_popup_content"),
						confirmText: i18n("go_to_set"),
						success: function () {
							if (n == OriginConst.INVENTORY) {
								window.location.href = "/market/sell_order/on_sale?game=" + g.game + "&open_shop_popup=1";
								return
							}
							storeInfo().showPopup()
						},
						cancel: function () {
							Popup.hide()
						},
						onClose: function () {
							Popup.hide()
						}
					})
				}
			}
		})
	};
	return {
		show_daily: e
	}
};
var buyingToCreate = function () {
	var e = g.game;
	var t = function () {
		$("#j_list_card").showLoading();
		var e = getParams();
		e.page_size = 70;
		sendRequest("/api/market/goods/all", {
			data: e,
			method: "GET",
			showLoading: false,
			success: function (e) {
				var t = template_render("goods_list_pat", e.data);
				$("#j_list_card").html(t);
				renderPagination({
					total_count: e.data.total_count,
					page_size: e.data.page_size,
					page_num: e.data.page_num,
					show_size_select: false,
					size_selects: [70, 140, 210],
					onPageClick: function (e, t) {
						t.preventDefault();
						updateSearchPage("page_num", e);
						$("html,body").scrollTop(0)
					}
				})
			},
			complete: function () {
				$("#j_list_card").removeLoading()
			}
		})
	};
	var a = function () {
		t();
		$(document).on("click", "li.salable a.goods_link", function (e) {
			e.stopPropagation()
		})
	};
	return {
		init: a
	}
};
var buyingSupplied = function (e) {
	var n = g.game;
	var t = function () {
		$(".with-gallery").click(function () {
			var e = $(".with-gallery").index(this);
			t(e)
		});
		$(".j_gallery_handler").click(function () {
			var e = $(".j_gallery_handler").index(this);
			t(e)
		});
		var t = function (e) {
			var a = $(".j_gallery_handler").eq(e);
			var i = $(".tr_gallery").eq(e).find("td");
			if (i.html()) return;
			i.find("td").showLoading();
			sendRequest("/api/market/buy_order/supplied/bill_orders", {
				data: {
					game: n,
					buy_order_id: $(a).data("orderid")
				},
				method: "GET",
				showLoading: false,
				success: function (e) {
					e.data.goods = {
						icon_url: $(a).data("goods-icon-url"),
						rarity: $(a).data("goods-rarity"),
						name: $(a).data("goods-name")
					};
					var t = template_render("supplied_bill_orders_pat", e.data);
					i.html(t)
				},
				error: function (e) {
					Buff.toast(e.error, {
						type: "error"
					});
					i.removeLoading()
				}
			})
		};
		var a = function (e) {
			$("span.count-down").each(function () {
				var e = $(this).data("count-down-format") || "HH:mm:ss";
				var t = $(this).data("expire");
				$(this).data("expire", t - 1);
				var t = parseInt(t);
				var a = $(this).data("action") + i18n("timeout");
				if (t > 0) {
					if (e != "HH:mm:ss" && t < 86400) {
						t = t * 1e3;
						a = ($(this).data("prefix") || "") + moment.utc(t).format(e)
					} else {
						a = ($(this).data("prefix") || "") + convertTime(t)
					}
				} else {
					$(".hide-when-expire").hide()
				}
				$(this).html(a)
			});
			if (e == true) setTimeout(function () {
				a(true)
			}, 1e3)
		};
		a(true)
	};
	return {
		init: t
	}
};
var userStore = function (a, i, n) {
	var r = ["csgo", "dota2"];
	var o = function () {
		$("#recent-deal-container").showLoading();
		sendRequest("/api/market/shop/" + a + "/bill_order", {
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					e.data = {
						items: []
					}
				}
				$("#recent-deal-container").html(template_render("recent_deal_template", e.data))
			}
		})
	};
	var s = function () {
		$("#recommend-container").showLoading();
		sendRequest("/api/market/shop/" + a + "/featured", {
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					e.data = {
						items: []
					}
				}
				$("#recommend-container").html(template_render("recommend_template", e.data));
				if (e.data.items.length) {
					$(".featured").show();
					setShopRecommend()
				}
			}
		})
	};
	var t = function () {
		var e = getParamsFromHash().page_num;
		if (typeof e == "undefined") {
			e = 1
		}
		if (getParamsFromHash().sort_by === undefined) {
			$("#default-price-selector div[name='price']").removeClass("selected").removeClass("w-Order_asc").attr("des")
		}
		updateHash("page_num", parseInt(e));
		$("#item-filters-container").show();
		$("#preview_screenshots").show();
		$("#default-price-selector").show();
		var t = getParamsFromHash();
		$("#orders-container").showLoading();
		sendRequest("/api/market/shop/" + a + "/sell_order", {
			data: t,
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					e.data = {
						items: []
					}
				}
				PreviewScreenShotsDataGenerator(OriginConst.STORE).process(e.data.items, e.data.preview_screenshots.bg_img || "", "my_shop_selling", 14);
				$("#orders-container").html(template_render("sell_order_template", e.data));
				PreviewScreenShots().init("my_shop_selling", e.data.preview_screenshots["top_bookmark"]);
				$("img.lazy").lazyload();
				if (e.data.items) {
					renderPagination({
						total_count: e.data.total_count,
						page_size: e.data.page_size,
						page_num: e.data.page_num,
						show_size_select: false,
						onPageClick: function (e, t) {
							t.preventDefault();
							updateHash("page_num", e);
							window.scrollTo(0, 0)
						}
					})
				}
			}
		})
	};
	var c = function () {
		sendRequest("/api/market/bundle_inventory/get_prefer", {
			method: "GET",
			showLoading: false,
			data: {
				keys: "show_same_goods"
			},
			success: function (e) {
				show_same_goods = e.data.show_same_goods;
				if (show_same_goods) {
					$(".w-Checkbox[name=same_goods] span").addClass("on")
				} else {
					$(".w-Checkbox[name=same_goods] span").removeClass("on")
				}
				var t = getParamsFromHash();
				t.page_size = 12;
				t.same_goods = show_same_goods;
				if (r.includes(t.game)) {
					$("#bundle-filters-container_" + t.game).show()
				}
				$("#orders-container").showLoading();
				$("#preview_screenshots").hide();
				$("#default-price-selector").hide();
				if (t.min_price > 0 && t.max_price > 0 && parseFloat(t.min_price) > parseFloat(t.max_price)) {
					Buff.toast(i18n("minimum_price_can_not_be"), {
						type: "warning"
					});
					return
				}
				if (t.min_asset_count > t.max_asset_count || t.min_paintwear > t.max_paintwear) {
					Buff.toast(i18n("minimum_value_can_not_be"), {
						type: "warning"
					});
					return
				}
				sendRequest("/api/market/shop/bundle_inventory", {
					data: t,
					method: "GET",
					dataType: "json",
					showLoading: false,
					success: function (e) {
						if (e.code != "OK") {
							e.data = {
								items: []
							}
						}
						for (var a = 0; a < e.data.items.length; a++) {
							let t = e.data.items[a];
							if (t.discount_rate && t.discount_rate !== 0) {
								let e = t.discount_rate.toString();
								index = e.indexOf(".");
								if (index !== -1) {
									e = e.substring(0, index + 2)
								} else {
									e = e + ".0"
								}
								t.discount_rate_str = e;
								t.discount_rate = parseFloat(e)
							}
						}
						$("#orders-container").html(template_render("bundle_order_template", e.data));
						$("img.lazy").lazyload();
						if (e.data.items) {
							renderPagination({
								total_count: e.data.total_count,
								page_size: e.data.page_size,
								page_num: e.data.page_num,
								show_size_select: false,
								onPageClick: function (e, t) {
									t.preventDefault();
									updateHash("page_num", e);
									window.scrollTo(0, 0)
								}
							})
						}
					}
				})
			}
		})
	};
	var _ = function () {
		$("#item-filters-container").show();
		var e = getParamsFromHash();
		$("#orders-container").showLoading();
		sendRequest("/api/market/shop/" + a + "/buy_order", {
			data: e,
			method: "GET",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					e.data = {
						items: []
					}
				}
				$("#orders-container").html(template_render("buy_order_template", e.data));
				if (e.data.items) {
					renderPagination({
						total_count: e.data.total_count,
						page_size: e.data.page_size,
						page_num: e.data.page_num,
						show_size_select: false,
						onPageClick: function (e, t) {
							t.preventDefault();
							updateHash("page_num", e);
							window.scrollTo(0, 0)
						}
					})
				}
			}
		})
	};
	var l = function () {
		var e = getParamsFromHash();
		$(".store-game-selector").parent().removeClass("on");
		$(".store-game-selector[data-game=" + e.game + "]").parent().addClass("on");
		$("#item-filters-container").html(template_render(e.game + "_filters_template", {}));
		Buff.initSelect(".w-Select");
		Buff.initSelectMulti(".w-Select-Multi");
		$("#tab-selector > li").removeClass("on");
		$("#tab-selector > li[data-tab=" + e.tab + "]").addClass("on");
		$(".filters-container").hide();
		if (e.tab == "buying") {
			_()
		} else if (e.tab == "bundle") {
			c()
		} else {
			t()
		}
	};
	var e = function () {
		normalBuy(i).init();
		supplySell(i).init();
		bundleInventory().init();
		bundleInventory().init_bundle_preview();
		bundleInventory().init_show_same_goods_checkbox();
		gameNavigator.setKeepParams(["user_id"]);
		$("#j_mw").change(function () {
			$(".shop-info-wrap").hide();
			$(".shop-info-wrap." + $(this).attr("value")).show()
		});
		o();
		s();
		var e = getParamsFromHash();
		if (!e.tab) {
			e.tab = "selling"
		}
		if (!e.game) {
			e.game = n
		}
		updateHashData(e);
		for (var t = 0; t < r.length; t++) {
			u(r[t])
		}
		l();
		$("#tab-selector > li").click(function () {
			if ($(this).hasClass("on")) return;
			$("#default-price-selector .w-Order_des").removeClass("w-Order_des");
			var e = getParamsFromHash();
			for (key in e) {
				if (key !== "tab" && key !== "mode" && key !== "game" && key !== "same_goods") {
					e[key] = ""
				}
			}
			e.tab = $(this).data("tab");
			if (e.tab === "bundle") {
				e.user_id = a;
				e.preview_limit = 4
			}
			updateHashData(e)
		});
		$(".store-game-selector").click(function () {
			if ($(this).parent().hasClass("on")) return;
			var e = $(this).data("game");
			var t = getParamsFromHash();
			for (key in t) {
				if (key !== "tab" && key !== "sort_by" && key !== "mode" && key !== "user_id" && key !== "preview_limit" && key !== "same_goods") {
					t[key] = ""
				}
			}
			t.game = e;
			updateHashData(t)
		});
		$(window).on("hashchange", function () {
			l()
		});
		window.updateSearch = function (e, t) {
			updateHash(e, t);
			updateHash("page_num", 1)
		};
		window.updateSearchData = function (e) {
			e.page_num = 1;
			updateHashData(e)
		}
	};
	var u = function (e) {
		var t = "bundle-filters-container_" + e;
		bundleInventory().init_bundle_inventory_filter("user_store", e, "#" + t);
		var a = FilterDataManager();
		assetTagFilter().init({
			container: t,
			fdm: a
		});
		a.register({
			tab: "bundle",
			matcher: []
		})
	};
	return {
		init: e
	}
};
var bundleList = function () {
	var n = g.game;
	var e = BuffConfig.MAX_SELL_PRICE;
	var a = BuffConfig.MIN_PRICE;
	var r = false;
	var s = [];
	var o = function (e, t) {
		if (typeof e == "string" && e.length == 0 || typeof e == "object" || isNaN(e)) {
			if (t) {
				Buff.toast(i18n("there_goods_is_not_input"), {
					type: "error"
				})
			}
			return false
		}
		e = parseFloat(e);
		if (e < a) {
			if (t) {
				Buff.toast(i18n("price_must_be_greater_than") + a)
			}
			return false
		}
		return true
	};
	var t = function () {
		if (r == true) {
			r = false
		} else {
			return
		}
		var e = [];
		var t = [];
		var a = 0;
		for (var i = 0; i < s.length; i++) {
			if (!s[i]) continue;
			if (s[i].price > 0) {
				if (o(s[i].price, false) == false) {
					return
				}
				t.push(s[i].goods_id);
				e.push(s[i].price);
				a += s[i].price
			}
		}
		if (e.length < 1) {
			$("span.sale_fee").html("￥0");
			$("span.real_income").html("￥0");
			return
		}
		sendRequest("/api/market/batch/fee", {
			data: {
				game: n,
				prices: e.join(","),
				goods_ids: t.join(",")
			},
			dataType: "json",
			method: "GET",
			showLoading: false,
			success: function (e) {
				if (e.code == "OK") {
					var t = e.data.total_fee;
					$("span.sale_fee").html("￥" + t);
					$("span.real_income").html(formatPriceYuan("" + (a - parseFloat(t)).toFixed(2)))
				} else {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			}
		})
	};
	var i = function () {
		gameNavigator.setKeepParams(["mode"]);
		$(".cancel-bundle").click(function () {
			var t = $(this).parents("tr").data("orderid");
			var e = getParams().mode == 4 ? i18n("private_transactions") : i18n("package_deal");
			Buff.alert({
				title: i18n("confirm_to_cancel_the_transaction"),
				message: i18n("the_shelves_after_the_goods") + e + "?",
				success: function () {
					sendRequest("/api/market/sell_order/cancel", {
						method: "POST",
						data: {
							sell_orders: [t],
							game: g.game
						},
						success: function (e) {
							if (e.code !== "OK") {
								Buff.toast(e.error, {
									type: "error"
								});
								return
							}
							if (e.data[t] !== "OK") {
								Buff.toast(e.data[t], {
									type: "error"
								});
								return
							}
							Buff.toast(i18n("shelves_successful"), {
								type: "success"
							});
							setTimeout(function () {
								window.location.reload()
							}, 1e3)
						}
					})
				}
			})
		});
		$(".edit-bundle").click(function () {
			s = [{
				price: 0
			}];
			var o = $(this).parents("tr").data("orderid");
			sendRequest("/api/market/bundle_detail/" + o, {
				data: {
					game: g.game
				},
				method: "GET",
				showLoading: false,
				success: function (t) {
					if (t.code !== "OK") {
						Buff.toast(t.error, {
							type: "error"
						});
						return
					}
					var a = [];
					var i = {};
					var n = 0;
					t.data.items.forEach(function (e) {
						a.push(e.assetid);
						i[e.assetid] = {
							asset_info: e,
							goods_id: e.goods_id
						};
						n += parseFloat(t.data.goods_infos[e.goods_id].steam_price_cny)
					});
					var e = template_render("bundle_pat", {
						selected: a,
						items: i,
						goods_infos: t.data.goods_infos,
						sum_price: n,
						isChange: 1
					});
					$("#popup-container").html(e);
					Popup.show("j_popup_trans");
					$("#j_popup_trans input[name=price]").val(t.data.price).trigger("input").trigger("change");
					$("#j_popup_trans input[name=description]").val(t.data.description).trigger("input").trigger("change");
					var r = bundleSell();
					(t.data.images || []).forEach(function (e) {
						r.addUploadItem(e)
					});
					$("#j_popup_trans .confirm").attr("data-orderid", o)
				},
				error: function () {
					Buff.toast(i18n("get_the_package_deal_failed"), {
						type: "error"
					})
				}
			})
		});
		$(document).on("click", "#j_popup_trans .confirm", function () {
			var e = $("#j_popup_trans input[name=price]").val();
			var t = $("#j_popup_trans input[name=description]").val();
			if (!e || !e.length) {
				Buff.toast(i18n("please_enter_pricing"), {
					type: "error"
				});
				return
			}
			var a = [];
			$("#j_popup_trans #uploaded-pics img.success").each(function (e, t) {
				a.push($(t).data("src"))
			});
			if ($(".upload-item:not(.success)").length > 0) {
				Buff.toast(i18n("a_picture_is_not_uploaded"), {
					type: "error"
				});
				return
			}
			var i = $(this).data("orderid");
			sendRequest("/api/market/sell_order/change", {
				method: "POST",
				dataType: "json",
				data: {
					game: g.game,
					sell_orders: [{
						sell_order_id: i,
						price: e,
						desc: t,
						images: a
					}]
				},
				success: function (e) {
					if (e.code !== "OK") {
						Buff.toast(e.error, {
							type: "error"
						})
					} else {
						Buff.toast(i18n("modify_the_success"), {
							type: "success"
						});
						setTimeout(function () {
							window.location.reload()
						}, 1e3)
					}
				}
			})
		});
		$(document).on("mousemove", "#j_popup_trans", function () {
			t()
		});
		$(document).on("input", "#j_popup_trans input[name=price]", function () {
			var e = $(this).data("index") - 1;
			var t = parseFloat($(this).val());
			if (o($(this).val())) {
				$(this).removeClass("i_Text_error")
			} else {
				$(this).addClass("i_Text_error")
			}
			s[e].price = t;
			r = true
		});
		$(document).on("change", "#j_popup_trans input[name=price]", function () {
			var e = parseFloat($(this).val());
			if (o($(this).val(), true)) {
				t()
			}
		});
		$(document).on("click", ".copy-private-link", function () {
			setClipboard($(this).data("link"));
			Buff.toast(i18n("replicated"), {
				type: "success"
			})
		})
	};
	return {
		init: i
	}
};
var bundleSell = function (n) {
	var e = [];
	var r = 5;
	var o = function (e) {
		if (e.indexOf("?") != -1) {
			return e
		}
		return e + "?fop=imageView/0/w/96/h/96"
	};
	var s = function (e) {
		var t = $("<div />", {
			class: "upload-item"
		});
		t.append($("<img />"));
		t.append($('<a href="javascript:;" class="delete-upload-img"><i class="icon icon_delete"></i></a>'));
		t.append($('<div class="upload-single-progressing"><span>0%</span></div>'));
		t.append($('<div class="upload-single-fail"><span>重试</span></div>'));
		$("#uploaded-pics").append(t);
		var a = parseInt($("#uploaded-count").text()) + 1;
		$("#uploaded-count").text(a);
		if (a >= r) {
			$("#upload-bundle-img-btn").hide();
			$("#click-to-upload").hide()
		}
		if (e) {
			t.find("img").addClass("success").attr("src", o(e)).data("src", e);
			t.addClass("success")
		} else {
			t.addClass("progressing")
		}
		return t
	};
	var c = function (e) {
		var a = s(undefined);
		var t = new FileReader;
		t.onload = function (e) {
			a.find("img").attr("src", e.target.result)
		};
		t.readAsDataURL(e);
		var i = {
			file: e,
			upload_url: n.url,
			max_file_size: n.max_size,
			token: n.token,
			callback: function (e) {
				a.find("img").addClass("success").attr("src", o(e.url)).data("src", e.url);
				a.removeClass("progressing").addClass("success")
			},
			onprogress: function (e) {
				if (e.lengthComputable) {
					var t = (e.loaded / e.total * 100).toFixed(2);
					a.find(".upload-single-progressing").text(t + "%")
				}
			},
			error: function (e) {
				Buff.toast(e, {
					type: "error"
				});
				a.removeClass("progressing").addClass("fail");
				a.find(".upload-single-fail span").css("cursor", "pointer").off("click").on("click", function () {
					a.removeClass("fail").addClass("progressing");
					uploadFile(i)
				})
			}
		};
		uploadFile(i)
	};
	var t = function () {
		$(document).on("click", "#upload-bundle-img", function () {
			$(this).val("")
		});
		$(document).on("change", "#upload-bundle-img", function (e) {
			var t = e.target.files;
			var a = t.length + $("#uploaded-pics img").length;
			if (a > r) {
				Buff.toast("最多上传" + r + "张图片", {
					type: "error"
				});
				return
			}
			for (var i = 0; i < t.length; i++) {
				var n = t[i];
				c(n)
			}
		});
		$(document).on("click", ".delete-upload-img", function () {
			$(this).parents(".upload-item").remove();
			$("#uploaded-count").text(parseInt($("#uploaded-count").text()) - 1);
			$("#upload-bundle-img-btn").show();
			$("#click-to-upload").show()
		});
		$(document).on("click", "#upload_file_label", function () {
			$("#upload-bundle-img").click()
		})
	};
	return {
		addUploadItem: s,
		init: t
	}
};
var bundleInventory = function () {
	var s = g.game;
	var c = sellingPricing();
	var e = selling();
	var t = null;
	var a = function () {
		n();
		r();
		e.init_cancel_order();
		$("body").on("click", ".expand_bundle_detail", function () {
			var e = $(".expand_bundle_detail").index(this);
			_(e)
		})
	};
	var i = function () {
		$("body").on("click", ".w-Checkbox[name=same_goods]", function () {
			var t = $(this).attr("value");
			if (t === "") {
				t = "false"
			}
			sendRequest("/api/market/bundle_inventory/set_prefer", {
				method: "POST",
				data: {
					show_same_goods: t
				},
				success: function (e) {
					updateHashData({
						same_goods: t,
						page_num: 1
					})
				}
			})
		})
	};
	var n = function () {
		$("body").on("click", ".bundle_inventory_list", function () {
			var e = $(this).data("orderid");
			var a = $(this).data("type");
			if (a === undefined) {
				a = "other"
			}
			sendRequest("/api/market/bundle_overview/" + e, {
				method: "GET",
				showLoading: false,
				success: function (e) {
					if (e.data.discount_rate) {
						discount_rate_str = e.data.discount_rate.toString();
						index = discount_rate_str.indexOf(".");
						if (index !== -1) {
							discount_rate_str = discount_rate_str.substring(0, index + 2)
						} else {
							discount_rate_str = discount_rate_str + ".0"
						}
						e.data.discount_rate_str = discount_rate_str;
						e.data.discount_rate = parseFloat(discount_rate_str)
					}
					e.data.type = a;
					var t = template_render("bundle_inventory_popup_overview", e.data);
					$("#popup-container").html(t);
					Popup.show("j_popup_bundle_inventory_overview")
				},
				error: function (e) {
					Buff.toast(e.error, {
						type: "error"
					})
				}
			})
		});
		$("body").on("click", ".bundle-detail-tab", function () {
			$(this).addClass("on").siblings().removeClass("on");
			var a = $(this).index();
			var e = $(".bundle-tab-content").eq(a);
			if (e.html()) {
				$(".bundle-tab-content").hide().eq(a).show()
			} else {
				var t = $("#j_popup_bundle_inventory_overview").data("orderid");
				var i = "";
				var n = $(this).data("name");
				var r = "";
				if (n == "overview") {
					i = "/api/market/bundle_overview/" + t;
					r = "bundle_inventory_popup_overview"
				} else if (n == "detail") {
					i = "/api/market/bundle_detail/" + t;
					r = "bundle_inventory_popup_detail"
				}
				sendRequest(i, {
					data: {
						page_num: 1,
						page_size: 200
					},
					method: "GET",
					showLoading: false,
					success: function (e) {
						var t = template_render(r, e.data);
						$(".bundle-tab-content").eq(a).html(t);
						$(".bundle-tab-content").hide().eq(a).show()
					},
					error: function (e) {
						Buff.toast(e.error, {
							type: "error"
						})
					}
				})
			}
		});
		$("body").on("click", ".btn_action_link", function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $(this).data("assetid");
			sendRequest("/api/market/cs2_inspect", {
				data: {
					assetid: t
				},
				method: "GET",
				dataType: "json",
				showLoading: true,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error);
						return
					}
					window.open(e.data, "_blank")
				}
			})
		})
	};
	var r = function () {
		$("body").on("click", ".change-bundle-price", function () {
			var e = $(this).data("orderid");
			d(e)
		});
		$("body").on("click", "#j_popup_bundle_inventory_preview #quick-pricing", function () {
			c.quick_pricing($("#j_popup_bundle_inventory_preview"), "");
			u()
		});
		$("body").on("input", "#j_popup_bundle_inventory_preview input[name=price]", function () {
			if (c.check_price_value($(this).val())) {
				$(this).removeClass("i_Text_error")
			} else {
				$(this).addClass("i_Text_error")
			}
			var e = $(this).val();
			if (e) {
				$(this).parents("tr").find(".sell-price-custom").html(formatPriceNormalCustom(e, true))
			} else {
				$(this).parents("tr").find(".sell-price-custom").html("")
			}
			u()
		});
		$("body").on("input", "#j_popup_bundle_inventory_preview input[name=income]", function () {
			c.get_bundle_price_from_income();
			var e = $(this).val();
			if (e) {
				$(this).parents("tr").find(".sell-income-custom").html(formatPriceNormalCustom(e, true))
			} else {
				$(this).parents("tr").find(".sell-income-custom").html("")
			}
		});
		$("body").on("change", "#j_popup_bundle_inventory_preview input[name=price]", function () {
			if (sellingPricing().check_price_value($(this).val(), true)) {
				u()
			}
		});
		$("body").on("change", "#j_popup_bundle_inventory_preview input[name=income]", function () {
			if (c.check_price_value($(this).val(), true)) {
				c.get_bundle_price_from_income()
			}
		})
	};
	var o = function (e, t, a = "#bundle-filters-container") {
		$(a).html(template_render("bundle_inventory_filters_template", {
			type: e,
			game: t
		}));
		$(document).on("click", "#asset_count_not_limited", function () {
			$("#custom-paintwear-container input[name=custom_min]").val("");
			$("#custom-paintwear-container input[name=custom_max]").val("");
			updateHashData({
				page_num: 1,
				min_asset_count: "",
				max_asset_count: ""
			})
		});
		$("#bundle-custom-float-range").off("click").click(function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = $("#asset_tag-filter-bundle").find(".float_range").addBack(".float_range").attr("value");
			var a = "#custom-paintwear-container ";
			var i = a + "input[name=custom_min]";
			var n = a + "input[name=custom_max]";
			var r = "";
			var o = "";
			if (t) {
				var s = rangeKeyParser.parse(t);
				r = s[0];
				o = s[1]
			}
			var c = {
				custom_min_placeholder: 0,
				custom_max_placeholder: 1,
				custom_min_val: r,
				custom_max_val: o
			};
			var _ = template_render("custom-paintwear-pat", c);
			$("#popup-container").html(_);
			Popup.show("custom-paintwear-container");
			$(document).on("click", "#custom_paintwear_reset", function () {
				$(i).val("");
				$(n).val("");
				var e = $("#asset_tag-filter-bundle #paintwear_list");
				e.find("li").removeClass("on");
				e.find("li").eq(0).addClass("on");
				$("#asset_tag-filter-bundle #custom_paintwear_show").text(e.find("li").eq(0).find("h6").text());
				$("#asset_tag-filter-bundle #custom_paintwear_val").attr("value", "");
				updateHashData({
					page_num: 1,
					min_paintwear: "",
					max_paintwear: ""
				});
				Popup.hide()
			});
			$(document).on("click", "#custom_paintwear_confirm", function () {
				Popup.hide();
				var e = $(i).val().toString();
				var t = $(n).val().toString();
				updateHashData({
					page_num: 1,
					min_paintwear: e,
					max_paintwear: t
				})
			});
			$(document).on("click", "#paintwear_not_limited", function () {
				$(i).val("");
				$(n).val("");
				updateHashData({
					page_num: 1,
					min_paintwear: "",
					max_paintwear: ""
				})
			});
			l(a, "0.", "0.", [0, 1], "^\\D*(\\d*(?:\\.\\d{0,4})?).*$")
		});
		$(a + " #bundle-custom-asset-count-range").off("click").click(function (e) {
			e.preventDefault();
			e.stopPropagation();
			var t = "#custom-asset-count-container ";
			var a = t + "input[name=custom_min]";
			var i = t + "input[name=custom_max]";
			var n = $("#asset_tag-filter-bundle").find(".count_range").addBack(".float_range").attr("value");
			var r = "";
			var o = "";
			if (n) {
				var s = rangeKeyParser.parse(n);
				r = s[0];
				o = s[1]
			}
			var c = {
				custom_min_placeholder: 2,
				custom_max_placeholder: 200,
				custom_min_val: r,
				custom_max_val: o
			};
			var _ = template_render("custom-asset-count-pat", c);
			$("#popup-container").html(_);
			Popup.show("custom-asset-count-container");
			$(document).on("click", "#custom_asset_count_confirm", function () {
				Popup.hide();
				var e = $(a).val().toString();
				var t = $(i).val().toString();
				updateHashData({
					page_num: 1,
					min_asset_count: e,
					max_asset_count: t
				})
			});
			$(document).on("click", "#custom_asset_count_reset", function () {
				$(a).val("");
				$(i).val("");
				var e = $("#asset_tag-filter-bundle #asset_count_list");
				var t = $("#asset_tag-filter-bundle #custom_asset_count_val");
				e.find("li").removeClass("on");
				e.find("li").eq(0).addClass("on");
				$("#asset_tag-filter-bundle #custom_asset_count_show").text(e.find("li").eq(0).find("h6").text());
				t.attr("value", "");
				t.trigger("change");
				updateHashData({
					page_num: 1,
					min_asset_count: "",
					max_asset_count: ""
				});
				Popup.hide()
			});
			l(t, "", "", [2, 200], "^\\D*(\\d{0,3}).*$")
		})
	};
	var l = function (e, t, a, i, n) {
		var r = e + "input[name=custom_min]";
		var o = e + "input[name=custom_max]";
		$(document).on("focus", r, function () {
			var e = $(this).val();
			if (!e) {
				$(this).val(t)
			}
		});
		$(document).on("blur", r, function () {
			var e = $(this).val();
			if (e === t) {
				$(this).val("");
				return
			}
			if (e < i[0]) {
				$(this).val(i[0])
			}
			if (e > i[1]) {
				$(this).val(i[1]);
				$(o).val(i[1])
			}
		});
		$(document).on("focus", o, function () {
			var e = $(this).val();
			if (!e) {
				$(this).val(a)
			}
		});
		$(document).on("blur", o, function () {
			var e = $(this).val();
			if (e === a) {
				$(this).val("");
				return
			}
			if (e < i[0]) {
				$(this).val(i[0]);
				$(r).val(i[1])
			}
			if (e > i[1]) {
				$(this).val(i[1])
			}
		});
		$(document).on("keyup", r, function (e) {
			var t = e.keyCode || e.charCode;
			$(this).val($(this).val().replace(new RegExp(n, "g"), "$1"));
			if (t == 13) {
				if ($(this).val().length > 0) {
					$(this).trigger("blur");
					$("#" + popup_container + " #custom_paintwear_confirm").trigger("click")
				}
			}
		});
		$(document).on("keyup", o, function (e) {
			var t = e.keyCode || e.charCode;
			$(this).val($(this).val().replace(new RegExp(n, "g"), "$1"));
			if (t == 13) {
				if ($(this).val().length > 0) {
					$(this).trigger("blur");
					$("#" + popup_container + " #custom_paintwear_confirm").trigger("click")
				}
			}
		})
	};
	var _ = function (e) {
		var t = $(".j_gallery_handler").eq(e);
		var a = $(t).data("orderid");
		var i = $(".tr_gallery").eq(e).find("td");
		if (i.html()) return;
		i.find("td").showLoading();
		sendRequest("/api/market/bundle_overview/" + a, {
			method: "GET",
			showLoading: false,
			success: function (e) {
				var t = template_render("bundle_inventory_detail_pat", e.data);
				i.html(t)
			},
			error: function (e) {
				Buff.toast(e.error, {
					type: "error"
				});
				i.removeLoading()
			}
		})
	};
	var u = function () {
		clearTimeout(t);
		jQuery.xhrPool.abort("/api/market/bundle_inventory/fee");
		t = setTimeout(function () {
			var t = $("#j_popup_bundle_inventory_preview").find('input[name="price"]').val();
			var e = $("#bundle_reference_price").data("price");
			if (e === 0) {
				e = .02
			}
			var a = (t - e) / e * 100;
			var i = a.toString();
			index = i.indexOf(".");
			if (index !== -1) {
				i = i.substring(0, index + 2)
			} else {
				i = i + ".0"
			}
			a = parseFloat(i);
			if (a === 0) {
				$("#discount_rate").hide()
			} else {
				$("#discount_rate").removeClass("tag_reduce tag_rise");
				if (a < 0) {
					$("#discount_rate").addClass("tag_reduce")
				} else {
					$("#discount_rate").addClass("tag_rise")
				}
				var n = i + "%";
				if (a > 0) {
					n = "+" + n
				}
				$("#discount_rate").text(n);
				$("#discount_rate").show()
			}
			var r = [];
			var o = [];
			$(".bundle-asset-info").each(function () {
				r.push($(this).data("assetid"));
				o.push($(this).data("goodsid"))
			});
			sendRequest("/api/market/bundle_inventory/fee", {
				data: {
					game: s,
					price: t,
					asset_ids: r.join(","),
					goods_ids: o.join(","),
					check_price: 1,
					is_change: 0
				},
				dataType: "json",
				method: "GET",
				showLoading: false,
				success: function (e) {
					if (e.code == "OK") {
						bundle_price = t;
						bundle_fee = parseFloat(e.data.total_fee);
						bundle_income = bundle_price - parseFloat(bundle_fee);
						$("#j_popup_bundle_inventory_preview span.sale_fee").html(formatPriceYuan(bundle_fee));
						$("#j_popup_bundle_inventory_preview span.real_income").html(formatPriceYuan(bundle_income));
						$("#j_popup_bundle_inventory_preview span.real_income_custom").html(formatPriceNormalCustom(bundle_income));
						$("#j_popup_bundle_inventory_preview #real_income_custom").html(formatPriceNormalCustom(bundle_income));
						$("#j_popup_bundle_inventory_preview #real_price_custom").html(formatPriceNormalCustom(bundle_price));
						$("#j_popup_bundle_inventory_preview span.reward_points").html(e.data.total_reward_points);
						$("#j_popup_bundle_inventory_preview input[name=income]").each(function () {
							var e = $(this).data("index") - 1;
							if (!$(this).is(":focus")) {
								$(this).val(bundle_income.toFixed(2));
								$(this).removeClass("i_Text_error")
							}
						})
					}
				},
				error: function (e) {
					if (e.statusText != "abort") {
						Buff.toast("获取手续费失败，请稍后再试")
					}
				}
			})
		}, 500)
	};
	var d = function (e) {
		$(document).on("click", "#j_popup_bundle_inventory_preview .change:not(.i_Btn_disabled)", function () {
			var e = $('input[name="price"]').val();
			var t = $('input[name="price"]').val();
			var a = $(this).data("orderid");
			if (c.check_price_value(e, true) == false) {
				return
			}
			var r = {};
			var o = [];
			var i = [];
			$(".bundle-asset-info").each(function () {
				i.push($(this).data("goodsid"));
				o.push($(this).data("assetid"));
				r[$(this).data("assetid")] = {
					assetid: $(this).data("assetid"),
					icon_url: $(this).data("icon-url"),
					name: $(this).data("name")
				}
			});
			var n = function () {
				sendRequest("/api/market/bundle_inventory/change", {
					data: {
						game: s,
						sell_orders: [{
							sell_order_id: a,
							price: e,
							income: t
						}]
					},
					method: "POST",
					success: function (e) {
						if (e.code == "OK") {
							var t = 0;
							var a = [];
							for (var i = 0; i < o.length; i++) {
								result = e.data[o[i]];
								if (result == null) {
									continue
								}
								if (result == "OK") {
									t += 1
								} else {
									a.push({
										info: r[o[i]],
										reason: result
									})
								}
							}
							if (a.length > 0) {
								Popup.hide();
								var n = template_render("_bundle_inventory_result_pat", {
									type: "change-price",
									failures: a,
									success: t
								});
								$("#popup-container").html(n);
								Popup.show("j_popup_bundle_inventory_result")
							} else {
								Buff.toast(i18n("modify_the_success"), {
									type: "success"
								});
								setTimeout(function () {
									window.location.reload()
								}, 1e3)
							}
						} else {
							Buff.toast(e.error, {
								type: "error"
							})
						}
					}
				})
			};
			c.find_bundle_unusual_price($("#j_popup_bundle_inventory_preview"), i, function () {
				n()
			})
		});
		sendRequest("/market/sell_order/bundle_inventory/change_preview", {
			data: {
				game: s,
				sell_order_id: e
			},
			dataType: "json",
			method: "POST",
			success: function (e) {
				if (e.code == "OK") {
					$("#popup-container").html(e.data);
					initCustomCurrency($("#j_popup_bundle_inventory_preview"));
					Popup.show("j_popup_bundle_inventory_preview");
					Buff.pricePatten("input[name=price]");
					Buff.pricePatten("input[name=income]")
				} else {
					Buff.alert({
						type: "error",
						title: i18n("shelve_failed"),
						message: e.error,
						hideCancel: true
					})
				}
			}
		})
	};
	return {
		init: a,
		init_bundle_preview: r,
		init_bundle_inventory_filter: o,
		init_show_same_goods_checkbox: i
	}
};
var evaluation = function () {
	var o = null;
	var s = function () {
		var e = localStorage.getItem("evaluation_history");
		if (e) {
			return e.split(",")
		} else {
			return []
		}
	};
	var c = function (e) {
		var t = s();
		if (t.indexOf(e) == -1) {
			t.unshift(e);
			localStorage.setItem("evaluation_history", t)
		}
	};
	var _ = function (e) {
		var t = s();
		var a = [];
		for (var i = 0; i < t.length; i++) {
			if (t[i] != e) a.push(t[i])
		}
		localStorage.setItem("evaluation_history", a)
	};
	var e = function (n, e) {
		o = e;
		var t = getParamsFromHash();
		for (var a in t) {
			if (["min_price", "max_price", "search"].indexOf(a) > -1) {
				$("input[name=" + a + "]").val(t[a])
			} else if (a == "category_group") {
				Buff.setCompValue("search-category", t[a])
			} else {
				Buff.setCompValue("search-" + a, t[a])
			}
		}
		$(document).on("focus", "input[name=steamid]", function () {
			var e = s();
			var t = "";
			for (var a = 0; a < e.length; a++) {
				t += format_html('<li><div class="steamid-item"><%= item %></div><div class="steamid-delete icon icon_delete"></div></li>', {
					item: e[a]
				})
			}
			$(".steamid-history ul").html(t);
			$(".steamid-history").css({
				left: $(this).offset().left + "px"
			});
			$(".steamid-history").show()
		});
		$(document).on("blur", "input[name=steamid]", function () {
			setTimeout(function () {
				$(".steamid-history").hide()
			}, 200)
		});
		$(document).on("click", ".steamid-history li", function () {
			var e = $(this).find(".steamid-item").text();
			$("input[name=steamid]").val(e)
		});
		$(document).on("click", ".steamid-history li .steamid-delete", function (e) {
			e.stopPropagation();
			var t = $(this).parent().find(".steamid-item").text();
			_(t)
		});
		var r = getParams();
		$(document).on("change", ".w-Select_game", function () {
			var e = getParamsFromHash();
			for (var t in e) {
				e[t] = ""
			}
			updateHashData(e);
			var a = {
				game: $(this).attr("value"),
				steamid: $("input[name=steamid]").val()
			};
			updateSearchData(a)
		});
		$(document).on("change", ".w-Select:not(.w-Select_game)", function () {
			updateHash($(this).attr("name"), $(this).attr("value"))
		});
		$(document).on("change", ".w-Tag", function () {
			updateHash($(this).attr("name"), $(this).attr("value"))
		});
		$(document).on("change", ".w-SelHero", function () {
			updateHash("hero", $(this).attr("value"))
		});
		$(document).on("change", ".w-Search input", function () {
			updateHash("search", $(this).val())
		});
		$(document).on("change", "input[name=min_price]", function () {
			updateHash("min_price", $(this).val())
		});
		$(document).on("change", "input[name=max_price]", function () {
			updateHash("max_price", $(this).val())
		});
		$(document).on("click", ".w-Counter-pannel .i_Btn_sub", function () {
			updateHashData({
				min_price: "",
				max_price: ""
			})
		});
		$(document).on("change", ".w-Select-Multi", function () {
			var e = $(this).attr("name");
			if (e == "rarity") {
				var t = $(this).attr("value");
				if (typeof t != "undefined" && t != "0") {
					updateHashData({
						rarity: t
					})
				}
				return
			}
			var a = $(".w-Select-Multi").attr("value");
			if (typeof a != "undefined") {
				var i = $('.w-Select-Multi h6[value="' + a + '"]').attr("value");
				if (a == i) {
					updateHashData({
						category_group: a,
						category: ""
					})
				} else {
					updateHashData({
						category_group: "",
						category: a
					})
				}
			}
		});
		$(document).on("click", "#btn-refresh", function () {
			i(null, 1)
		});
		Buff.pricePatten("input[name=min_price]");
		Buff.pricePatten("input[name=max_price]");
		var i = function (e, t) {
			var a = r.steamid;
			$("#j_list_card").showLoading();
			var i = getParamsFromHash();
			i.game = n;
			i.steamid = a;
			i.page_num = e || i.page_num;
			i.force = t || 0;
			if (n == "csgo") {
				i.state = i.state || "all"
			}
			sendRequest("/api/market/evaluation", {
				data: i,
				dataType: "json",
				method: "GET",
				showLoading: false,
				timeout: BuffConfig.STEAM_TIMEOUT,
				ignoreCode: ["Backpack Is Private"],
				success: function (e) {
					$("#j_list_card").removeLoading();
					var t = "";
					if (e.code == "OK") {
						$("#total-count").text(e.data.total_count);
						$("#total-value").text("$" + (e.data.total_price / 100).toFixed(2));
						t = template_render("evaluation_card_list_pat", e.data);
						if (e.data.items.length > 0) {
							c(a)
						}
						renderPagination({
							total_count: e.data.total_count,
							page_size: e.data.page_size,
							page_num: e.data.page_num,
							show_size_select: true,
							onPageClick: function (e, t) {
								t.preventDefault();
								updateHash("page_num", e);
								window.scrollTo(0, 0)
							}
						})
					} else if (e.code == "Backpack Is Private") {
						t = format_html('<div class="nodata"><p><i class="icon icon_unbind"></i></p><p><%= data.error %></p>', {
							data: e
						});
						if (a == o) {
							t += format_html('<div><a href="https://steamcommunity.com/my/edit/settings" target="_blank" class="i_Btn i_Btn_hollow"><%= i18n("go_to_settings") %></a></div></div>')
						} else {
							t += "</div>"
						}
						$(".pager").html("")
					} else {
						Buff.toast(e.error)
					}
					$("#j_list_card").html(t);
					$("img.lazy").lazyload()
				},
				error: function (e) {
					$("#j_list_card").removeLoading()
				}
			})
		};
		if (r.steamid) {
			i()
		}
		$(window).on("hashchange", function () {
			i()
		});
		if (getParams().game == "pubg_recycle") {
			updateSearch("game", "pubg")
		}
	};
	return {
		init: e
	}
};
var lockCompensate = function () {
	var a;
	var i = function () {
		var e = getParamsFromHash().page_num || 1;
		var t = {
			period: a,
			page_num: e
		};
		sendRequest("/api/market/lock/goods", {
			data: t,
			dataType: "json",
			method: "GET",
			showLoading: true,
			success: function (e) {
				if (e.data.items.length == 0) {
					$("#compensate").addClass("i_Btn_disabled")
				}
				var t = template_render("goods_list_pat", e.data);
				$("#j_list_card").html(t);
				renderPagination({
					total_count: e.data.total_count,
					page_size: e.data.page_size,
					page_num: e.data.page_num,
					show_size_select: false,
					size_selects: [70, 140, 210],
					onPageClick: function (e, t) {
						t.preventDefault();
						updateHash("page_num", e);
						i()
					}
				});
				t = template_render("brief_info_pat", {
					lock_goods_count: e.data.total_count
				});
				$(".brief-info").html(t);
				$("#total_compensate_count").text(e.data.total_count);
				$("#total_compensate_price").text(e.data.total_compensation)
			}
		})
	};
	var t = function () {
		sendRequest("/api/market/lock/compensate", {
			data: {
				period: a
			},
			dataType: "json",
			method: "POST",
			showLoading: true,
			success: function (e) {
				Buff.toast(i18n("to_receive_the_success"), {
					type: "success"
				});
				Popup.hide();
				i()
			}
		})
	};
	var e = function (e) {
		a = e;
		i();
		$("#compensate").click(function () {
			Popup.show("j_popup_compensate")
		});
		$("#j_popup_compensate .i_Btn_main").click(function () {
			if (!$("#agreen").hasClass("on")) {
				Buff.toast(i18n("please_tick_the_below_statement"), {
					type: "warning"
				});
				return
			}
			t()
		})
	};
	return {
		init: e
	}
}();
var sellingStat = function (t) {
	var a = function (t, a) {
		var e = document.getElementById("myChart");
		var i = [];
		var n = [];
		Object.keys(t).forEach(function (e) {
			i.push(moment(parseInt(e)).format("YYYY-MM-DD"));
			if (a == "amount") {
				n.push(g.currency.rate_base_cny * parseFloat(t[e][a]))
			} else {
				n.push(parseFloat(t[e][a]))
			}
		});
		var r = {
			precision: 2,
			suggestedMax: Math.max(Math.max.apply(null, n) * 1.03, .01),
			callback: function (e) {
				return g.currency.symbol + " " + e
			}
		};
		var o = {
			precision: 0,
			suggestedMax: Math.max(Math.max.apply(null, n) * 1.03, 1),
			callback: function (e) {
				return e
			}
		};
		var s = [];
		if (a == "count") {
			s.push({
				label: i18n("sold_number_of_pieces"),
				data: n,
				borderColor: "#426BBB",
				backgroundColor: "#426BBB",
				fill: false,
				borderWidth: 2
			})
		} else {
			s.push({
				label: i18n("sale_amount"),
				data: n,
				borderColor: "#EEA20E",
				backgroundColor: "#EEA20E",
				fill: false,
				borderWidth: 2
			})
		}
		var c = new Chart(e, {
			type: "line",
			data: {
				labels: i,
				datasets: s
			},
			options: {
				borderWidth: 1,
				layout: {
					padding: {
						left: 50,
						right: 50,
						top: 0,
						bottom: 50
					}
				},
				elements: {
					point: {
						radius: 3,
						borderWidth: 0,
						hitRadius: 6
					},
					line: {
						tension: 0
					}
				},
				scales: {
					x: {
						type: "time",
						ticks: {
							source: "labels"
						},
						time: {
							unit: "day",
							displayFormats: {
								day: "MM-DD"
							}
						},
						gridLines: {}
					},
					y: {
						id: "A",
						position: "left",
						beginAtZero: true,
						ticks: a == "count" ? o : r
					}
				},
				plugins: {
					legend: {
						display: false
					},
					tooltip: {
						mode: "index",
						axis: "x",
						displayColors: false,
						intersect: false,
						callbacks: {
							label: function (e, t) {
								if (a == "count") {
									return i18n("sale_number_") + e.parsed.y
								} else {
									return i18n("sale_amount_yuan") + g.currency.symbol + " " + e.parsed.y
								}
							},
							title: function (e) {
								return moment(e[0].parsed.x).format("YYYY-MM-DD")
							}
						},
						backgroundColor: "rgba(255,255,255,0.8)",
						titleColor: "#000",
						bodyColor: "#000",
						borderWidth: 1,
						borderColor: "#7cb5ec"
					}
				}
			}
		})
	};
	var e = function () {
		$("#j_fold-handler").click(function () {
			if ($(this).hasClass("on")) {
				$(this).removeClass("on").find("span").text(i18n("view_more"));
				$("#j_sold-count").animate({
					height: 170
				}, "fast")
			} else {
				$(this).addClass("on").find("span").text(i18n("click_to_collapse"));
				$("#j_sold-count").animate({
					height: 356
				}, "fast")
			}
		});
		$("#chart-switcher span").on("click", function () {
			var e = $(this).data("field");
			$("#myChart").parent().html('<canvas id="myChart"></canvas>');
			a(t, e)
		});
		a(t, "amount");
		g.game = getParams().game
	};
	return {
		init: e
	}
};
var adjust_edit_entry_display = function (e, t) {
	var a = t.remark;
	e.data("buy_price", t.buy_price);
	if (!a) {
		if (e.hasClass("without-class-change")) {
			e.text("");
			e.hide()
		} else {
			e.removeClass("shalow-btn_long");
			e.addClass("shalow-btn_hidden");
			e.text(i18n("notes"));
			if (e.data("is_customplayer")) {
				e.css("margin-bottom", "")
			}
		}
	} else {
		if (!e.hasClass("without-class-change")) {
			e.removeClass("shalow-btn_hidden");
			e.addClass("shalow-btn_long");
			e.text(a);
			if (e.data("is_customplayer")) {
				e.css("margin-bottom", "28px")
			}
		} else {
			e.text(i18n("notes_desc") + a)
		}
	}
	e.data("content", a);
	if (!e.hasClass("without-class-change")) {
		if (!a) {
			if (e.hasClass("remark_without_stickers")) {
				e.parent().removeClass("tagBoxB_inline")
			} else if (e.hasClass("with-gem-list") && e.hasClass("with-other-gem-list")) {
				e.parent().removeClass("tagBoxB_RT2");
				e.parent().addClass("tagBoxB_RT")
			} else if (e.hasClass("with-gem-list")) {
				e.parent().addClass("tagBoxB_RT")
			} else {
				e.parent().removeClass("tagBoxB_RT")
			}
		} else {
			if (e.hasClass("remark_without_stickers")) {
				e.parent().addClass("tagBoxB_inline")
			} else if (e.hasClass("with-gem-list") && e.hasClass("with-other-gem-list")) {
				e.parent().addClass("tagBoxB_RT2");
				e.parent().removeClass("tagBoxB_RT")
			} else if (e.hasClass("with-gem-list") || e.hasClass("with-other-gem-list")) {
				e.parent().addClass("tagBoxB_RT");
				e.parent().removeClass("tagBoxB_RT2")
			}
		}
	}
};
var sync_container_data = function (e, t) {
	e.data("order-extra", t)
};
var SteamAssetRemark = function () {
	var l = g.game;
	var e = function (e, _) {
		if (!e) {
			e = ".asset-remark-edit"
		}
		if (!_) {
			_ = function (e, t, a) {
				sync_container_data(e.parent().parent().parent(), a);
				adjust_edit_entry_display(e, a)
			}
		}
		$(document).off("click", e);
		$(document).on("click", e, function (e) {
			e.preventDefault();
			e.stopPropagation();
			var a = $(this);
			var i = $(this).data("assetid");
			var t = $(this).data("content") || "";
			var n = $(this).data("buy_price") || "";
			var r = "";
			var o = $("#j_popup_common_notes");
			var s = $("#j_popup_common_notes").find("textarea").focus().val(t).trigger("input");
			var c = o.find(".auto-fit-buy-price");
			c.find("span").text("");
			c.hide();
			c.parent().hide();
			s.val("");
			setTimeout(function () {
				s.val("");
				s.focus().val(t);
				s.trigger("input")
			}, 300);
			if (n) {
				r = "￥" + n + i18n("purchased");
				c.find("span").text(r);
				c.show();
				c.parent().show()
			}
			if (t) {
				o.find(".popup-title").text(i18n("edit_notes"))
			} else {
				o.find(".popup-title").text(i18n("add_notes"))
			}
			c.unbind("click").click(function (e) {
				e.preventDefault();
				var t = s.val();
				if (r) {
					var a = t + r;
					if (a.length > 40) {
						a = a.slice(0, 40)
					}
					s.val("");
					s.focus().val(a);
					s.trigger("input")
				}
			});
			o.find(".confirm:not(.i_Btn_disabled)").unbind("click").click(function (e) {
				e.preventDefault();
				e.stopPropagation();
				if (s.val().length > 40) {
					Buff.toast(i18n("notes_exceed_max_len"), {
						type: "warning"
					});
					return
				}
				var t = [{
					remark: s.val(),
					assetid: i
				}];
				sendRequest("/api/market/steam_asset_remark/change", {
					data: {
						game: l,
						assets: t
					},
					method: "POST",
					timeout: BuffConfig.STEAM_TIMEOUT + 1e3 * t.length,
					success: function (e) {
						if (e.code == "OK") {
							Buff.toast(i18n("submitted"), {
								type: "success"
							});
							var t = s.val();
							_ && _(a, i, {
								remark: t,
								buy_price: n
							});
							Popup.hide()
						} else {
							Buff.toast(e.error || e.code, {
								type: "warning"
							})
						}
					}
				})
			});
			Popup.show("j_popup_common_notes")
		})
	};
	return {
		init: e
	}
};
var badlandersPreview = function () {
	var r = {};
	var e = function (e) {
		if (window.Preview === undefined) {
			var t = document.createElement("script");
			t.setAttribute("src", "/static/assets/js/g101-preview.umd.js?v=20230711");
			t.setAttribute("type", "text/javascript");
			t.setAttribute("async", true);
			document.body.appendChild(t);
			t.addEventListener("load", e)
		} else {
			e()
		}
	};
	var t = function (t, a, i, n) {
		var t = t;
		if (r[t]) {
			r[t].formatWeapon(n);
			return
		}
		e(function () {
			var e = new window.Preview({
				name: a,
				...i
			});
			r[t] = e;
			e.formatWeapon(n)
		})
	};
	var a = function (t, a, i, n) {
		var t = t;
		if (r[t]) {
			r[t].formatPreview(n);
			return
		}
		e(function () {
			var e = new window.Preview({
				name: a,
				...i
			});
			r[t] = e;
			e.formatPreview(n)
		})
	};
	var i = function (e) {
		var t = r[e];
		if (t) {
			t.download()
		} else {
			Buff.toast("检视图暂未生成，请稍后再试", {
				type: "error"
			})
		}
	};
	return {
		showWeapon: t,
		showPreview: a,
		downloadPreview: i
	}
};
var SearchBankCardPopup = function () {
	var e = "search_bank_card";
	var t = e + "_pat";
	var a = "j_popup_" + e;
	var n = "#" + a;
	var _ = true;
	var l = function (e) {
		return template_render("banks_item_list_pat", {
			items: e
		})
	};
	var o = function (e) {
		$(n).remove();
		$("body").append(template_render(t, {
			banks_item_list: l(e)
		}));
		Popup.show(a)
	};
	var i = function (s, r) {
		o(s);
		var e = n + " .search input";
		var t = ".bank a";
		var a = n + " .popup-back";
		$(document).off("click", a).on("click", a, function () {
			if (_) {
				Popup.hide();
				r({})
			} else {
				$(e).val("");
				c(l(s));
				_ = true
			}
		});
		$(document).off("mouseenter", t).on("mouseenter", t, function () {
			$(this).addClass("bank_hover")
		}).off("mouseleave", ".bank a").on("mouseleave", ".bank a", function () {
			$(this).removeClass("bank_hover")
		});
		$(document).off("click", t).on("click", t, function (e) {
			var t = $(e.target).data("id");
			var a = $(e.target).data("name");
			var i = $(e.target).data("icon");
			var n = $(e.target).data("card_type");
			Popup.hide();
			_ = true;
			r({
				bank_id: t,
				bank_name: a,
				icon: i,
				card_type: n
			})
		});
		$(document).off("focus", e).on("focus", e, function () {
			$(this).addClass("active_ipt")
		}).off("blur", e).on("blur", e, function () {
			$(this).removeClass("active_ipt")
		});
		var c = function (e) {
			$(n).find(".bank_list").html(e)
		};
		var i = function (e) {
			_ = false;
			var t = [];
			for (var a = 0; a < s.length; a++) {
				var i = s[a];
				for (var n = 0; n < i.items.length; n++) {
					var r = i.items[n];
					if (r.bank_name.indexOf(e) !== -1) {
						t.push(r)
					}
				}
			}
			var o = "";
			if (t.length == 0) {
				o = l([])
			} else {
				o = l([{
					groups: i18n("search_result"),
					items: t
				}])
			}
			c(o)
		};
		$(document).off("input", e).on("input", e, function () {
			if (this.value) {
				_ = false;
				i(this.value)
			} else {
				_ = true;
				c(l(s))
			}
		})
	};
	return {
		show: i
	}
}();
var CertDlgDecorator = function () {
	var _ = function (e, t) {
		if (t && t.length) {
			if (t.includes(e)) {
				return
			}
		}
		var a = {
			epay: {
				html: {
					title: i18n("auth_entry_bankcard_title"),
					text: i18n("auth_entry_bankcard_text")
				},
				container: "#j_popup_card #auth_type_entry",
				li_id_selector: "change_to_card"
			},
			zhima: {
				html: {
					title: i18n("auth_entry_zhima_title"),
					text: i18n("auth_entry_zhima_text")
				},
				container: "#j_popup_zhima #auth_type_entry",
				li_id_selector: "change_to_zhima"
			},
			kyc: {
				html: {
					title: i18n("auth_entry_kyc_title"),
					text: i18n("auth_entry_kyc_text")
				},
				container: "#j_popup_kyc #auth_type_entry",
				li_id_selector: "change_to_kyc"
			},
			manual: {
				html: {
					title: i18n("auth_entry_manual_title"),
					text: i18n("auth_entry_manual_text")
				},
				container: "#j_popup_manual_cert #auth_type_entry",
				li_id_selector: "change_to_manual"
			}
		};
		var i = $(a[e]["container"]);
		i.empty();
		if (i.parent().hasClass("popup-foot-normal")) {
			i.parent().removeClass("popup-foot-normal");
			i.parent().addClass("auth-type-entry");
			i.next().remove();
			i.parent().parent().append('<div class="blank20"></div>')
		}
		for (var n in a) {
			if (n == e) {
				continue
			}
			if (t && t.length && t.includes(n)) {
				continue
			}
			var r = a[n];
			i.append("<li id=" + r.li_id_selector + "><h4>" + r.html.title + '<i class="icon icon_arr_right"></i></h4><p>' + r.html.text + "</p></li>")
		}
	};
	var e = function (c) {
		sendRequest("/api/asset/get_realname/v2/", {
			method: "get",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "error"
					});
					return
				}
				var t = e.data.supported_cert_types;
				if (t.length == 0) {
					return
				}
				var a = {
					epay: "j_popup_card",
					zhima: "j_popup_zhima",
					manual: "j_popup_manual_cert",
					kyc: "j_popup_kyc"
				};
				var i = [];
				for (var n in a) {
					if (!t.includes(n)) {
						i.push(n);
						continue
					}
					if (e.data.cert_type_info.hasOwnProperty(n)) {
						var r = e.data.cert_type_info[n];
						var o = false;
						if (n == "kyc") {
							if (r.state == "Pending") {
								o = true
							} else if (r.left_count == 0 || !(g.user && g.user.is_foreigner)) {
								i.push(n)
							}
						} else if (n == "manual") {
							if (r.state == "PROCESSING") {
								o = true
							}
							if (g.user && !g.user.is_foreigner) {
								i.push(n)
							}
						}
						if (o) {
							location.href = "/user-center/asset/withdraw/";
							return
						}
					}
				}
				var s = undefined;
				if (e.data.name && e.data.id_card) {
					s = {
						name: e.data.name,
						id_card: e.data.id_card
					}
				}
				c(s, a[e.data.recommended_cert_type], e.data.supported_cert_types.length > 2 ? function (e) {
					var t = {
						j_popup_card: "epay",
						j_popup_zhima: "zhima",
						j_popup_manual_cert: "manual",
						j_popup_kyc: "kyc"
					};
					_(t[e], i)
				} : null, e.data.manual_cert_state)
			}
		})
	};
	return {
		init: e
	}
};
var bindCard = function () {
	var wait = undefined;
	var realname = null;
	var max_bank_card_count = null;
	var auto_highlight_bank_card = false;
	var send_authcode_status = false;
	var is_ejzb = g.switch_ejzb;

	function luhm_check(e) {
		var t = e.length;
		var a = 0;
		for (var i = 1; i < t; i++) {
			if (i % 2 == 1) {
				var n = parseInt(e[t - 1 - i]) * 2;
				a += n > 9 ? n - 9 : n
			} else {
				a += parseInt(e[t - 1 - i])
			}
		}
		if (parseInt(e[t - 1]) == a * 9 % 10) {
			return true
		} else {
			return false
		}
	}
	var countdown_handler = undefined;

	function countdown(e, t) {
		if (wait === undefined) {
			wait = t
		}
		if (wait == 0) {
			e.removeClass("i_Btn_disabled");
			e.text(i18n("get_the_verification_code"));
			wait = t == undefined ? 60 : t;
			countdown_handler = undefined
		} else {
			e.addClass("i_Btn_disabled");
			e.html(format_html('<%= i18n("resend") %><small>(<%= wait %>)</small>', {
				wait: wait
			}));
			wait--;
			countdown_handler = setTimeout(function () {
				countdown(e, t)
			}, 1e3)
		}
	}
	var input_error = function (i) {
		var e = function (e, t) {
			var a = $("#" + i);
			if (typeof e == "string") {
				if (t) {
					t.siblings(".error").text(e)
				} else {
					a.find(".c_Error").text(e)
				}
			}
			if (t) {
				t.parent().addClass("i_Text_error")
			}
		};
		var t = function (e) {
			var t = $("#" + i);
			if (e) {
				e.siblings(".error").text("");
				e.parent().removeClass("i_Text_error")
			} else {
				t.find(".c_Error").html("&nbsp;")
			}
		};
		var a = function () {
			var e = $("#" + i);
			e.find(".i_Text_error").removeClass("i_Text_error");
			e.find(".i_Text_error").removeClass("extra_i_Text_error");
			e.find(".error").text("");
			e.find(".c_Error").html("&nbsp;")
		};
		return {
			show: e,
			clear: t,
			clear_all: a
		}
	};
	var check_realname = function (e) {
		if (!e) {
			return i18n("the_real_name_can_not")
		} else if (e.length > 64) {
			return i18n("the_system_supports_the_maximum")
		}
	};
	var check_id_card = function (e) {
		var t = new IDValidator(GB2260);
		if (!e) {
			return i18n("id_number_can_not_be")
		} else if (!t.isValid(e)) {
			return i18n("id_card_number_errors_please")
		}
	};
	var init_card_popup = function (e, t, a, i) {
		realname = e;
		if (!a) {
			a = function () { }
		}
		i = i || {};
		var n = i.scene;
		var r = i.amount;
		var o = i.description_url;
		var h = input_error("j_popup_card");
		var s = {
			data: {},
			error_msg: "",
			show_error: true,
			add_text_error: function (e) {
				if (this.show_error) {
					h.show(this.error_msg, e)
				}
			},
			get: function (e) {
				var t = $("#j_popup_card");
				var a = false;
				h.clear_all();
				this.error_msg = "";
				var i = t.find("input[name=realname]");
				if (i.length > 0) {
					var n = i.val().replace(/\s*/g, "");
					this.error_msg = check_realname(n);
					if (this.error_msg) {
						this.add_text_error(i);
						return undefined
					}
					this.data["realname"] = n
				}
				var r = t.find("input[name=id_card]");
				if (r.length > 0) {
					var o = r.val().replace(/\s*/g, "");
					this.error_msg = check_id_card(o);
					if (this.error_msg) {
						this.add_text_error(r);
						return undefined
					}
					this.data["id_card"] = o
				}
				var s = t.find("input[name=card_number]");
				var c = s.val().replace(/\s*/g, "");
				var _ = t.find("input[name=bank_id]").val();
				var l = t.find("input[name=card_type]").val();
				if (!c) {
					this.error_msg = i18n("the_bank_card_number_can");
					this.add_text_error(s);
					return undefined
				}
				if (!_) {
					this.error_msg = i18n("currently_does_not_support_the")
				} else if (_ != "9998" && _ != "9999" && !luhm_check(c)) {
					this.error_msg = i18n("the_bank_card_number_errors")
				} else if (l == "credit") {
					this.error_msg = i18n("not_support_credit_card")
				}
				if (this.error_msg) {
					if (is_ejzb) {
						s.css("border", "1px solid red");
						s.addClass("extra_i_Text_error")
					}
					this.add_text_error();
					return undefined
				}
				if (is_ejzb) {
					s.css("border", "1px solid #e3e3e3")
				}
				this.data["card_number"] = c;
				this.data["bank_id"] = _;
				this.data["card_type"] = l;
				var u = t.find("input[name=mobile]");
				var d = u.val().replace(/\s*/g, "");
				if (!d) {
					this.error_msg = i18n("the_phone_number_cannot_be")
				} else if (!/^(11|13|14|15|16|17|18|19)\d{9}$/.test(d)) {
					this.error_msg = i18n("the_phone_number_is_incorrect")
				}
				if (this.error_msg) {
					this.add_text_error(u);
					return undefined
				}
				this.data["mobile"] = d;
				if (e) {
					var p = t.find("input[name=card_id]").val();
					if (!p) {
						this.error_msg = i18n("please_get_a_sms_verification")
					}
					if (this.error_msg) {
						this.add_text_error();
						return undefined
					}
					this.data["card_id"] = p;
					var f = t.find("input[name=authcode]");
					var m = f.val().replace(/\s*/g, "");
					if (!m) {
						this.error_msg = i18n("verification_code_cannot_be_empty")
					} else if (!/^\d{6}$/.test(m)) {
						this.error_msg = i18n("the_verification_code_is_incorrect")
					}
					if (this.error_msg) {
						this.add_text_error(f);
						return undefined
					}
					this.data["authcode"] = m;
					if ($("#agreement").length > 0 && !$("#agreement").hasClass("on")) {
						this.error_msg = i18n("need_to_first_agree_to");
						this.add_text_error();
						return undefined
					}
				}
				return true
			},
			clear: function () {
				$("input[name=card_number]").val("");
				$("input[name=mobile]").val("");
				$("input[name=authcode]").val("")
			},
			show_bank_info: function (e, t) {
				if (!t) {
					t = function () { }
				}
				$("input[name=bank_id]").val(e["bank_id"]);
				$("input[name=card_type]").val(e["card_type"]);
				var a = "";
				if (is_ejzb) {
					a += "<span>" + e["bank_name"] + "</span>"
				} else {
					if (e["description"]) {
						a = a + '<span class="discount-tips">' + e["description"] + "</span>"
					}
					a += '<i class="icon icon_bank" style="background: center/contain url(' + e["icon"] + ');" ></i>';
					a += "<span>" + e["bank_name"] + "</span>"
				}
				$(".card-name").html(a).show()
			},
			clear_bank_info: function () {
				$("input[name=bank_id]").val("");
				$("input[name=card_type]").val("");
				var e = $(".card-name").find("i").attr("class");
				$(".card-name").find("i").attr("class", e.replace(/b_\d+/, "")).next().text("");
				$(".card-name").hide()
			}
		};
		var c = function (t) {
			sendRequest("/api/asset/support_banks", {
				method: "get",
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						return
					}
					t(e.data.banks)
				}
			})
		};
		var _ = function (t, a) {
			var t = t || "#manual_select_card";
			var e = t == ".card-name" ? "#manual_select_card" : ".card-name";
			$(t).show();
			$(e).hide();
			if (!a) {
				a = function () { }
			}
			$(document).off("click", t).on("click", t, function () {
				c(function (e) {
					if (e.length == 0) {
						console.log("get support banks empty");
						return
					}
					Popup.hide();
					SearchBankCardPopup.show(e, function (e) {
						Popup.show("j_popup_card");
						if (!$.isEmptyObject(e)) {
							$(t).hide();
							a(e)
						}
					})
				})
			})
		};
		var l = function () {
			var t = function (e) {
				s.show_bank_info({
					bank_id: e["bank_id"],
					card_type: e["card_type"],
					bank_name: e["bank_name"],
					bank_icon: e["icon"]
				})
			};
			_(".card-name", function (e) {
				t(e)
			})
		};
		var u = function (e) {
			var t = function (e) {
				s.show_bank_info({
					bank_id: e["bank_id"],
					card_type: e["card_type"],
					bank_name: e["bank_name"],
					bank_icon: e["icon"]
				});
				l()
			};
			s.clear_bank_info();
			h.clear();
			var a = e.length;
			if (a < 16 || a > 19) return;
			if (/^6666/.test(e)) {
				if (a != 16 && a != 18) return
			} else if (!luhm_check(e)) {
				if (is_ejzb) {
					_("", function (e) {
						t(e)
					})
				}
				return
			}
			var i = {
				card_number: e
			};
			if (r) {
				i["amount"] = r
			}
			if (is_ejzb) {
				sendRequest("/api/asset/get_card_info/v2", {
					data: i,
					method: "get",
					dataType: "json",
					showLoading: false,
					success: function (e) {
						if (e.code == "Card Bank Empty" || e.code == "Card Not Supported") {
							h.show(e.error, $("input[name=card_number]"));
							return
						} else if ($.isEmptyObject(e.data)) {
							_("", function (e) {
								t(e)
							});
							return
						}
						t(e.data)
					}
				})
			} else {
				sendRequest("/api/asset/get_card_info/", {
					data: i,
					method: "get",
					dataType: "json",
					showLoading: false,
					success: function (e) {
						if (e.code != "OK" || $.isEmptyObject(e.data)) {
							return
						}
						s.show_bank_info(e.data)
					}
				})
			}
		};
		var d = function () {
			if (s.get(false) == undefined) {
				return
			}
			var e = is_ejzb ? "/api/asset/bind_card/v2" : "/api/asset/bind_card/";
			var t = is_ejzb ? 120 : 60;
			var a = s.data;
			if (n) {
				a["scene"] = n
			}
			$("input[name=card_id]").val("");
			var i = ENV == "prod" ? 5e3 : 15e3;
			sendRequest(e, {
				data: a,
				method: "post",
				dataType: "json",
				timeout: i,
				success: function (e) {
					if (e.code != "OK") {
						if (e.code == "Card Type Error") {
							a.add_text_error(i18n("recharge_with_cash_only_support"))
						} else {
							Buff.alert({
								type: "error",
								title: i18n("bound_to_fail"),
								message: e.code == "Epay Response Error" ? e.error || i18n("tied_the_card_fails_please") : e.error,
								hideCancel: true
							})
						}
						return
					}
					$("input[name=card_id]").val(e.data.card_id);
					countdown($("#send_authcode"), t);
					send_authcode_status = true
				}
			})
		};
		var p = function () {
			if (s.get(true) == undefined) {
				return
			}
			var e = is_ejzb ? "/api/asset/bind_card_verify/v2" : "/api/asset/bind_card_verify/";
			var t = s.data;
			sendRequest(e, {
				data: t,
				method: "post",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						if (e.code == "Card Type Error") {
							t.add_text_error(i18n("recharge_with_cash_only_support"))
						} else {
							Buff.alert({
								type: "error",
								title: "绑定失败",
								message: e.code == "Epay Response Error" ? e.error || i18n("tied_the_card_fails_please") : e.error,
								hideCancel: true
							})
						}
						return
					}
					Buff.toast(i18n("the_binding_is_successful"), {
						type: "success"
					});
					sleep(1e3);
					Popup.hide();
					if (!realname) {
						realname = {
							name: t["realname"],
							id_card: t["id_card"]
						};
						init_card_popup(realname);
						wait = 0
					} else {
						s.clear();
						s.clear_bank_info();
						wait = 0
					}
					a(e.data.card_info)
				}
			})
		};
		$("#j_popup_card").remove();
		$("body").append(template_render(is_ejzb ? "popup_ejzb_card_pat" : "popup_epay_card_pat", {
			realname: realname,
			for_cert: t
		}));
		$("input[name=card_number]").unbind().bind("input propertychange", function (e) {
			var t = $(this).val().replace(/\s*/g, "");
			if (t != "" && !/^\d+$/.test(t)) {
				return
			}
			h.clear($(this));
			if (!t) {
				$(".card-tip").hide();
				s.clear_bank_info()
			} else {
				$(".card-tip").show();
				var a = "";
				for (var i = 0; i < t.length; ++i) {
					if (i % 4 == 3) {
						a += t[i] + " "
					} else {
						a += t[i]
					}
				}
				$(".card-tip span:first").text(a);
				u(t)
			}
		}).bind("mouseleave focusout", function () {
			$(".card-tip").hide()
		});
		$("#agreement").unbind().bind("click", function (e) {
			if ($(this).hasClass("on")) {
				$(this).removeClass("on");
				$("#bind_card").addClass("i_Btn_disabled")
			} else {
				$(this).addClass("on");
				$("#bind_card").removeClass("i_Btn_disabled")
			}
			e.stopPropagation()
		});
		$("#send_authcode").unbind().bind("click", function () {
			d()
		});
		$("#bind_card").unbind().bind("click", function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return false
			}
			p()
		});
		if (o) {
			sendRequest(o, {
				method: "GET",
				showLoading: false,
				success: function (t) {
					if (t.code == "OK") {
						if (t.data["description"]) {
							description = '<i class="icon icon_bind_discount"></i>' + t.data["description"];
							if (t.data["available_coupons"].length > 0) {
								description += '<i class="icon icon_bind_right" id="bind-tips-more"></i>';
								$(document).off("click", "#bind-tips-more");
								$(document).on("click", "#bind-tips-more", function (e) {
									CommonPopup.showEpayBankCoupons(t.data["available_coupons"]);
									return false
								})
							}
							$(".bind-tips-detail").html(description)
						}
					}
				}
			})
		}
	};
	var get_selected_card = function () {
		var e = $("#bank_card_select .select-list-item.on");
		if (e.length > 0) {
			var t = e.attr("card_id");
			var a = e.attr("mobile");
			var i = e.attr("card_number");
			var n = e.attr("support_withdraw") != undefined ? true : false;
			var r = e.attr("need_verify");
			return {
				card_id: t,
				mobile: a,
				support_withdraw: n,
				card_number: i,
				need_verify: r
			}
		}
	};
	var highlight_card = function () {
		auto_highlight_bank_card = true;
		var e = $("#bank_card_select .selected");
		if (e.find(".bank-name").length > 0) {
			e.addClass("on")
		}
	};
	var cancel_highlight_card = function () {
		auto_highlight_bank_card = false;
		$("#bank_card_select .selected").removeClass("on")
	};
	var init_card_list = function (e, t, n) {
		realname = e;
		max_bank_card_count = t;
		if (!n) {
			n = function () { }
		}
		var r = function (e) {
			if (!e) {
				if ($("#bank_card_select .select-list-item").hasClass("on")) {
					e = $("#bank_card_select .select-list-item.on")
				} else {
					e = $("#bank_card_select .select-list-item").first()
				}
			}
			var t = $("#bank_card_select .selected");
			if (!e || e.hasClass("card-list-add")) {
				var a = format_html('<i class="icon icon_select_bank_small"></i><span class="c_Gray"><%= i18n("please_select_the_bank_account") %></span>');
				t.html(a);
				return
			}
			var i = e.attr("bank_name");
			var n = e.attr("card_number");
			var a = format_html('<i class="icon icon_select_bank_small"></i><span class="bank-name"><%= name %></span><span class="card-number"><%= number %></span>', {
				name: i,
				number: n
			});
			t.html(a);
			if (auto_highlight_bank_card) {
				t.addClass("on")
			}
			if (!e.hasClass("card-list-add")) {
				e.siblings().removeClass("on");
				e.addClass("on")
			}
		};
		var i = function (e) {
			var t = $(template_render("card_detail_pat", {
				card: e
			}));
			$("#bank_card_select .select-list-item:last").before(t);
			$("#bank_card_select").show();
			var a = $("#bank_card_select .select-list-item").length - 1;
			if (max_bank_card_count != null) {
				if (a >= max_bank_card_count) {
					$("#bank_card_select .card-list-add").hide()
				}
				if (a == 1) {
					$("#bank_card_select .card-list-add span").text(i18n("add_the_other_card"))
				}
			}
			r(t)
		};
		var a = function (a) {
			var i = a.attr("card_id");
			sendRequest("/api/asset/delete_card/", {
				data: {
					card_id: i
				},
				method: "post",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.alert({
							type: "error",
							title: i18n("delete_failed"),
							message: e.error,
							hideCancel: true
						});
						return
					}
					a.remove();
					$("#bank_card_select .select-list-item[card_id=" + i + "]").remove();
					if (max_bank_card_count != null) {
						var t = $("#bank_card_select .select-list-item").length - 1;
						if (t < max_bank_card_count) {
							$("#bank_card_select .card-list-add").show()
						} else {
							$("#bank_card_select .card-list-add").hide()
						}
					}
					r();
					n(true)
				}
			})
		};
		$(window).click(function () {
			$("#bank_card_select .select-list").hide()
		});
		$("#bank_card_select .selected, #bank_card_select .icon_expand").click(function (e) {
			e.stopPropagation();
			$("#bank_card_select .select-list").toggle()
		});
		$("#bank_card_select").delegate(".select-list-item", "click", function (e) {
			if ($(this).hasClass("card-list-add")) {
				var t = $("#card-list li").length - 1;
				if (max_bank_card_count != null && t >= max_bank_card_count) {
					Buff.alert({
						type: "error",
						title: i18n("card_limit_is_reached"),
						message: i18n("pmost_can_only_be_bound") + max_bank_card_count + i18n("cardsp"),
						hideCancel: true
					})
				} else {
					var a = function (e) {
						i(e);
						n(true)
					};
					show_bind_card_popup(realname, a)
				}
			} else {
				$("#bank_card_select .select-list-item").removeClass("on");
				$(this).addClass("on");
				$("#bank_card_select .select-list").toggle();
				r($(this));
				n()
			}
		});
		r();
		$("#bank_card_select").delegate(".Btn_delete", "click", function () {
			var e = $(this).parent();
			Buff.alert({
				title: i18n("delete_confirmation"),
				message: i18n("sure_you_want_to_delete"),
				success: function () {
					a(e)
				}
			})
		})
	};
	var init_zhima_cert = function (t) {
		if (!t) {
			t = function () { }
		}
		var r = input_error("j_popup_zhima");
		var e = {
			data: {},
			error_msg: "",
			show_error: true,
			add_text_error: function (e) {
				if (this.show_error) {
					r.show(this.error_msg, e)
				}
			},
			get: function () {
				r.clear_all();
				var e = $("#j_popup_zhima");
				var t = e.find("input[name=realname]");
				var a = t.val().replace(/\s/, "");
				this.error_msg = check_realname(a);
				if (this.error_msg) {
					this.add_text_error(t);
					return undefined
				}
				this.data["realname"] = a;
				var i = e.find("input[name=id_card]");
				var n = i.val().replace(/\s/, "");
				this.error_msg = check_id_card(n);
				if (this.error_msg) {
					this.add_text_error(i);
					return undefined
				}
				this.data["id_card"] = n;
				if (!$("#zhima-cert-allow-check").hasClass("on")) {
					this.error_msg = i18n("please_agree_to_the_service");
					this.add_text_error();
					return undefined
				}
				return true
			}
		};
		var a = function () {
			if (e.get() == undefined) {
				return
			}
			sendRequest("/api/asset/zhima_cert/", {
				data: e.data,
				method: "post",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						if (e.code == "Realname Certed") {
							setTimeout("location.reload();", 2e3)
						}
						return
					}
					var t = e.data["cert_url"];
					if (!t) {
						Buff.toast(i18n("application_authentication_failure_please_contact"), {
							type: "error"
						});
						return
					}
					if (getDeviceOS() != "web") {
						location.href = t;
						return
					}
					$("#zhima-cert-qrcode").empty();
					new QRCode(document.getElementById("zhima-cert-qrcode"), {
						text: t,
						width: 200,
						height: 200
					});
					$("#zhima-cert-qrcode").attr("title", "");
					Popup.show("j_popup_zhima_cert_qrcode");
					var a = e.data["zhima_cert_id"];
					var i = 60;
					wait_query_handler = setInterval(function () {
						i -= 1;
						if (i < 0) {
							clearInterval(wait_query_handler);
							wait_query_handler = undefined;
							console.debug("stop querying state.");
							return
						}
						n(a)
					}, 5e3)
				}
			})
		};
		var n = function (e) {
			sendRequest("/api/asset/zhima_cert/query/", {
				data: {
					zhima_cert_id: e
				},
				method: "get",
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.data["state"] == 2) {
						Buff.toast(i18n("the_authentication_is_successful"), {
							type: "success"
						});
						clearInterval(wait_query_handler);
						wait_query_handler = undefined;
						t()
					}
				}
			})
		};
		$("#j_popup_zhima .i_Btn_main").unbind().bind("click", function () {
			a()
		});
		$("#zhima-cert-allow-check").unbind().bind("click", function () {
			if ($(this).hasClass("on")) {
				$(this).removeClass("on");
				$("#j_popup_zhima .i_Btn_main").addClass("i_Btn_disabled")
			} else {
				$(this).addClass("on");
				$("#j_popup_zhima .i_Btn_main").removeClass("i_Btn_disabled")
			}
			event.stopPropagation()
		})
	};
	var init_manual_cert = function (t) {
		if (!t) {
			t = function () { }
		}
		var e = {
			data: {},
			get: function () {
				var e = $("#j_popup_manual_cert .pic_container").find("img");
				if (e.length < 2) {
					Buff.toast(i18n("manual_cert_upload_pic"), {
						type: "error"
					});
					return
				}
				this.data = {
					pictures: []
				};
				for (var t = 0; t < e.length; t++) {
					var a = e[t];
					this.data.pictures.push($(a).attr("src"))
				}
				return true
			}
		};
		var a = function () {
			if (e.get() == undefined) {
				return
			}
			sendRequest("/api/asset/manual_cert/", {
				showLoading: true,
				data: {
					pictures: e.data.pictures.join(",")
				},
				method: "post",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					Buff.toast(i18n("manual_cert_finish"));
					t && t()
				}
			})
		};
		var n = function (e) {
			if (!(e && e.type.match(/\/(bmp|jpeg|png|gif)$/))) {
				Buff.toast(i18n("error_picture"));
				return false
			}
			return true
		};
		$(document).on("change", "#j_popup_manual_cert .upload_file", function (e) {
			var a = this;
			var i = e.target.files;
			if (!(i && i[0] && n(i[0]))) {
				return
			}
			sendRequest("/api/feedback/gen_token", {
				method: "GET",
				showLoading: true,
				success: function (e) {
					var t = {
						file: i[0],
						upload_url: e.data.url,
						max_file_size: e.data.max_size,
						token: e.data.token,
						callback: function (e) {
							$(a).parent().find("div.pic_container").html("");
							$(a).parent().find("div.pic_container").append(format_html('<img src="<%= url %>" />', {
								url: e.url
							}))
						}
					};
					uploadFile(t)
				}
			})
		});
		$(document).on("click", "#j_popup_manual_cert .i_Btn_main", function () {
			a()
		})
	};
	var show_cert_popup = function (r) {
		CertDlgDecorator().init(function (e, t, a, i) {
			var n = function (e) {
				var t = {
					j_popup_card: "card_bottom_bar",
					j_popup_zhima: "zhima_bottom_bar"
				};
				$("#" + e).find(".popup-foot-normal").remove();
				$("#" + e).find(".auth-type-entry").next().remove();
				$("#" + e).find(".auth-type-entry").remove();
				$("#" + e).append(template_render(t[e]))
			};
			init_card_popup(e, true, r);
			init_zhima_cert(r);
			init_manual_cert(r);
			Popup.show(t);
			n(t);
			a && a(t);
			$(document).off("click", "#change_to_zhima").on("click", "#change_to_zhima", function () {
				Popup.hide();
				Popup.show("j_popup_zhima");
				n("j_popup_zhima");
				a && a("j_popup_zhima")
			});
			$(document).off("click", "#change_to_card").on("click", "#change_to_card", function () {
				Popup.hide();
				Popup.show("j_popup_card");
				n("j_popup_card");
				a && a("j_popup_card")
			});
			$(document).off("click", "#change_to_manual").on("click", "#change_to_manual", function () {
				if (i == "PROCESSING") {
					Buff.toast(i18n("manual_cert_processing"));
					return
				}
				Popup.hide();
				Popup.show("j_popup_manual_cert")
			});
			$(document).off("click", "#change_to_kyc").on("click", "#change_to_kyc", function () {
				sendRequest("/api/asset/zignsec/get_url/", {
					method: "post",
					dataType: "json",
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error, {
								type: "error"
							});
							return
						}
						openPageOnNewTab(e.data.redirect_url);
						Popup.hide()
					}
				})
			})
		})
	};
	var show_bind_card_popup = function (e, i, n) {
		if (e) {
			init_card_popup(e, false, i, n);
			Popup.show("j_popup_card")
		} else {
			sendRequest("/api/asset/get_realname/v2/", {
				method: "get",
				dataType: "json",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					var t = e.data;
					var a = {};
					if (t.realname && t.id_card) {
						a = {
							name: t.realname,
							id_card: t.id_card
						}
					}
					show_bind_card_popup(a, i, n)
				}
			})
		}
	};
	var show_authcode_popup = function (config) {
		var mobile = config.mobile;
		var send_authcode_function = config.send_authcode_function;
		var verify_authcode_function = config.verify_authcode_function;
		var cancel_function = config.cancel_function;
		var content = config.content;
		var authcode_length = config.authcode_length || 6;
		var popup_id = config.popup_id || "j_popup_authcode";
		var wait_time = 60;
		var $j_popup_authcode = $("#" + popup_id);
		var $authcode = $j_popup_authcode.find("input[name=authcode]");
		eval("var reg = /^\\d{" + authcode_length + "}$/;");
		$authcode.unbind("input").bind("input", function () {
			var e = $(this).val();
			if (reg.test(e)) {
				$j_popup_authcode.find("#verify_authcode").removeClass("i_Btn_disabled")
			} else {
				$j_popup_authcode.find("#verify_authcode").addClass("i_Btn_disabled")
			}
		});
		$j_popup_authcode.find("#resend_authcode").unbind("click").bind("click", function (e) {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			send_authcode_function(function () {
				countdown($j_popup_authcode.find("#resend_authcode"), wait_time)
			}, true);
			e.stopPropagation()
		});
		$j_popup_authcode.find("#verify_authcode").unbind("click").bind("click", function (e) {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			var t = $authcode.val();
			if (!reg.test(t)) {
				Buff.toast(i18n("please_enter_the_verification_code"), {
					type: "warning"
				});
				return
			}
			verify_authcode_function(t, function () {
				wait = wait == wait_time ? wait_time : 0;
				Popup.hide();
				countdown_handler = undefined;
				$j_popup_authcode.find("#verify_authcode").addClass("i_Btn_disabled");
				e.stopPropagation()
			})
		});
		$j_popup_authcode.find(".popup-close").unbind("click").bind("click", function () {
			wait = wait == wait_time ? wait_time : 0;
			Popup.hide();
			$j_popup_authcode.find("#verify_authcode").addClass("i_Btn_disabled");
			if (cancel_function) {
				cancel_function()
			}
		});
		$authcode.val("");
		if (content) {
			$j_popup_authcode.find(".popup-desc p:first").text(content)
		} else {
			$j_popup_authcode.find("#mobile").text(mobile)
		}
		Popup.show(popup_id);
		if (countdown_handler === undefined) {
			countdown($j_popup_authcode.find("#resend_authcode"), wait_time)
		}
	};
	return {
		init_card_popup: init_card_popup,
		show_cert_popup: show_cert_popup,
		show_bind_card_popup: show_bind_card_popup,
		show_authcode_popup: show_authcode_popup,
		init_manual_cert: init_manual_cert,
		init_card_list: init_card_list,
		get_selected_card: get_selected_card,
		highlight_card: highlight_card,
		cancel_highlight_card: cancel_highlight_card
	}
}();
var Recharge = function () {
	var n = 5;
	var r = 2e4;
	var o;
	var s = 2;
	var t = 4;
	var c = 10;
	var _ = 13;
	var l = 14;
	var u = function (e, t) {
		sendRequest("/api/asset/recharge/fee/", {
			method: "get",
			data: {
				amount: e,
				pay_method: t
			},
			showLoading: false,
			success: function (e) {
				var t = e.data;
				$("#actual_pay").html(formatPriceNormalYuan(t.amount, true));
				$("#total_fee").html(formatPriceNormalYuan(t.fee, true))
			}
		})
	};
	var a = {
		data: {},
		error_msg: "",
		get: function () {
			var e = false;
			this.error_msg = "";
			var t = $("#amount_list").attr("value");
			if (t == "custom" || t === undefined || t == "") {
				t = parseFloat($("#amount_list input[type=text][name=amount]").val().replace(/[^0-9\.]/g, ""))
			} else {
				$("input[type=text][name=amount]").val("")
			}
			if (isNaN(t)) {
				t = 0
			}
			if (t) {
				this.data["amount"] = t
			} else {
				e = true;
				this.error_msg = i18n("please_enter_or_select_the");
				return undefined
			}
			var a = $("#recharge_method li.on").attr("value");
			if (a) {
				this.data["pay_method"] = parseInt(a)
			} else {
				e = true;
				this.error_msg = i18n("please_select_recharge_way\n");
				return undefined
			}
			u(this.data["amount"], this.data["pay_method"]);
			var i = false;
			if (a == s) {
				i = true
			}
			if (i) {
				var n = bindCard.get_selected_card();
				if (n) {
					this.data["card_id"] = n.card_id;
					this.data["mobile"] = n.mobile
				} else {
					e = true;
					this.error_msg = i18n("please_select_the_card\n");
					return undefined
				}
			}
			if (e) {
				return undefined
			}
			return true
		}
	};
	var e = function () {
		if (a.get() == undefined) {
			$("#send_recharge_authcode").addClass("i_Btn_disabled").removeClass("i_Btn_main");
			bindCard.cancel_highlight_card()
		} else {
			$("#send_recharge_authcode").removeClass("i_Btn_disabled").addClass("i_Btn_main");
			bindCard.highlight_card()
		}
	};
	var d = e;
	var p = function (e, t) {
		if (e == undefined) {
			e = 1
		}
		var a = {
			page_num: e
		};
		var i = getDatepickerTimestampRange($("#j_select_log_time_range"));
		a["start_time"] = i.start_time;
		a["end_time"] = i.end_time;
		sendRequest("/api/asset/recharge_log/", {
			data: a,
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				var t = e.data;
				if (t.items.length == 0) {
					$("#recharge_logs .nodata").show();
					$("#recharge_logs table").hide()
				} else {
					$("#recharge_logs .nodata").hide();
					var a = $("#recharge_logs .list_tb");
					a.find('tr:not(":first")').remove();
					a.append(template_render("recharge_log_pat", {
						recharge_logs: t["items"]
					}));
					a.show()
				}
				t.onPageClick = p;
				renderPagination(t);
				renderTimeRangeTips($("#recharge_logs .pager"));
				m()
			},
			error: function () { }
		})
	};
	var f;
	var m = function (a) {
		var e = "/api/asset/recharge_state_check/?";
		if (a != undefined) {
			e += "recharge_id=" + a
		} else {
			var t = $('#recharge_logs tr[state="CONFIRMING"]');
			if (t.length == 0) {
				return
			}
			var i = [];
			t.each(function () {
				i.push($(this).attr("recharge_id"))
			});
			e += "recharge_id=" + i.join()
		}
		sendRequest(e, {
			method: "get",
			dataType: "json",
			showLoading: false,
			showError: false,
			success: function (e) {
				if (e.code == "OK") {
					for (var t in e.data.items) {
						show_brief_asset();
						break
					}
					if (a && e.data.items.hasOwnProperty(a) && o) {
						if (e.data.items[a].state[0] == "CONFIRMING") {
							return
						}
						clearInterval(o);
						o = undefined;
						Popup.hide();
						Buff.alert({
							type: "success",
							title: i18n("recharge_successful"),
							message: i18n("recharge_yuan") + e.data.items[a].amount + i18n("the_current_balance_of_dollar") + e.data.cash_amount,
							hideCancel: true
						});
						m()
					}
					for (var t in e.data.items) {
						$("#recharge_logs tr[recharge_id=" + t + "]").replaceWith(template_render("recharge_log_pat", {
							recharge_logs: [e.data.items[t]]
						}))
					}
				}
				if (a === undefined) {
					f = setTimeout(m, 5e3)
				}
			}
		})
	};
	var h = function () {
		if (a.get() == undefined) {
			Buff.toast(a.error_msg);
			return
		}
		var e = a.data;
		var t = e.amount;
		if (t) {
			if (!$.isNumeric(t)) {
				Buff.alert({
					type: "error",
					title: i18n("recharge_failed"),
					message: i18n("the_amount_of_recharge_need"),
					hideCancel: true
				});
				return
			}
			if (t > r) {
				Buff.alert({
					type: "error",
					title: i18n("recharge_failed"),
					message: i18n("the_maximum_allowable_amount_of") + r + i18n("yuan"),
					hideCancel: true
				});
				return
			}
			if (t < n) {
				Buff.alert({
					type: "error",
					title: i18n("recharge_failed"),
					message: i18n("the_minimum_allowable_amount_of") + n + i18n("yuan"),
					hideCancel: true
				});
				return
			}
		}
		return e
	};
	var g = function () {
		var a = function (e) {
			if (e == s) {
				y()
			} else if ([l, _, t, c].indexOf(e) != -1) {
				w()
			}
		};
		var i = h();
		if (i == undefined) {
			return
		}
		sendRequest("/api/asset/recharge/preview/", {
			data: i,
			method: "POST",
			dataType: "json",
			ignoreCode: ["Recharge Repeat"],
			success: function (e) {
				if (e.code != "OK") {
					var t = e.confirm_entry;
					if (t) {
						Buff.alert({
							type: "warning",
							title: e.confirm_entry.title,
							message: e.confirm_entry.message,
							cancelText: e.confirm_entry.button_cancel,
							confirmText: e.confirm_entry.button_noted,
							success: function () {
								a(i.pay_method)
							}
						})
					} else {
						Buff.toast(e.error)
					}
					return
				}
				a(i.pay_method)
			}
		})
	};
	var v = undefined;
	var y = function (t, e) {
		var a = h();
		if (a == undefined) {
			return
		}
		var i = function () {
			bindCard.show_authcode_popup({
				mobile: a.mobile,
				send_authcode_function: y,
				verify_authcode_function: b
			})
		};
		if (!e) {
			v = undefined
		}
		sendRequest("/api/asset/recharge/", {
			data: a,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.alert({
						type: "error",
						title: i18n("send_a_verification_code_failed"),
						message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busy_please") : e.error,
						hideCancel: true
					});
					return
				}
				if (v === undefined) {
					i()
				}
				v = e.data.recharge_id;
				if (t) {
					t()
				}
			}
		})
	};
	var b = function (e, n) {
		if (!v || !e) {
			Buff.toast(i18n("please_get_a_verification_code"));
			return
		}
		sendRequest("/api/asset/recharge_verify/", {
			data: {
				authcode: e,
				recharge_id: v
			},
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					Buff.alert({
						type: "error",
						title: "支付失败",
						message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busy_you") : e.error,
						hideCancel: true
					});
					return
				}
				$("#amount_list li.on").removeClass("on");
				$("input[type=text][name=amount]").val("");
				$("#recharge_amount").text("");
				var t = v;
				v = undefined;
				d();
				if (n) {
					n()
				}
				p();
				var a = Buff.alert({
					title: i18n("being_prepaid_in"),
					message: i18n("please_be_patient"),
					hideCancel: true,
					hideConfirm: true
				});
				if (f) {
					clearTimeout(f)
				}
				var i = 0;
				o = setInterval(function () {
					i += 1;
					if (i <= 10) {
						$("#" + a + " p").text(i18n("please_wait_patiently_have_been") + i + "s...");
						m(t)
					} else {
						clearInterval(o);
						o = undefined;
						Popup.hide();
						Buff.alert({
							title: i18n("the_system_is_busy"),
							message: i18n("you_can_recharge_in_a"),
							hideCancel: true
						});
						m()
					}
				}, 1e3)
			}
		})
	};
	var w = function () {
		var e = h();
		if (e == undefined) {
			return
		}
		var t = "/api/asset/recharge_alipay_page/";
		if (e.pay_method == c) {
			t = "/api/asset/recharge_pcredit_page/"
		}
		if (e.pay_method == _) {
			t = "/api/asset/recharge_paypal_page/"
		}
		if (e.pay_method == l) {
			t = "/api/asset/recharge_cnp_page/"
		}
		sendRequest(t, {
			data: e,
			method: "post",
			dataType: "json",
			timeout: 3e4,
			success: function (e) {
				if (e.code != "OK") {
					Buff.alert({
						type: "error",
						title: i18n("recharge_failed"),
						message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busy_please") : e.error,
						hideCancel: true
					});
					return
				}
				location.href = e.data.redirect_url
			}
		})
	};
	var i = function (e) {
		r = e.amount_max;
		n = e.amount_min;
		var a = "input[type=text][name=amount]";
		$("#amount_list").bind("change", function () {
			var e = $(this).find("span.on").attr("value");
			if (e != undefined && e != "custom") {
				$("#amount_list").attr("value", "custom");
				$(a).val(e)
			}
			d()
		});
		var i = false;
		$(a).bind("change paste keyup", function (e) {
			if (parseFloat($(this).val()) > r) {
				if (!i) {
					$(this).unbind("keypress").bind("keypress", function () {
						return false
					});
					$(this).val(r);
					i = true
				}
			} else if (i) {
				var t = parseFloat($(this).val());
				if (isNaN(t) || isTextSelected($(a)[0]) || t < r) {
					$(this).unbind("keypress");
					Buff.pricePatten(a);
					i = false
				}
			}
			d()
		}).bind("mouseover", function (e) {
			var t = $("#amount_list span.on");
			if (t.attr("value") == "custom") {
				return false
			}
			t.removeClass("on")
		});
		Buff.pricePatten(a);
		$(a).focus().click();
		$("#recharge_method li").click(function () {
			var e = parseInt($(this).attr("value"));
			if (!e) {
				Buff.toast($(this).attr("title"), {
					type: "warning"
				});
				return
			}
			$(this).parent("ul").find("li").removeClass("on");
			$(this).addClass("on");
			if (e == s) {
				$("#recharge_bank_cards").show();
				$("#notice-alipay").hide();
				$("#notice-pcredit").hide();
				$("#notice-bank").show();
				$("#service_fee").hide()
			} else {
				$("#recharge_bank_cards").hide();
				if (e == t) {
					$("#notice-alipay").show();
					$("#notice-pcredit").hide();
					$("#service_fee").hide()
				} else if (e == c) {
					$("#notice-pcredit").show();
					$("#notice-alipay").hide();
					$("#service_fee").show()
				}
				$("#notice-bank").hide()
			}
			d()
		});
		$("#recharge_method li:first").click();
		$("#send_recharge_authcode").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return false
			}
			g()
		});
		p();
		d();
		bindCard.init_card_list(e.realname, e.max_card_count, d);
		$("body").on("change", "#j_select_log_time_range", function () {
			p()
		})
	};
	return {
		init: i,
		enable_or_disable_button: d
	}
}();
var Withdraw = function () {
	var e = 10;
	var t = 1e4;
	var o = {
		min: e,
		max: t
	};
	var d = {};
	var a = null;
	var i = 0;
	var n = null;
	var s = false;
	var c = null;
	var p = {
		alipay: {
			amount_range: o
		},
		epay: {
			amount_range: o
		},
		together: {
			amount_range: o
		}
	};
	var f = function (e, t, a) {
		var i = function (e, t, a) {
			var i = $("#alipay_received");
			if (e > 0) {
				i.find("span").html(formatPriceNormalYuan(e, true));
				i.css("visibility", "visible")
			} else {
				i.css("visibility", "hidden")
			}
			var n = $("#epay_received");
			if (t > 0) {
				n.find("span").html(formatPriceNormalYuan(t, true));
				n.css("visibility", "visible")
			} else {
				n.css("visibility", "hidden")
			}
			$("#total_fee").html(formatPriceNormalYuan(a, true))
		};
		if (e > 0 && e < p["alipay"]["amount_range"]["min"] || t > 0 && t < p["epay"]["amount_range"]["min"]) {
			return
		}
		sendRequest("/api/asset/withdraw_together/fee/", {
			method: "get",
			data: {
				epay_amount: t,
				alipay_amount: e,
				cdkey_id: a
			},
			showLoading: false,
			success: function (e) {
				var t = e.data;
				i(t.alipay.real_amount, t.epay.real_amount, t.total.fee);
				c = t
			}
		})
	};
	var _ = function (e) {
		if (e === undefined) {
			e = m(true)
		}
		var t = e.epay_amount;
		var a = e.alipay_amount;
		var i = true;
		var n = true;
		var r = false;
		var o = false;
		var s = $("#epay_received");
		var c = $("#epay_amount_error");
		var _ = $("#alipay_received");
		var l = $("#alipay_amount_error");
		if (t > 0 && t < p["epay"]["amount_range"]["min"]) {
			c.text(i18n("less_than") + p["epay"]["amount_range"]["min"] + i18n("yuan"))
		} else if (t > d.epay_amount) {
			c.text(i18n("greater_than_the_extraction_amount"))
		} else {
			i = false
		}
		if (i) {
			bindCard.cancel_highlight_card();
			s.css("visibility", "hidden");
			s.parent().removeClass("on");
			c.css("visibility", "visible")
		} else {
			c.css("visibility", "hidden");
			if (t > 0) {
				s.parent().addClass("on");
				bindCard.highlight_card();
				o = true
			} else {
				s.parent().removeClass("on");
				bindCard.cancel_highlight_card()
			}
		}
		if (a > 0 && a < p["alipay"]["amount_range"]["min"]) {
			l.text(i18n("less_than") + p["alipay"]["amount_range"]["min"] + i18n("yuan"))
		} else if (a > d.alipay_amount) {
			l.text(i18n("greater_than_the_extraction_amount"))
		} else {
			n = false
		}
		if (n) {
			C();
			_.css("visibility", "hidden");
			_.parent().removeClass("on");
			l.css("visibility", "visible")
		} else {
			l.css("visibility", "hidden");
			if (a > 0) {
				_.parent().addClass("on");
				x();
				r = true
			} else {
				_.parent().removeClass("on");
				C()
			}
		}
		if (!n && !i) {
			f(e["alipay_amount"], e["epay_amount"], e["cdkey_id"])
		}
		var u = false;
		if (a == 0 && t == 0 || n || i) {
			u = true
		} else if (a > 0 && (!e["alipay_account"] && !e["alipay_account_id"])) {
			u = true
		} else if (t > 0 && !e["card_id"]) {
			u = true
		}
		if (u) {
			$("#withdraw_btn").removeClass("i_Btn_main").addClass("i_Btn_disabled")
		} else {
			$("#withdraw_btn").removeClass("i_Btn_disabled").addClass("i_Btn_main")
		}
		if (r && o) {
			$("#remain_withdraw_count_today_span").show();
			$("#remain_withdraw_count_today").text(i18n("remain_withdrawal_count_today") + " " + p["together"]["remain_count"])
		} else if (r) {
			$("#remain_withdraw_count_today_span").show();
			$("#remain_withdraw_count_today").text(i18n("remain_withdrawal_count_today") + " " + p["alipay"]["remain_count"])
		} else if (o) {
			$("#remain_withdraw_count_today_span").show();
			$("#remain_withdraw_count_today").text(i18n("remain_withdrawal_count_today") + " " + p["epay"]["remain_count"])
		} else {
			$("#remain_withdraw_count_today_span").hide();
			$("#remain_withdraw_count_today").text("")
		}
		return !u
	};
	var m = function (e, t) {
		var a = {};
		var i = 0;
		var n = 0;
		$("input[name=alipay_amount],input[name=epay_amount]").each(function () {
			var e = $(this).val();
			e = e.replace(/[^0-9\.]/g, "");
			if (e) {
				e = parseFloat(e)
			} else {
				e = 0
			}
			if ($(this).attr("name") == "alipay_amount") {
				i = e
			} else {
				n = e
			}
		});
		a["alipay_amount"] = i;
		a["epay_amount"] = n;
		var r = bindCard.get_selected_card();
		if (r) {
			a["card_id"] = r.card_id
		}
		var o = T();
		if (o) {
			a["alipay_account"] = o.account;
			a["alipay_account_id"] = o.account_id
		}
		var s = B();
		if (s) {
			a["cdkey_id"] = s["cdkey_id"]
		}
		if (e) {
			return a
		}
		if (t) {
			if (_(a)) {
				return a
			}
			return undefined
		}
		setTimeout(_, 200)
	};
	var r = function () {
		$("input[name=alipay_amount],input[name=epay_amount]").each(function () {
			$(this).val("")
		});
		_()
	};
	var l = function () {
		return m(false, true)
	};
	var u = function () {
		m(false, false)
	};
	var h = u;
	var g = function (e) {
		if (e.epay_amount > 0 && e.epay_amount < p["epay"]["amount_range"]["min"]) {
			Buff.alert({
				type: "error",
				title: i18n("withdrawal_failure"),
				message: i18n("withdrawal_minimum_amount_is") + p["epay"]["amount_range"]["min"] + i18n("yuan"),
				hideCancel: true
			});
			return false
		}
		if (e.alipay_amount > 0 && e.alipay_amount < p["alipay"]["amount_range"]["min"]) {
			Buff.alert({
				type: "error",
				title: i18n("withdrawal_failure"),
				message: i18n("withdrawal_minimum_amount_is") + p["alipay"]["amount_range"]["min"] + i18n("yuan"),
				hideCancel: true
			});
			return false
		}
		if (e.epay_amount + e.alipay_amount < p["together"]["amount_range"]["min"]) {
			Buff.alert({
				type: "error",
				title: i18n("withdrawal_failure"),
				message: i18n("withdrawal_minimum_amount_is") + p["together"]["amount_range"]["min"] + i18n("yuan"),
				hideCancel: true
			});
			return false
		}
		if (e.epay_amount + e.alipay_amount > p["together"]["amount_range"]["max"]) {
			Buff.alert({
				type: "error",
				title: i18n("withdrawal_failure"),
				message: i18n("withdraw_the_maximum_amount_of") + p["together"]["amount_range"]["max"] + i18n("yuan"),
				hideCancel: true
			});
			return false
		}
		return true
	};
	var v = false;
	var y = function (t, e) {
		var a = l();
		var i = function (e) {
			bindCard.show_authcode_popup({
				send_authcode_function: y,
				verify_authcode_function: b,
				content: i18n("to_guarantee_your_safety_of") + e + i18n("receive_sms_verification_code"),
				authcode_length: 4
			})
		};
		if (!e) {
			v = false
		}
		sendRequest("/api/asset/withdraw_together/authcode/", {
			data: a,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					if (e.code == "Withdraw Alipay Not Enough") {
						Buff.alert({
							type: "error",
							title: i18n("the_lack_of_balance"),
							message: i18n("the_account_can_be_withdrawal"),
							hideCancel: true
						})
					} else if (e.code == "Withdraw Cash Not Enough") {
						Buff.alert({
							type: "error",
							title: i18n("the_lack_of_balance"),
							message: i18n("account_can_be_withdraw_the"),
							hideCancel: true
						})
					} else {
						Buff.alert({
							type: "error",
							title: i18n("send_a_verification_code_failed"),
							message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busy_please") : e.error,
							hideCancel: true
						})
					}
					return
				}
				if (!v) {
					i(e.data.mobile)
				}
				v = true;
				if (t) {
					t()
				}
			}
		})
	};
	var b = function (e, t) {
		var a = l();
		a["authcode"] = e;
		sendRequest("/api/asset/withdraw_together/verify/", {
			data: a,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code == "Withdraw Need Authcode") {
					y();
					return
				}
				if (e.code != "OK") {
					Buff.alert({
						type: "error",
						title: i18n("withdrawal_failure"),
						message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busyplease_try") : e.error,
						hideCancel: true
					});
					return
				}
				r();
				if (t) {
					t()
				}
				w();
				show_brief_asset();
				Buff.alert({
					title: i18n("withdrawal_has_been_filed"),
					message: i18n("withdraw_cash_price_of_dollar") + (a.alipay_amount + a.epay_amount).toFixed(2) + i18n("is_being_processed_you_can"),
					hideCancel: true,
					success: function () {
						document.location.reload()
					}
				})
			}
		})
	};
	var w = function (e, t) {
		if (e == undefined) {
			e = 1
		}
		var a = {
			page_num: e
		};
		var i = getDatepickerTimestampRange($("#j_select_log_time_range"));
		a["start_time"] = i.start_time;
		a["end_time"] = i.end_time;
		sendRequest("/api/asset/withdraw_log/", {
			data: a,
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				var t = e.data;
				if (t.items.length == 0) {
					$("#withdraw_logs table").hide();
					$("#withdraw_logs .nodata").show()
				} else {
					$("#withdraw_logs .nodata").hide();
					var a = $("#withdraw_logs .list_tb");
					a.find('tr:not(":first")').remove();
					a.append(template_render("withdraw_log_pat", {
						withdraw_logs: t["items"]
					}));
					a.show()
				}
				t.onPageClick = w;
				renderPagination(t);
				renderTimeRangeTips($("#withdraw_logs .pager"));
				k()
			},
			error: function () { }
		})
	};
	var k = function () {
		var e = $('#withdraw_logs tr[state="CONFIRM"], #withdraw_logs tr[state="CREATED"]');
		if (e.length == 0) {
			return
		}
		var t = "/api/asset/withdraw_state_check/?";
		var a = [];
		e.each(function () {
			a.push($(this).attr("withdraw_id"))
		});
		t += "withdraw_id=" + a.join();
		sendRequest(t, {
			method: "get",
			dataType: "json",
			showLoading: false,
			showError: false,
			success: function (e) {
				if (e.code != "OK") {
					setTimeout(k, 3e4);
					return
				}
				for (var t in e.data.items) {
					$("#withdraw_logs tr[withdraw_id=" + t + "]").replaceWith(template_render("withdraw_log_pat", {
						withdraw_logs: [e.data.items[t]]
					}))
				}
				setTimeout(k, 3e4)
			}
		})
	};
	var x = function () {
		s = true;
		var e = $("#alipay_account_select .selected");
		if (e.find(".bank-name").length > 0) {
			e.addClass("on")
		}
	};
	var C = function () {
		s = false;
		$("#alipay_account_select .selected").removeClass("on")
	};
	var T = function () {
		var e = $("#alipay_account_select .select-list-item.on");
		if (e.length > 0) {
			var t = e.attr("account");
			var a = e.attr("account_id");
			return {
				account: t,
				account_id: a
			}
		}
	};
	var P = function () {
		var a = function (e) {
			if (!e) {
				if ($("#alipay_account_select .select-list-item").hasClass("on")) {
					e = $("#alipay_account_select .select-list-item.on")
				} else {
					e = $("#alipay_account_select .select-list-item").first()
				}
			}
			if (!e || e.hasClass("card-list-add")) {
				return
			}
			var t = e.attr("account");
			var a = e.attr("account_id");
			var i = format_html('<i class="icon icon_select_alipay_small"></i><span class="bank-name"><%= account %></span>', {
				account: t
			});
			var n = $("#alipay_account_select .selected");
			n.html(i);
			if (s) {
				n.addClass("on")
			}
			if (!e.hasClass("card-list-add")) {
				e.siblings().removeClass("on");
				e.addClass("on")
			}
			h()
		};
		$(window).click(function () {
			$("#alipay_account_select .select-list").hide()
		});
		$("#alipay_account_select .selected, #alipay_account_select .icon_expand").click(function (e) {
			e.stopPropagation();
			$("#alipay_account_select .select-list").toggle()
		});
		$("#alipay_account_select").delegate(".select-list-item", "click", function (e) {
			if ($(this).hasClass("card-list-add")) {
				Popup.show("j_popup_bind_alipay_account")
			} else {
				$("#alipay_account_select .select-list").toggle();
				a($(this));
				h()
			}
		});
		a();
		var i = $('<div class="select-list-item"></div>');
		var n = $('<i class="icon icon_select_alipay_small"></i>');
		var r = $('<span class="bank-name"></span>');
		$("#bind_alipay_account_verify_btn").click(function () {
			var e = $("#j_popup_bind_alipay_account input[name=alipay_account]");
			var t = e.val().trim();
			if (!t) {
				e.parent().addClass("i_Text_error");
				return
			}
			e.parent().removeClass("i_Text_error");
			e.val("");
			r.text(t);
			i.attr("account", t);
			i.empty();
			i.append(n).append(r);
			$("#alipay_account_select .card-list-add").before(i);
			a(i);
			i.hide();
			Popup.hide()
		})
	};
	var B = function () {
		var e = $("#coupon_select .select-list-item.on");
		if (e.length > 0) {
			return {
				cdkey_id: e.attr("cdkey_id")
			}
		}
	};
	var j = function () {
		sendRequest("/api/activity/coupon/my/?coupon_type=withdraw&state=unuse&page_size=15", {
			method: "get",
			dataType: "json",
			showLoading: false,
			showError: false,
			success: function (e) {
				var t = [];
				if (e.code == "OK") {
					t = e.data.items
				}
				$("#coupon_select .select-list").append(template_render("coupons_pat", {
					coupons: t
				}));
				$(window).click(function () {
					$("#coupon_select .select-list").hide()
				});
				$("#coupon_select .selected, #coupon_select .icon_expand").click(function (e) {
					e.stopPropagation();
					$("#coupon_select .select-list").toggle()
				});
				$("#coupon_select").delegate(".select-list-item", "click", function (e) {
					if ($(this).hasClass("scope-none")) {
						return
					}
					if ($(this).find(".pay-tip").length > 0) {
						$(this).find(".pay-tip").remove();
						$(this).removeClass("on");
						$("#coupon_select .selected .coupon-name").addClass("c_Gray").text(i18n("please_select_from_the_available"))
					} else {
						$(this).siblings().each(function () {
							$(this).find(".pay-tip").remove();
							$(this).removeClass("on")
						});
						$(this).append($('<span class="pay-tip c_Blue f_12px">' + i18n("has_been_used") + "</span>"));
						$(this).addClass("on");
						$("#coupon_select .selected .coupon-name").removeClass("c_Gray").text($(this).find(".coupon-name").text());
						$("#coupon_select .select-list").toggle()
					}
					_()
				})
			}
		})
	};
	var S = function (i) {
		d = {
			alipay_amount: i.alipay_amount,
			epay_amount: i.epay_amount
		};
		a = i.realname || {};
		p = Object.assign(p, i.withdraw_base_info);
		var n = "input[name=alipay_amount], input[name=epay_amount]";
		var r = {
			alipay_amount: p["alipay"]["amount_range"]["max"],
			epay_amount: p["epay"]["amount_range"]["max"]
		};
		$(n).each(function () {
			var a = false;
			$(this).bind("change paste keyup", function (e) {
				max_amount = r[this.name] || o["max"];
				if (parseFloat($(this).val()) > max_amount) {
					if (!a) {
						$(this).unbind("keypress").bind("keypress", function () {
							return false
						});
						$(this).val(max_amount);
						a = true
					}
				} else if (a) {
					var t = parseFloat($(this).val());
					if (isNaN(t) || isTextSelected($(n)[0]) || t < max_amount) {
						$(this).unbind("keypress");
						Buff.pricePatten(n);
						a = false
					}
				}
				h()
			})
		});
		Buff.pricePatten(n);
		$(document).on("input", "input", function () {
			$(this).removeClass("i_Text_error")
		});
		P();
		j();
		w();
		$("body").on("change", "#j_select_log_time_range", function () {
			w()
		});
		$("#withdraw_btn").click(function () {
			var e = l();
			if (e == undefined || !g(e)) {
				return
			}
			var t = function () {
				if (i.withdraw_need_authcode) {
					y()
				} else {
					b()
				}
			};
			if (c) {
				var a = [c.total.amount, c.total.fee, c.alipay.real_amount, c.epay.real_amount];
				$("#j_withdraw_confirm .popup-desc strong").each(function (e) {
					$(this).text(a[e])
				});
				$("#j_withdraw_confirm .i_Btn_main").unbind().bind("click", function () {
					t();
					Popup.hide()
				});
				Popup.show("j_withdraw_confirm")
			} else {
				t()
			}
		});
		bindCard.init_card_list(a, i.max_card_count, h);
		if ($.isEmptyObject(a)) {
			$(".card-list-add").click(function () {
				userProfile().init();
				is_foreigner = i.is_foreigner;
				if (is_foreigner) {
					Popup.show("j_popup_idcard_inter")
				} else {
					bindCard.show_cert_popup(function () {
						document.location.reload()
					})
				}
			})
		}
	};
	return {
		init: S,
		enable_or_disable_button: h
	}
}();
var Withdraw_V2 = function () {
	var s = 10;
	var o = 5e4;
	var c = {};
	var _ = null;
	var l = null;
	var u = null;
	var d = function (e, t) {
		var a = function (e, t) {
			var a = $("#epay_received");
			if (e > 0) {
				a.find("span").html(formatPriceNormalYuan(e, true));
				a.css("visibility", "visible")
			} else {
				a.css("visibility", "hidden")
			}
			$("#total_fee").html(formatPriceNormalYuan(t, true))
		};
		if (e > 0 && e < s) {
			return
		}
		sendRequest("/api/asset/withdraw_merge/fee", {
			method: "get",
			data: {
				amount: e,
				cdkey_id: t
			},
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					console.log(e.error);
					return
				}
				var t = e.data;
				a(t.real_amount, t.fee);
				l = t
			}
		})
	};
	var r = function (e) {
		if (e === undefined) {
			e = p(true)
		}
		var t = e.epay_amount;
		var a = true;
		var i = false;
		var n = $("#epay_received");
		var r = $("#epay_amount_error");
		if (t > 0 && t < s) {
			r.text(i18n("less_than") + s + i18n("yuan"))
		} else if (t > c.epay_amount) {
			r.text(i18n("greater_than_the_extraction_amount"))
		} else {
			a = false
		}
		if (a) {
			bindCard.cancel_highlight_card();
			n.css("visibility", "hidden");
			n.parent().removeClass("on");
			r.css("visibility", "visible")
		} else {
			r.css("visibility", "hidden");
			if (t > 0) {
				n.parent().addClass("on");
				bindCard.highlight_card();
				i = true
			} else {
				n.parent().removeClass("on");
				bindCard.cancel_highlight_card()
			}
		}
		if (!a) {
			d(t, e["cdkey_id"])
		}
		var o = false;
		if (t == 0 || a || t > 0 && !e["card_id"]) {
			o = true
		}
		if (o) {
			$("#withdraw_btn").removeClass("i_Btn_main").addClass("i_Btn_disabled")
		} else {
			$("#withdraw_btn").removeClass("i_Btn_disabled").addClass("i_Btn_main")
		}
		if (i) {
			$("#remain_withdraw_count_today_span").show();
			$("#remain_withdraw_count_today").text(i18n("remain_withdrawal_count_today") + " " + u)
		} else {
			$("#remain_withdraw_count_today_span").hide();
			$("#remain_withdraw_count_today").text("")
		}
		return !o
	};
	var p = function (e, t) {
		var a = {};
		$("input[name=epay_amount]").each(function () {
			var e = $(this).val();
			e = e.replace(/[^0-9\.]/g, "");
			if (e) {
				e = parseFloat(e)
			} else {
				e = 0
			}
			a["amount"] = e;
			a["epay_amount"] = e
		});
		var i = bindCard.get_selected_card();
		if (i) {
			a["card_id"] = i.card_id
		}
		var n = w();
		if (n) {
			a["cdkey_id"] = n["cdkey_id"]
		}
		if (e) {
			return a
		}
		if (t) {
			if (r(a)) {
				return a
			}
			return undefined
		}
		setTimeout(r, 200)
	};
	var i = function () {
		$("input[name=epay_amount]").each(function () {
			$(this).val("")
		});
		r()
	};
	var f = function () {
		return p(false, true)
	};
	var e = function () {
		p(false, false)
	};
	var m = e;
	var h = function (e) {
		if (e.epay_amount > 0 && e.epay_amount < s) {
			Buff.alert({
				type: "error",
				title: i18n("withdrawal_failure"),
				message: i18n("withdrawal_minimum_amount_is") + s + i18n("yuan"),
				hideCancel: true
			});
			return false
		}
		if (e.epay_amount > o) {
			Buff.alert({
				type: "error",
				title: i18n("withdrawal_failure"),
				message: i18n("withdraw_the_maximum_amount_of") + o + i18n("yuan"),
				hideCancel: true
			});
			return false
		}
		return true
	};
	var n = false;
	var g = function (t, e) {
		var a = f();
		var i = function (e) {
			bindCard.show_authcode_popup({
				send_authcode_function: g,
				verify_authcode_function: v,
				content: i18n("to_guarantee_your_safety_of") + e + i18n("receive_sms_verification_code"),
				authcode_length: 4
			})
		};
		if (!e) {
			n = false
		}
		sendRequest("/api/asset/withdraw_merge/authcode/", {
			data: a,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					if (e.code == "Withdraw Alipay Not Enough") {
						Buff.alert({
							type: "error",
							title: i18n("the_lack_of_balance"),
							message: i18n("the_account_can_be_withdrawal"),
							hideCancel: true
						})
					} else if (e.code == "Withdraw Cash Not Enough") {
						Buff.alert({
							type: "error",
							title: i18n("the_lack_of_balance"),
							message: i18n("account_can_be_withdraw_the"),
							hideCancel: true
						})
					} else {
						Buff.alert({
							type: "error",
							title: i18n("send_a_verification_code_failed"),
							message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busy_please") : e.error,
							hideCancel: true
						})
					}
					return
				}
				if (!n) {
					i(e.data.mobile)
				}
				n = true;
				if (t) {
					t()
				}
			}
		})
	};
	var v = function (e, t) {
		var a = f();
		a["authcode"] = e;
		sendRequest("/api/asset/withdraw_merge", {
			data: a,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code == "Withdraw Need Authcode") {
					g();
					return
				}
				if (e.code != "OK") {
					if (e.code == "Card Need Verify") {
						VerifyPhone.show(_, bindCard.get_selected_card(), null, true);
						return
					}
					Buff.alert({
						type: "error",
						title: i18n("withdrawal_failure"),
						message: e.code == "Epay Response Error" ? e.error || i18n("the_system_is_busyplease_try") : e.error,
						hideCancel: true
					});
					return
				}
				i();
				if (t) {
					t()
				}
				y();
				show_brief_asset();
				Buff.alert({
					title: i18n("withdrawal_has_been_filed"),
					message: i18n("withdraw_cash_price_of_dollar") + a.amount.toFixed(2) + i18n("is_being_processed_you_can"),
					hideCancel: true,
					success: function () {
						document.location.reload()
					}
				})
			}
		})
	};
	var y = function (e, t) {
		if (e == undefined) {
			e = 1
		}
		sendRequest("/api/asset/withdraw_log/", {
			data: {
				page_num: e
			},
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				var t = e.data;
				if (t.length == 0) {
					$("#withdraw_logs .nodata").show()
				} else {
					var a = $("#withdraw_logs .list_tb");
					a.find('tr:not(":first")').remove();
					a.append(template_render("withdraw_log_pat", {
						withdraw_logs: t["items"]
					}));
					a.show()
				}
				t.onPageClick = y;
				renderPagination(t);
				b()
			},
			error: function () { }
		})
	};
	var b = function () {
		var e = $('#withdraw_logs tr[state="CONFIRM"], #withdraw_logs tr[state="CREATED"]');
		if (e.length == 0) {
			return
		}
		var t = "/api/asset/withdraw_state_check/?";
		var a = [];
		e.each(function () {
			a.push($(this).attr("withdraw_id"))
		});
		t += "withdraw_id=" + a.join();
		sendRequest(t, {
			method: "get",
			dataType: "json",
			showLoading: false,
			showError: false,
			success: function (e) {
				if (e.code != "OK") {
					setTimeout(b, 3e4);
					return
				}
				for (var t in e.data.items) {
					$("#withdraw_logs tr[withdraw_id=" + t + "]").replaceWith(template_render("withdraw_log_pat", {
						withdraw_logs: [e.data.items[t]]
					}))
				}
				setTimeout(b, 3e4)
			}
		})
	};
	var w = function () {
		var e = $("#coupon_select .select-list-item.on");
		if (e.length > 0) {
			return {
				cdkey_id: e.attr("cdkey_id")
			}
		}
	};
	var k = function () {
		sendRequest("/api/activity/coupon/my/?coupon_type=withdraw&state=unuse&page_size=15", {
			method: "get",
			dataType: "json",
			showLoading: false,
			showError: false,
			success: function (e) {
				var t = [];
				if (e.code == "OK") {
					t = e.data.items
				}
				$("#coupon_select .select-list").append(template_render("coupons_pat", {
					coupons: t
				}));
				$(window).click(function () {
					$("#coupon_select .select-list").hide()
				});
				$("#coupon_select .selected, #coupon_select .icon_expand").click(function (e) {
					e.stopPropagation();
					$("#coupon_select .select-list").toggle()
				});
				$("#coupon_select").delegate(".select-list-item", "click", function (e) {
					if ($(this).hasClass("scope-none")) {
						return
					}
					if ($(this).find(".pay-tip").length > 0) {
						$(this).find(".pay-tip").remove();
						$(this).removeClass("on");
						$("#coupon_select .selected .coupon-name").addClass("c_Gray").text(i18n("please_select_from_the_available"))
					} else {
						$(this).siblings().each(function () {
							$(this).find(".pay-tip").remove();
							$(this).removeClass("on")
						});
						$(this).append($('<span class="pay-tip c_Blue f_12px">' + i18n("has_been_used") + "</span>"));
						$(this).addClass("on");
						$("#coupon_select .selected .coupon-name").removeClass("c_Gray").text($(this).find(".coupon-name").text());
						$("#coupon_select .select-list").toggle()
					}
					r()
				})
			}
		})
	};
	var t = function (t) {
		s = t.withdraw_min_amount;
		o = t.withdraw_max_amount;
		c = {
			epay_amount: parseFloat($("#cash_amount_val").val())
		};
		_ = t.realname || {};
		u = t.remain_withdraw_counts || {};
		var i = "input[name=epay_amount]";
		$(i).each(function () {
			var a = false;
			$(this).bind("change paste keyup", function (e) {
				if (parseFloat($(this).val()) > o) {
					if (!a) {
						$(this).unbind("keypress").bind("keypress", function () {
							return false
						});
						$(this).val(o);
						a = true
					}
				} else if (a) {
					var t = parseFloat($(this).val());
					if (isNaN(t) || isTextSelected($(i)[0]) || t < o) {
						$(this).unbind("keypress");
						Buff.pricePatten(i);
						a = false
					}
				}
				m()
			})
		});
		Buff.pricePatten(i);
		$(document).on("input", "input", function () {
			$(this).removeClass("i_Text_error")
		});
		var e = function () {
			var e = $("#notice-alipay");
			e.empty();
			e.append(template_render("notices_list_pat", {
				notices: t.notices.split("\n")
			}));
			e.show()
		};
		e();
		var n = function (e) {
			if (e) {
				if ($("#card_list_add_btn").length == 0) {
					var t = format_html('<div class="select-list-item card-list-add" id="card_list_add_btn" style="text-align: center;"><i class="icon icon_add_2" style="margin:-4px 10px 0 0;"></i><span><%= add_bank_text %></span></div>', {
						add_bank_text: i18n("add_a_bank_card")
					});
					$("#card_list_content").append(t)
				}
			} else {
				$("#card_list_add_btn").remove()
			}
		};
		var a = function (e, t) {
			var a = $("#card_list");
			a.empty();
			a.append(template_render("card_list_pat", {
				card_list_content: e.length ? template_render("card_list_item", {
					card_list: e
				}) : ""
			}));
			n(t);
			a.show();
			bindCard.init_card_list(_, null, function (e) {
				m();
				if (e) {
					r()
				}
			})
		};
		a(t.card_list || [], t.can_bind_card);
		k();
		y();
		var r = function () {
			sendRequest("/api/asset/withdraw_merge/info", {
				method: "GET",
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					n(e.data.can_bind_card)
				}
			})
		};
		$("#withdraw_btn").click(function () {
			var e = f();
			if (e == undefined || !h(e)) {
				return
			}
			var t = bindCard.get_selected_card();
			if (t.need_verify == "true") {
				VerifyPhone.show(_, t, function () {
					var e = $("#bank_card_select .select-list-item.on");
					if (e.length > 0) {
						e.attr("need_verify", "false")
					}
				});
				return
			}
			var a = function () {
				sendRequest("/api/asset/withdraw_merge/risk_check", {
					data: f(),
					method: "get",
					dataType: "json",
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(e.error);
							return
						}
						e.data.need_authcode ? g() : v()
					}
				})
			};
			if (l) {
				var i = [l.amount, l.fee, l.real_amount];
				$("#j_withdraw_confirm .popup-desc strong").each(function (e) {
					$(this).text(i[e])
				});
				$("#j_withdraw_confirm .i_Btn_main").unbind().bind("click", function () {
					a();
					Popup.hide()
				});
				Popup.show("j_withdraw_confirm")
			} else {
				a()
			}
		});
		if ($.isEmptyObject(_)) {
			$(".card-list-add").click(function () {
				userProfile().init();
				is_foreigner = t.is_foreigner;
				if (is_foreigner) {
					Popup.show("j_popup_idcard_inter")
				} else {
					bindCard.show_cert_popup(function () {
						document.location.reload()
					})
				}
			})
		}
	};
	return {
		init: t,
		enable_or_disable_button: m
	}
}();
var VerifyPhone = function () {
	var h = 120;
	var g = h;
	var v = false;
	var t = undefined;

	function y(e) {
		if (g == 0) {
			e.removeClass("i_Btn_disabled");
			e.text(i18n("get_the_verification_code"));
			g = h;
			t = undefined
		} else {
			e.addClass("i_Btn_disabled");
			e.html(format_html('<%= i18n("resend") %><small>(<%= wait %>)</small>', {
				wait: g
			}));
			g--;
			t = setTimeout(function () {
				y(e)
			}, 1e3)
		}
	}
	var b = function (i) {
		var e = function (e, t) {
			var a = $("#" + i);
			if (typeof e == "string") {
				if (t) {
					t.siblings(".error").text(e)
				} else {
					a.find(".c_Error").text(e)
				}
			}
			if (t) {
				t.parent().addClass("i_Text_error")
			}
		};
		var t = function (e) {
			var t = $("#" + i);
			if (e) {
				e.siblings(".error").text("");
				e.parent().removeClass("i_Text_error")
			} else {
				t.find(".c_Error").html("&nbsp;")
			}
		};
		var a = function () {
			var e = $("#" + i);
			e.find(".i_Text_error").removeClass("i_Text_error");
			e.find(".error").text("");
			e.find(".c_Error").html("&nbsp;")
		};
		return {
			show: e,
			clear: t,
			clear_all: a
		}
	};
	var e = function (p, f, m, e) {
		if (!m) {
			m = function () { }
		}
		var t = "need_verify",
			a = t + "_pat",
			i = "j_popup_" + t,
			n = "#" + i;
		var r = i18n("verify_tips"),
			o = i18n("verify_tips_text"),
			s = i18n("verify_now_btn_text");
		if (e) {
			r = i18n("withdraw_verify_tips");
			o = i18n("withdraw_verify_tips_text");
			h = 60
		}
		$(n).remove();
		$("body").append(template_render(a, {
			verify_tips: r,
			verify_tips_text: o,
			verify_now_btn_text: s
		}));
		Popup.show(i);
		var c = "#j_popup_need_verify .i_Btn_main";
		$(document).off("click", c).on("click", c, function () {
			Popup.hide();
			var e = "verify_phone",
				t = e + "_pat",
				a = "j_popup_" + e,
				c = "#" + a;
			$(c).remove();
			var i = {
				realname: p.realname,
				id_card: p.id_card,
				card_info: f
			};
			var n = template_render(t, i);
			$("body").append(n);
			Popup.show(a);
			var _ = b(a);
			var r = {
				data: {},
				error_msg: "",
				show_error: true,
				add_text_error: function (e) {
					if (this.show_error) {
						_.show(this.error_msg, e)
					}
				},
				get: function (e, t) {
					var a = $(c);
					_.clear_all();
					this.error_msg = "";
					var i = a.find("input[name=mobile]");
					if (t && i) {
						var n = i.val().replace(/\s*/g, "");
						if (!n) {
							this.error_msg = i18n("the_phone_number_cannot_be")
						} else if (!/^(13|14|15|16|17|18|19)\d{9}$/.test(n)) {
							this.error_msg = i18n("the_phone_number_is_incorrect")
						}
						if (this.error_msg) {
							this.add_text_error();
							return undefined
						}
						this.data["mobile"] = n
					}
					var r = a.find("input[name=card_id]").val();
					if (!r) {
						this.error_msg = i18n("please_get_a_sms_verification");
						this.add_text_error();
						return undefined
					}
					this.data["card_id"] = r;
					if (e) {
						var o = a.find("input[name=authcode]");
						var s = o.val().replace(/\s*/g, "");
						if (!s) {
							this.error_msg = i18n("verification_code_cannot_be_empty")
						} else if (!/^\d{6}$/.test(s)) {
							this.error_msg = i18n("the_verification_code_is_incorrect")
						}
						if (this.error_msg) {
							this.add_text_error();
							return undefined
						}
						this.data["authcode"] = s;
						if ($("#agreement").length > 0 && !$("#agreement").hasClass("on")) {
							this.error_msg = i18n("need_to_first_agree_to");
							this.add_text_error();
							return undefined
						}
					}
					return true
				},
				clear: function () {
					$("input[name=card_number]").val("");
					$("input[name=mobile]").val("");
					$("input[name=authcode]").val("")
				},
				show_bank_info: function (e) {
					$("input[name=bank_id]").val(e["bank_id"]);
					$("input[name=card_type]").val(e["card_type"]);
					$(".card-name").find("i").addClass("b_" + e["bank_style_id"]).next().text(e["bank_name"]);
					$(".card-name").find("img").attr("src", e["bank_icon"]).next().text(e["bank_name"]);
					$(".card-name").show()
				},
				clear_bank_info: function () {
					$("input[name=bank_id]").val("");
					$("input[name=card_type]").val("");
					var e = $(".card-name").find("i").attr("class");
					$(".card-name").find("i").attr("class", e.replace(/b_\d+/, "")).next().text("");
					$(".card-name").hide()
				}
			};
			var o = [c, "#change_mobile_btn"].join(" ");
			var s = false;
			$(o).click(function () {
				$(this).parent().hide();
				var e = [c, "#change_mobile_container", "input[name=mobile]"].join(" ");
				$(e).val("");
				var t = [c, "#change_mobile_container"].join(" ");
				$(t).show();
				s = true
			});
			var l = function (e) {
				if (!s) {
					delete e["mobile"]
				}
				return e
			};
			var u = [c, "#send_authcode"].join(" ");
			$(u).unbind().bind("click", function () {
				if (r.get(false, s) == undefined) {
					return
				}
				var e = l(r.data);
				var t = [c, "input[name=card_id]"].join(" ");
				var a = ENV == "prod" ? 5e3 : 15e3;
				sendRequest("/api/asset/bind_card/v2", {
					data: e,
					method: "post",
					dataType: "json",
					timeout: a,
					success: function (e) {
						if (e.code != "OK") {
							if (e.code == "Card Type Error") {
								f.add_text_error(i18n("recharge_with_cash_only_support"))
							} else {
								Buff.alert({
									type: "error",
									title: i18n("bound_to_fail"),
									message: e.code == "Epay Response Error" ? e.error || i18n("tied_the_card_fails_please") : e.error,
									hideCancel: true
								})
							}
							return
						}
						$(t).val(e.data.card_id);
						g = h;
						y($(u));
						v = true
					}
				})
			});
			var d = [c, "#bind_card"].join(" ");
			$(d).unbind().bind("click", function () {
				if ($(this).hasClass("i_Btn_disabled")) {
					return false
				}
				if (r.get(true, s) == undefined) {
					return
				}
				var e = l(r.data);
				sendRequest("/api/asset/bind_card_verify/v2", {
					data: e,
					method: "post",
					dataType: "json",
					success: function (e) {
						if (e.code != "OK") {
							if (e.code == "Card Type Error") {
								f.add_text_error(i18n("recharge_with_cash_only_support"))
							} else {
								Buff.alert({
									type: "error",
									title: "绑定失败",
									message: e.code == "Epay Response Error" ? e.error || i18n("tied_the_card_fails_please") : e.error,
									hideCancel: true
								})
							}
							return
						}
						Buff.toast(i18n("the_binding_is_successful"), {
							type: "success"
						});
						sleep(1e3);
						Popup.hide();
						m(e.data.card_info)
					}
				})
			})
		})
	};
	return {
		show: e
	}
}();
var Message = function () {
	var a = function (e) {
		var t = [104, 108, 111, 112, 115, 151, 117, 118, 122, 125, 127, 133, 140, 160, 161, 162, 167];
		var a = [104, 105, 109, 114, 125, 126, 130, 131, 132, 163, 164, 166];
		e.content = escapeHtml(e.content);
		if (e.template_type == 103 || e.template_type == 107) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a href="/market/backpack?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game
			}))
		}
		if (e.template_type == 101) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a href="/market/sell_order/to_deliver?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game
			}))
		}
		if (t.includes(e.template_type)) {
			e.content = e.content.replace(/\[\[sell_order_history\](.*)\[(.*)\]\]/, format_html('<a href="/market/sell_order/history?game=<%= game %>&search=<%= search %>" style="text-decoration: underline;"><%= text %></a>', {
				game: e.game,
				search: "$1",
				text: "$2"
			}))
		}
		if (a.includes(e.template_type)) {
			e.content = e.content.replace(/\[\[buy_order_history\](.*)\[(.*)\]\]/, format_html('<a href="/market/buy_order/history?game=<%= game %>&search=<%= search %>" style="text-decoration: underline;"><%= text %></a>', {
				game: e.game,
				search: "$1",
				text: "$2"
			}))
		}
		if (e.template_type == 138) {
			e.content = e.content.replace(/\[buy_order_format_id\]\[(.*)\]/, format_html('<a href="/market/buy_order/supplied?game=<%= game %>&buy_order_id=<%= buy_order_id %>" style="text-decoration: underline;"><%= text %></a>', {
				buy_order_id: "$1",
				game: e.game,
				text: " (" + i18n("go_to_view") + ")"
			}))
		}
		if (e.template_type == 139) {
			e.content = e.content.replace(/\[\[buy_order_history\](.*)\[(.*)\]\]/, format_html('<a href="/market/buy_order/supplied?game=<%= game %>&buy_order_id=<%= buy_order_id %>" style="text-decoration: underline;"><%= text %></a>', {
				game: e.game,
				buy_order_id: "$1",
				text: "$2"
			}))
		}
		if (e.template_type == 106 || e.template_type == 141 || e.template_type == 142) {
			e.content = e.content.replace(/\[\[buy_order_supplied\](.*)\[(.*)\]\]/, format_html('<a href="/market/buy_order/supplied?game=<%= game %>&buy_order_id=<%= buy_order_id %>" style="text-decoration: underline;"><%= text %></a>', {
				game: e.game,
				buy_order_id: "$1",
				text: "$2"
			}))
		}
		if (e.template_type == 116) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a href="/market/steam_inventory?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game
			}))
		}
		if (e.template_type == 119 || e.template_type == 123) {
			e.content = e.content.replace(/\[\[goods_selling\](.*)\[(.*)\]\]/, format_html('<a href="/goods/<%= goods_id %>#tab=selling" style="text-decoration: underline;"><%= text %></a>', {
				goods_id: "$1",
				text: "$2"
			}));
			e.content = e.content.replace(/\[\[goods_buying\](.*)\[(.*)\]\]/, format_html('<a href="/goods/<%= goods_id %>#tab=buying" style="text-decoration: underline;"><%= text %></a>', {
				goods_id: "$1",
				text: "$2"
			}))
		}
		if (e.template_type == 120) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a href="/market/sell_order/received_bargain?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game
			}))
		}
		if (e.template_type == 121) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a href="/market/buy_order/to_receive?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game
			}))
		}
		if (e.template_type == 124 || e.template_type == 165) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a href="/market/buy_order/sent_bargain?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game
			}))
		}
		if (e.template_type == 128) {
			e.content = e.content.replace(/\[(.*)\]/, format_html('<a class="render_link" msg_id="<%= msg_id %>" href="/user-center/bookmark/sell_order?game=<%= game %>" style="text-decoration: underline;"><%= text %></a>', {
				text: "$1",
				game: e.game,
				msg_id: e.id
			}))
		}
		return e.content
	};
	var i = function (e) {
		e.content = e.content.replace(/\[\[user_backpack\](.*)\[(.*)\]\]/, format_html('<a href="/market/backpack?game=<%= game %>"><%= text %></a>', {
			game: "$1",
			text: "$2"
		}));
		e.content = e.content.replace(/\[\[market_preview\](.*),(.*)\[(.*)\]\]/, format_html('<a href="/goods/<%= goods_id %>#tab=user-preview"><%= text %></a>', {
			goods_id: "$2",
			text: "$3"
		}));
		e.content = e.content.replace(/\[\[settings_api_key\](.*)\]/, format_html('<a href="/user-center/profile#steam_api_key"><%= text %></a>', {
			text: "$1"
		}));
		e.content = e.content.replace(/\[\[bind_card\](.*)\]/, format_html('<a href="/user-center/asset/withdraw/"><%= text %></a>', {
			text: "$1"
		}));
		e.content = e.content.replace(/\[\[device_management\](.*)\]/, format_html("<%= text %>", {
			text: "$1"
		}));
		e.content = e.content.replace(/\[\[settings_preference\](.*)\]/, format_html("<%= text %>", {
			text: "$1"
		}));
		if (e.content && e.content.includes("[my_coupon]") && e.content.includes("benefits")) {
			e.content = e.content.replace(/\[\[my_coupon\]\[(.*)\](.*)\]/, format_html('<a href="/user-center/my_benefit"><%= text %></a>', {
				text: "$2"
			}))
		} else {
			e.content = e.content.replace(/\[\[my_coupon\]\[(.*)\](.*)\]/, format_html('<a href="/user-center/coupon/<%= type %>"><%= text %></a>', {
				type: "$1",
				text: "$2"
			}))
		}
		e.content = e.content.replace(/\[\[sell_order_history\](.*)\[(.*)\]\[(.*)\]\]/, format_html('<a href="/market/sell_order/history?game=<%= game %>&search=<%= search %>"><%= text %></a>', {
			game: "$2",
			text: "$3",
			search: "$1"
		}));
		var t = /\[\[my_coupon_expiring\](.*)\,(.*)\,(.*)\[(.*)\]\]/;
		var a = t.exec(e.content);
		e.content = e.content.replace(/\[\[my_coupon_expiring\](.*)\,(.*)\,(.*)\[(.*)\]\]/, format_html('<a href="/market/<%= game %>#tab=selling&page_num=1&min_price=<%= min_price %>"><%= text %></a>', {
			game: g.game,
			min_price: "$1",
			text: "$4"
		}));
		if (a) {
			if (g.locale && g.locale.includes("zh")) {
				var i = a[2]
			} else {
				var i = a[3]
			}
			e.content = e.content.replace("coupon_name", i)
		}
		t = /\[\[my_coupon_expiring_v2\](.*)\,(.*)\,(.*)\,(.*)\,(.*)\[(.*)\]\]/;
		a = t.exec(e.content);
		if (a) {
			if (g.locale && g.locale.includes("zh")) {
				var i = a[2]
			} else {
				var i = a[3]
			}
			var n = a[4].split("-").map(Number);
			var r = a[5];
			var o = g.appid;
			if (n && !n.includes(g.appid)) {
				if (n.includes(730)) {
					o = 730
				} else if (n.includes(570)) {
					o = 570
				} else {
					o = n[0]
				}
			}
			var s = BuffConfig.SteamAPP.APPID_MAPS[o];
			if (r == "True") {
				e.content = e.content.replace(/\[\[my_coupon_expiring_v2\](.*)\,(.*)\,(.*)\,(.*)\,(.*)\[(.*)\]\]/, format_html('<a href="/market/<%= game %>#tab=selling&page_num=1&min_price=<%= min_price %>"><%= text %></a>', {
					game: s,
					min_price: "$1",
					text: "$6"
				}))
			} else {
				e.content = e.content.replace(/\[\[my_coupon_expiring_v2\](.*)\,(.*)\,(.*)\,(.*)\,(.*)\[(.*)\]\]/, format_html('<a href="/market/<%= game %>#tab=selling&page_num=1"><%= text %></a>', {
					game: s,
					text: "$6"
				}))
			}
			e.content = e.content.replace("coupon_name", i)
		}
		e.content = e.content.replace(/\[\[steam_login\](.*)\]/, format_html("<%= text %>", {
			text: "$1"
		}));
		return e.content
	};
	var o = function (e) {
		if (e == undefined) {
			e = 1
		}
		var r = $("#j_mail-tab .on").attr("message_type");
		sendRequest("/api/message/messages", {
			data: {
				page_num: e,
				type: r
			},
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					alert(e.error);
					return
				}
				var t = e.data;
				var a = "";
				var i = "";
				if (r == "trade") {
					a = "#trade_message";
					i = "trade_message_pat"
				} else if (r == "system") {
					a = "#system_message";
					i = "system_message_pat"
				}
				$(a + " table tr:not(:first)").remove();
				var n = "";
				if (t.items.length == 0) {
					$(a + " table").hide();
					$(a + " .nodata").show()
				} else {
					n = template_render(i, {
						messages: t.items
					});
					$(a + " .nodata").hide();
					$(a + " table").append(n).show();
					s()
				}
				t.pager_name = a + " .pager";
				t.onPageClick = o;
				renderPagination(t)
			}
		})
	};
	var s = function () {
		var a = {};
		$("a.render_link").each(function () {
			var e = $(this);
			var t = e.attr("msg_id");
			if (t) {
				a[t] = e
			}
		});
		var e = Object.keys(a).join(",");
		sendRequest("/api/message/messages_link", {
			method: "GET",
			data: {
				message_ids: e
			},
			showLoading: false,
			success: function (e) {
				if (e.code == "OK" && e.data) {
					for (var t in e.data) {
						if (e.data[t]) {
							a[t].attr("href", e.data[t])
						}
					}
				}
			}
		})
	};
	var e = function () {
		template.defaults.imports.trade_message_format = a;
		template.defaults.imports.system_message_format = i;
		var e = getParams(window.location.search.substring(1));
		if (e.type == "system") {
			$("#j_mail-tab li[message_type=system]").addClass("on");
			$("#system_message").show()
		} else if (e.type == "trade") {
			$("#j_mail-tab li[message_type=trade]").addClass("on");
			$("#trade_message").show()
		} else {
			$("#j_mail-tab li[message_type=bargain_chat]").addClass("on");
			$("#bargain_chat_div").show()
		}
		if (e.type == "system" || e.type == "trade") {
			o()
		}
		$("#system_message").delegate(".msg-folder-handler", "click", function () {
			t();
			$(this).toggleClass("on");
			var e = $("#system_message .msg-folder-handler").index(this);
			$("#system_message .msg-folder").eq(e).toggle()
		});
		$(document).on("click", ".confirm_trade", function (e) {
			e.preventDefault();
			var t = $(this).data("bill_order_id");
			var a = $(this).data("confirm");
			sendRequest("/api/market/market_bill_order/confirm", {
				method: "POST",
				data: {
					bill_order_id: t,
					confirm: a
				},
				showLoading: false,
				success: function (e) {
					if (e.code == "OK") {
						Buff.toast("确认成功")
					} else {
						Buff.toast(e.error)
					}
				}
			})
		});
		var t = function () {
			$(".confirm_trade").each(function () {
				$(this).css("width", "50%");
				$(this).css("margin-top", "10px")
			})
		};
		setTimeout(t, 1e3);
		gameNavigator.setKeepParams(["type"])
	};
	return {
		init: e,
		format_trade_message: a,
		format_system_message: i
	}
}();
var Feedback = function () {
	var e = {
		data: {},
		error_msg: "",
		show_error: function (e) {
			if (e) {
				e.addClass("i_Text_error")
			}
			$(".c_Red").text(this.error_msg)
		},
		clear_error: function (e) {
			e.removeClass("i_Text_error")
		},
		get: function () {
			this.error_msg = "";
			var e = $("input[name=email]");
			var t = e.val().trim();
			if (t && !/^[\w-]+[\w._-]*@[\w-]+(\.[\w-]+)+$/.test(t)) {
				this.error_msg = i18n("please_input_the_correct_mailbox")
			}
			if (this.error_msg) {
				this.show_error(e);
				return
			}
			this.data["email"] = t;
			var a = $("textarea[name=content]");
			var i = a.val().trim();
			var n = 1024;
			if (!i) {
				this.error_msg = i18n("please_enter_the_question_content")
			} else if (i.length > n) {
				this.error_msg = i18n("content_length_can_not_be")
			}
			if (this.error_msg) {
				this.show_error(a);
				return
			}
			this.data["content"] = i;
			var r = $(".upload-pics .upload-item img").attr("src");
			if (r) {
				this.data["img_url"] = r
			}
			return true
		}
	};
	var a = function () {
		if (e.get() == undefined) {
			return
		}
		$(".c_Red").text("");
		sendRequest("/api/feedback/add/v2", {
			data: e.data,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					$(".c_Red").text(e.error);
					return
				}
				Buff.toast(i18n("successfully_submitted"), {
					type: "success"
				});
				location.reload()
			}
		})
	};
	var i = function (e, t) {
		var a = e.target.files;
		var i = a[0];
		options = {
			file: i,
			upload_url: t.url,
			max_file_size: t.max_size,
			token: t.token,
			callback: function (e) {
				$(".upload-btn").hide();
				$(".upload-pics").show().find(".upload-item").html(format_html('<img src="<%= url %>" />', {
					url: e.url
				}));
				$(".upload-btn").next().html(format_html('<i class="icon icon_status_success"></i><%= i18n("successful_upload") %><a href="javascript:;" class="f_12px f_Underline"><%= i18n("reupload") %></a>')).find("a").click(function () {
					$("#upload_file").click()
				})
			},
			onprogress: function (e) {
				if (e.lengthComputable) {
					var t = (e.loaded / e.total * 100).toFixed(2);
					$(".upload-btn .upload-progressing").show();
					$(".upload-btn").next().text(i18n("is_being_uploaded") + t + "%")
				}
			}
		};
		uploadFile(options)
	};
	var t = function (t) {
		$("#feedback_type,input[name=email],input[name=title],textarea[name=content]").bind("input change propertychange", function () {
			e.clear_error($(this))
		});
		$("#submit").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			a()
		});
		$("#upload_file").change(function (e) {
			i(e, t)
		})
	};
	return {
		init: t,
		upload_image: i
	}
}();
var FeedbackList = function () {
	var a = function (e, t) {
		if (e == undefined) {
			e = 1
		}
		sendRequest("/api/feedback/list/", {
			data: {
				page_num: e
			},
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				var t = e.data;
				if (t.has_unreplay) {
					$(".Btn_to_submit").addClass("i_Btn_disabled").unbind().bind("click", function () {
						Buff.toast(i18n("currently_have_to_wait_for"))
					})
				} else {
					$(".Btn_to_submit").removeClass("i_Btn_disabled").unbind().bind("click", function () {
						Popup.show("j_popup_feedback")
					})
				}
				$("#feedback_logs").show();
				$("#feedback_logs tr:not(:first)").remove();
				$(".user-feedback .nodata").hide();
				$("#feedback_logs tr").after(template_render("feedback_log_pat", {
					feedbacks: t["items"]
				}));
				if (t["items"].length == 0) {
					$(".user-feedback .nodata").show()
				}
				t.onPageClick = a;
				renderPagination(t);
				$("#feedback_logs").delegate("td", "mouseover", function () {
					$(this).css("cursor", "pointer")
				}).delegate("td", "click", function () {
					var e = $(this).parent().attr("feedback_id");
					location.href = "/user-center/feedback/detail/?id=" + e
				});
				if (t.announcement) {
					$("#j_popup_feedback .popup-tip").html(t.announcement).show();
					if (t.announcement_entry.url) {
						$("#j_popup_feedback .popup-tip").bind("mouseover", function () {
							$(this).css("cursor", "pointer")
						}).bind("click", function () {
							openPageOnNewTab(t.announcement_entry.url)
						})
					}
				} else {
					$("#j_popup_feedback .popup-tip").html("").hide()
				}
			}
		})
	};
	var e = function (e) {
		a();
		Feedback.init(e)
	};
	return {
		init: e
	}
}();
var FeedbackDetail = function () {
	var i;
	var e = function () {
		sendRequest("/api/feedback/detail/", {
			data: {
				id: i
			},
			method: "get",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				$(".list_tb:first").html(template_render("feedback_replay_pat", {
					feedback_replays: [e.data.feedback]
				}));
				$(".list_tb:first").append(template_render("feedback_replay_pat", {
					feedback_replays: e.data.feedback_replays
				}));
				if (e.data.can_replay) {
					$(".feedback-form").show()
				} else {
					$(".feedback-form").remove()
				}
			}
		})
	};
	var t = {
		data: {},
		error_msg: "",
		get: function () {
			var e = $("textarea[name=content]").val().trim();
			if (!e) {
				this.error_msg = i18n("please_enter_the_question_content");
				return
			}
			var t = 1024;
			if (e.length > t) {
				this.error_msg = i18n("content_length_can_not_be");
				return
			}
			this.data["content"] = e;
			this.data["id"] = i;
			var a = $(".upload-pics .upload-item img").attr("src");
			if (a) {
				this.data["img_url"] = a
			}
			return true
		}
	};
	var a = function () {
		if (t.get() == undefined) {
			$("#submit").addClass("i_Btn_disabled").removeClass("i_Btn_main")
		} else {
			$("#submit").removeClass("i_Btn_disabled").addClass("i_Btn_main")
		}
	};
	var n = function () {
		if (t.get() == undefined) {
			$(".c_Red").text(t.error_msg);
			return
		}
		$(".c_Red").text("");
		sendRequest("/api/feedback/replay/", {
			data: t.data,
			method: "post",
			dataType: "json",
			success: function (e) {
				if (e.code != "OK") {
					$(".c_Red").text(e.error);
					return
				}
				Buff.toast(i18n("reply_success"), {
					type: "success"
				});
				location.reload()
			}
		})
	};
	var r = function () {
		Buff.alert({
			title: i18n("confirm"),
			message: i18n("whether_the_problem_has_been"),
			confirmText: i18n("ok"),
			success: function () {
				sendRequest("/api/feedback/close/", {
					data: {
						id: i
					},
					method: "post",
					dataType: "json",
					success: function (e) {
						if (e.code != "OK") {
							Buff.toast(i18n("close_failed_please_try_again"), {
								type: "error"
							})
						}
						location.reload()
					}
				})
			}
		})
	};
	var o = function (t) {
		i = getParams().id;
		if (!i) {
			return
		}
		e();
		$("textarea[name=content]").bind("input change propertychange", a);
		$("#submit").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			n()
		});
		$("#close").click(function () {
			r()
		});
		$("#upload_file").change(function (e) {
			Feedback.upload_image(e, t)
		})
	};
	return {
		init: o
	}
}();
var Flow = function () {
	var o = function (e) {
		if (e == undefined) {
			e = 1
		}
		var t = {
			page_num: e
		};
		var a = $("#log_category").attr("value");
		var i = $("#pay_category").attr("value");
		var n = $("#j_select_log_time_range").attr("value");
		if (a) {
			t["log_category"] = a
		}
		t["pay_category"] = i;
		var r = getDatepickerTimestampRange($("#j_select_log_time_range"));
		t["start_time"] = r.start_time;
		t["end_time"] = r.end_time;
		sendRequest("/api/asset/flow/log/", {
			data: t,
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					alert(e.error);
					return
				}
				var t = e.data;
				$("#flow table tr:not(:first)").remove();
				if (t.items.length == 0) {
					$("#flow table").hide();
					$("#flow .nodata").show()
				} else {
					$("#flow .nodata").hide();
					$("#flow table").append(template_render("flow_pat", {
						flow: t.items,
						pay_category: i
					})).show()
				}
				t.pager_name = "#flow .pager";
				t.onPageClick = o;
				renderPagination(t);
				renderTimeRangeTips($("#flow .pager"))
			}
		})
	};
	var e = function () {
		$("#log_category").change(function () {
			o()
		});
		$("#pay_category").change(function () {
			o()
		});
		$("body").on("change", "#j_select_log_time_range", function () {
			o()
		});
		o()
	};
	return {
		init: e
	}
}();
var Flow_V2 = function () {
	var n = function (e) {
		if (e == undefined) {
			e = 1
		}
		var t = {
			page_num: e
		};
		var a = $("#log_category").attr("value");
		var i = $("#pay_category").attr("value");
		if (a) {
			t["log_category"] = a
		}
		t["pay_category"] = i;
		sendRequest("/api/asset/flow/log/v2", {
			data: t,
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					alert(e.error);
					return
				}
				var t = e.data;
				$("#flow table tr:not(:first)").remove();
				if (t.items.length == 0) {
					$("#flow table").hide();
					$("#flow .nodata").show()
				} else {
					$("#flow .nodata").hide();
					$("#flow table").append(template_render("flow_pat", {
						flow: t.items,
						pay_category: i
					})).show()
				}
				t.pager_name = "#flow .pager";
				t.onPageClick = n;
				renderPagination(t)
			}
		})
	};
	var e = function () {
		$("#log_category").change(function () {
			n()
		});
		$("#pay_category").change(function () {
			n()
		});
		n()
	};
	return {
		init: e
	}
}();
var Coupon = function () {
	var o = function (e) {
		if (e == undefined) {
			e = 1
		}
		var t = {
			game: g.game,
			page_num: e,
			page_size: 12,
			state: $("#coupon_state").attr("value"),
			only_coupon: 1
		};
		sendRequest("/api/activity/coupon/my/", {
			data: t,
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				var t = $("#user-coupon-list");
				t.empty();
				var a = e.data;
				var i = a["items"];
				if (i.length == 0) {
					$(".nodata").show();
					return
				}
				var n = {
					1: "user-rights-tag_points",
					4: "user-rights-tag_vip"
				};
				for (var r = 0; r < i.length; r++) {
					if ($("#coupon_state").attr("value") == "used") {
						i[r].tab_class = "user-coupon-gray"
					}
					if (i[r].dispense_source) {
						i[r].dispense_source["tag_class"] = n[i[r].dispense_source.value];
						i[r].dispense_source["is_point_dispense_sources"] = i[r].dispense_source.value == 4 ? true : false
					}
				}
				$(".nodata").hide();
				t.append(template_render("coupon_detail_pat", {
					coupons: i
				}));
				t.show();
				a.onPageClick = o;
				a.displayed_pages = 7;
				renderPagination(a)
			},
			error: function () { }
		})
	};
	var e = function (e) {
		o();
		$("#coupon_state").change(function () {
			o()
		});
		$("#exchange_key").click(function () {
			var e = $("input[name=cdkey]").val();
			if (!e) {
				Buff.toast(i18n("please_enter_the_redemption_code"), {
					type: "error"
				});
				return
			}
			var t = {
				cdkey: e
			};
			sendRequest("/api/activity/cdkey/exchange/", {
				data: t,
				method: "post",
				dataType: "json",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					Buff.toast(e.data.message, {
						type: "success"
					});
					setTimeout(function () {
						location.reload()
					}, 3e3)
				}
			})
		})
	};
	return {
		init: e
	}
}();
var MyBenefit = function () {
	var e;
	var t = function () {
		sendRequest("/api/activity/benefit/my/", {
			method: "get",
			dataType: "json",
			showLoading: false,
			success: function (e) {
				if (e.code != "OK") {
					return
				}
				var t = e.data;
				if (t.length == 0) {
					$(".nodata").show();
					$("#data_container").hide();
					return
				}
				var a = [];
				var i = [];
				var n = {
					1: "user-rights-tag_points",
					4: "user-rights-tag_vip"
				};
				for (var r = 0; r < t.length; r++) {
					var o = t[r].dispense_sources;
					if (o.length) {
						var s = [];
						o.forEach(function (e, t) {
							s.push(e.value);
							o[t]["tag_class"] = n[e.value];
							o[t]["is_point_dispense_sources"] = e.value == 4 ? true : false
						});
						t[r].coupon_dispense_sources = s.sort().join("_")
					}
					t[r].has_benefit ? a.push(t[r]) : i.push(t[r])
				}
				$(".nodata").hide();
				if (a.length) {
					var c = $("#user-rights-list-own");
					c.empty();
					c.append(template_render("my_benefit_pat", {
						items: a
					}));
					c.show()
				}
				if (i.length) {
					var _ = $("#user-rights-list-not-owned");
					_.empty();
					_.append(template_render("my_benefit_pat", {
						items: i
					}));
					_.show()
				}
				$("#data_container").show();
				$("#user-rights-list-not-owned li").click(function () {
					var e = $(this).data("coupon_dispense_sources");
					var t = {
						1: i18n("coupon_dispense_sources_points"),
						4: i18n("coupon_dispense_sources_vip"),
						7: i18n("coupon_dispense_sources_lottery"),
						"1_4": i18n("coupon_dispense_sources_both"),
						"1_7": i18n("coupon_discpense_sources_points_lottery_both"),
						"4_7": i18n("coupon_dispense_sources_lottery_both"),
						"1_4_7": i18n("coupon_discpense_sources_points_all")
					};
					Buff.toast(t[e])
				})
			},
			error: function () { }
		})
	};
	var a = function (e) {
		t()
	};
	return {
		init: a
	}
}();
var GiftCard = function () {
	var i = {};
	var c = "data-ejzb_auth";
	var t = function () {
		var a = $("#receiver_info");
		var e = $("input[name=nickname]").val().trim();
		if (e == i["nickname"]) {
			return
		}
		i = {};
		a.hide();
		n();
		if (!e) {
			return
		}
		sendRequest("/api/activity/gift_card/receiver_info/", {
			method: "get",
			data: {
				nickname: e
			},
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				i = e.data;
				if (i.id) {
					var t = format_html('<div style="margin-top: 5px"><%= i18n("gift_card_receiver_info") %>&nbsp;<img width="26" height="26" src="<%= receiverInfo.avatar %>">&nbsp;<a href="/shop/<%= receiverInfo.id %>" target="_blank"><strong><%= receiverInfo.nickname %></strong></a></div>', {
						receiverInfo: i
					});
					a.html(t);
					a.show();
					n()
				} else {
					Buff.toast(i18n("gift_card_receiver_nickname_error"))
				}
			}
		})
	};
	var _ = function () {
		var e = $("#amount_list").attr("value");
		if (e) {
			e = parseInt(e)
		}
		var t = $("input[name=nickname]").val();
		var a = i.id;
		return {
			amount: e,
			receiver_nickname: t,
			receiver_id: a
		}
	};
	var n = function () {
		var e = _();
		var t = $("#confirm_buy");
		if (e["amount"] && e["receiver_nickname"] && e["receiver_id"]) {
			t.removeClass("i_Btn_disabled")
		} else {
			t.addClass("i_Btn_disabled")
		}
	};
	var e = function () {
		var e = _();
		sendRequest("/api/activity/gift_card/fee/", {
			method: "get",
			data: e,
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				var t = [i["nickname"], e.data["amount"], e.data["fee"], e.data["real_amount"]];
				$("#j_gift_card_buy_confirm .popup-desc strong").each(function (e) {
					$(this).text(t[e])
				});
				$("#j_gift_card_buy_confirm .i_Btn_main").attr("validate_way", e.data["validate_way"]);
				var a = {
					receiver_nickname: i["nickname"],
					avatar: i["avatar"],
					receiver_id: i["id"],
					amount: e.data["amount"],
					fee: e.data["fee"],
					real_amount: e.data["real_amount"]
				};
				$("#j_gift_card_buy_confirm .i_Btn_main").data("buy_info", a);
				$("#j_gift_card_buy_confirm .i_Btn_main").attr(c, JSON.stringify(e.data["ejzb_auth"]));
				Popup.hide();
				Popup.show("j_gift_card_buy_confirm")
			}
		})
	};
	var l = function (e, t) {
		var a = commonAuthcodeVerifyManager(e, "/api/activity/gift_card/send_authcode/", null, "/api/activity/gift_card/buy/", _(), t);
		a.init()
	};
	var u = function (e, i) {
		QrCode.init(QrCodeType.GIFT_CARD_BUY_VERIFY, e, function (e, t) {
			var a = _();
			a["authcode"] = "aucode";
			a["qr_code_id"] = e;
			sendRequest("/api/activity/gift_card/buy/", {
				method: "POST",
				data: a,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error);
						return
					}
					i(e.data)
				}
			})
		})
	};
	var a = function (t) {
		sendRequest("/api/activity/gift_card/query_buy_info/", {
			method: "get",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				t && t(e.data)
			}
		})
	};
	var r = function (o) {
		$("#amount_list").bind("change", function () {
			n()
		});
		$("input[name=nickname]").change(function (e) {
			t()
		});
		$("#confirm_buy").click(function () {
			if ($(this).hasClass("i_Btn_disabled")) {
				return
			}
			e()
		});
		var s = function (e) {
			Popup.hide();
			Buff.alert({
				title: i18n("buy_success"),
				message: i18n("gift_card_buy_success", {
					nickname: i["nickname"],
					sn: e.sn
				}),
				hideCancel: true,
				confirmText: i18n("ok"),
				success: function () {
					window.location.reload()
				}
			})
		};
		$("#j_gift_card_buy_confirm .i_Btn_main").click(function () {
			var t = $(this);
			var e = $("#j_gift_card_buy_confirm #actual_payment").text();
			var a = JSON.parse(t.attr(c) || "{}");
			var i = function () {
				Popup.hide();
				CommonApi.User.info(["ejzb_auth"], function (e) {
					Popup.show("j_gift_card_buy_confirm");
					t.attr(c, JSON.stringify(e.ejzb_auth))
				})
			};
			if (ejzbAuthVerifyManager().process(a, null, null, e, i)) {
				return
			}
			var n = $(this).attr("validate_way");
			if (n == "pay_password") {
				payPasswordPopup(e, function (e) {
					Popup.hide();
					var t = _();
					t["authcode"] = e;
					sendRequest("/api/activity/gift_card/buy/", {
						method: "post",
						data: t,
						success: function (e) {
							if (e.code != "OK") {
								Buff.toast(e.error);
								return
							}
							s(e.data)
						}
					})
				}, function () {
					Popup.hide();
					Popup.show("j_gift_card_buy_confirm")
				}, false).show()
			} else if (n == "qr_code") {
				var r = $(this).data("buy_info");
				u(r, s)
			} else {
				l(o, s)
			}
		});
		$("#amount_list").bind("click", function () {
			a(function (e) {
				if (e.month_buy_count >= e.max_month_buy_count || parseInt(e.month_buy_amount) >= parseInt(e.max_month_buy_amount)) {
					n();
					Buff.alert({
						title: i18n("gift_card_query_title"),
						message: e.buy_info,
						hideCancel: true,
						confirmText: i18n("ok")
					});
					return
				}
			})
		});
		$("#query_gift_card_info").click(function () {
			a(function (e) {
				var t = e.buy_info;
				Buff.alert({
					title: i18n("gift_card_query_title"),
					message: t,
					hideCancel: true,
					confirmText: i18n("ok")
				})
			})
		})
	};
	return {
		init: r
	}
}();
var Premium = function () {
	var s = {};
	var e = function () { };
	var t = function (e, t, a) { };
	var c = function () {
		sendRequest("/account/api/premium_buy", {
			data: s,
			dataType: "json",
			method: "POST",
			success: function (e) {
				if (e.code != "OK") {
					var t = e.error || i18n("premium_buy_fail");
					Buff.toast(t, {
						type: "warning"
					});
					return
				}
				var a = function () {
					Buff.alert({
						title: i18n("premium_waiting_for_payment"),
						message: i18n("premium_havent_successfully_paid"),
						confirmText: i18n("premium_continue_to_pay"),
						cancelText: i18n("premium_confirm_leave"),
						success: function () {
							Popup.show("j_popup_wx")
						},
						cancel: function () {
							window.location.reload()
						},
						onClose: function () {
							window.location.reload()
						}
					})
				};
				var i = 5;
				if (s.pay_method == BuffConfig.PayMethod.WX_PAGE) {
					var n = e.data.pay_params;
					i = n.pay_expire_timeout;
					wxPayShowQrcode(s.price, n.url, i, a)
				} else if (s.pay_method == BuffConfig.PayMethod.ALIPAY_PAGE) {
					var n = e.data.pay_params;
					location.href = n.url
				} else {
					$("#loading-cover").show()
				}
				r(e.data.order_id, s.pay_method, i, true)
			},
			error: function (e) {
				$("#loading-cover").hide();
				Popup.hide();
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("the_system_is_busy_please"),
					hideCancel: true
				})
			}
		})
	};
	var r = function (e, t, a, i) {
		var n = function (e, t) {
			sendRequest("/account/api/premium_record", {
				data: {
					order_id: e
				},
				dataType: "json",
				showLoading: false,
				method: "GET",
				success: function (e) {
					t.notify();
					if (e.code != "OK") {
						return
					}
					if (e.data.items.length != 1) {
						return
					}
					order = e.data.items[0];
					if (order.state == "PAY_SUCCESS") {
						Buff.toast(i18n("premium_buy_success"), {
							type: "success"
						});
						t.resolve();
						if (i) {
							setTimeout(function () {
								window.location.reload()
							}, 500)
						}
					} else if (order.state == "PAY_FAILED") {
						t.reject()
					}
				}
			})
		};
		payWaitResult(e, t, a, n)
	};
	var a = function () {
		sendRequest("/account/api/premium_package", {
			data: {},
			dataType: "json",
			method: "GET",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(e.error, {
						type: "warning"
					});
					return
				}
				Popup.hide();
				var t = e.data.pay_methods;
				var a = e.data.packages;
				var i = template_render("pay_content_premium", {
					premium_package: a
				});
				var n = a[0];
				var r = payMethodPopup();
				var o = {
					pay_methods: e.data.pay_methods,
					price: n.discount_price,
					pay_content: i,
					onPaymethodChange: function (e, t, a) {
						s.pay_method = e;
						s.free_password = t !== "false";
						s.ejzb_auth = a
					},
					onPayContentChange: function (e, t) {
						s.package_id = e;
						s.price = t
					},
					onConfirm: function () {
						if (ejzbAuthVerifyManager().process(s.ejzb_auth, r, o, s.price)) {
							return
						}
						if (!s.free_password) {
							Popup.hide();
							payPasswordPopup(s.price, function (e) {
								Popup.hide();
								s.password = e;
								c()
							}, function () {
								Popup.hide();
								r.show(o)
							}).show();
							return
						}
						c()
					}
				};
				r.show(o)
			}
		})
	};
	return {
		init: e,
		join_plus: a,
		show_expired_popup: t,
		check_after_pay: r
	}
}();
var CaptchaEntry = function (a, e, i) {
	var t;
	if (!i) {
		i = function () {
			if (e) {
				BUFFAPP.bridge("closeWebView", {})
			} else {
				setTimeout(function () {
					window.close()
				}, 1e3)
			}
		}
	}
	initNECaptchaWithFallback({
		element: "#captcha",
		captchaId: g.captcha_id,
		mode: "popup",
		width: "320px",
		apiVersion: 2,
		disableMaskClose: true,
		smsNewVersion: 2,
		popupStyles: {
			position: "fixed",
			top: "20%"
		},
		customTexts: {
			popupTitle: "请求异常,请完成安全验证"
		},
		onClose: function () { },
		onVerify: function (e, t) {
			if (!e) {
				sendRequest("/account/captcha/verify", {
					method: "POST",
					data: {
						captcha: t.validate,
						origin: a
					},
					success: function (e) {
						if (e.code == "Captcha Verify Failed") {
							window.location.reload();
							return
						}
						console.log("validate success: ", e);
						i()
					}
				})
			}
		}
	}, function (e) {
		t = e;
		if (!t) {
			console.log("empty ins");
			return
		}
		t && t.verify()
	}, function (e) { })
};
var createRollRoom = function (n) {
	var r = [];
	var i = [];
	var o = {};
	var l = {};
	var u = {
		NORMAL: 0,
		PASSWORD: 1
	};
	var n = n || 100;
	var s = "";

	function d(e) {
		var t = /(http|https):\/\/(\w+:{0,1}\w*)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%!\-\/]))?/;
		if (!t.test(e)) {
			return false
		} else {
			return true
		}
	}
	var t = function () {
		var e = 0;
		for (var t = 0; t < r.length; t++) {
			if (r[t].selected == true) {
				e += 1
			}
		}
		return e
	};
	var c = function () {
		var e = 0;
		var t = 0;
		for (var a = 0; a < r.length; a++) {
			if (r[a].selected == true) {
				t += parseFloat(o[r[a].goods_id].steam_price_cny);
				e += 1
			}
		}
		$("#reward_count").text(e + "/" + n);
		$(".input-hud").text("≤" + e);
		$("#total_price").text("￥" + t.toFixed(2));
		var i = template_render("prize_pool_pat", {
			count: e,
			items: r,
			goods_infos: o
		});
		$(".prize_pool .switch_box").html(i)
	};
	var _ = function () {
		var e = 0;
		for (var t = 0; t < r.length; t++) {
			if (r[t].selected != true) e += 1
		}
		var a = template_render("buff_backpack_pat", {
			count: e,
			items: r,
			goods_infos: o,
			search: s.toLocaleLowerCase()
		});
		$(".buff_backpack .switch_box").html(a)
	};
	var e = function () {
		$(".step_tab").removeClass("active");
		$(".step_tab.info").addClass("active");
		$("#tab_info").show();
		$("#tab_pool").hide()
	};
	var a = function () {
		$(".step_tab").removeClass("active");
		$(".step_tab.pool").addClass("active");
		$("#tab_info").hide();
		$("#tab_pool").show()
	};
	var p = function () {
		var e = $('input[name="name"]').val().trim();
		if (e.length < 1) {
			Buff.toast("请填写活动名称");
			$('input[name="name"]').addClass("i_Text_error");
			return false
		} else if (e.length > 12) {
			Buff.toast("活动名称不能超过12个字");
			$('input[name="name"]').addClass("i_Text_error");
			return false
		}
		var t = $('textarea[name="brief"]').val().trim();
		if (t.length < 5) {
			Buff.toast("活动介绍不小于5个字");
			$('textarea[name="brief"]').addClass("i_Text_error");
			return false
		} else if (t.length > 200) {
			Buff.toast("活动介绍不超过200个字");
			$('textarea[name="brief"]').addClass("i_Text_error");
			return false
		}
		var a = $('.w-Select[name="date"]').attr("value");
		if (typeof a == "undefined" || a.length < 1) {
			Buff.toast("请选择开奖日期");
			$('.w-Select[name="date"]').addClass("i_Text_error");
			return false
		}
		var i = $('input[name="hours"]').val();
		var n = $('input[name="minutes"]').val();
		if (i == "小时") {
			Buff.toast("请选择开奖时间");
			$('input[name="hours"]').addClass("i_Text_error");
			return false
		}
		if (n == "分钟") {
			Buff.toast("请选择开奖时间");
			$('input[name="minutes"]').addClass("i_Text_error");
			return false
		}
		var r = a + " " + i + ":" + n + ":00";
		if (moment(r, "YYYY-MM-DD hh:mm:ss") - moment().add(10, "minutes") < 0) {
			Buff.toast("开奖时间必须晚于10分钟之后");
			$('input[name="hours"]').addClass("i_Text_error");
			$('input[name="minutes"]').addClass("i_Text_error");
			return false
		}
		var o = $('.w-Select[name="type"]').attr("value");
		if (typeof o == "undefined") {
			Buff.toast("请选择活动类型");
			$('.w-Select[name="type"]').addClass("i_Text_error");
			return false
		}
		var s = $('input[name="password"]').val();
		if (o == u.PASSWORD) {
			if (s.length < 4) {
				Buff.toast("请输入大于4位的密码");
				$('input[name="password"]').addClass("i_Text_error");
				return false
			} else if (s.length > 24) {
				Buff.toast("请输入小于24位的密码");
				$('input[name="password"]').addClass("i_Text_error");
				return false
			}
			l.password = s
		} else {
			delete l.password
		}
		var c = $('input[name="intro_name"]').val();
		if (c.length > 24) {
			Buff.toast("链接文本不能超过24个字");
			$('input[name="intro_name"]').addClass("i_Text_error");
			return false
		} else if (c.length > 0 && c.length < 2) {
			Buff.toast("链接文本不能少于2个字");
			$('input[name="intro_name"]').addClass("i_Text_error");
			return false
		}
		var _ = $('input[name="intro_url"]').val();
		if (_.length > 0 && d(_) == false) {
			Buff.toast("请输入正确的链接");
			$('input[name="intro_url"]').addClass("i_Text_error");
			return false
		}
		if (_.length > 0 && c.length < 1) {
			Buff.toast("请输入链接文字");
			$('input[name="intro_name"]').addClass("i_Text_error");
			return false
		}
		if (c.length > 0 && _ < 1) {
			Buff.toast("请输入链接地址");
			$('input[name="intro_url"]').addClass("i_Text_error");
			return false
		}
		l.appid = $('.w-Select[name="appid"]').attr("value");
		l.name = e;
		l.brief = t;
		l.draw_time = r;
		l.type = o;
		if (c.length > 0) {
			l.intro_name = c
		} else {
			delete l.intro_name
		}
		if (_.length > 0) {
			l.intro_url = _
		} else {
			delete l.intro_url
		}
		return true
	};
	var f = function () {
		var e = 0;
		var t = [];
		for (var a = 0; a < r.length; a++) {
			if (r[a].selected == true) {
				t.push(r[a].id);
				e += 1
			}
		}
		if (e < 1) {
			Buff.toast("请选择至少一件饰品");
			return false
		}
		var i = parseInt($('input[name="reward_count"]').val());
		if (isNaN(i) || i < 1) {
			Buff.toast("请输入获奖人数");
			$('input[name="reward_count"]').addClass("i_Text_error");
			return false
		} else if (i > e) {
			Buff.toast("可获奖人数需小于等于奖池饰品数量");
			$('input[name="reward_count"]').addClass("i_Text_error");
			return false
		}
		l.reward_count = i;
		l.backpack_ids = t.join(",");
		return true
	};
	var m = function () {
		sendRequest("/api/market/backpack", {
			data: {
				appid: l.appid,
				page_size: 1e3
			},
			showLoading: false,
			method: "GET",
			success: function (e) {
				o = e.data.goods_infos;
				var t = [];
				for (var a = 0; a < r.length; a++) {
					if (r[a].selected == true) {
						t.push(r[a].asset_info.assetid)
					}
				}
				r = [];
				for (var a = 0; a < e.data.items.length; a++) {
					var i = e.data.items[a].asset_info.assetid;
					if (t.indexOf(i) > -1) {
						e.data.items[a].selected = true
					}
				}
				r = e.data.items;
				_();
				c()
			}
		})
	};
	var h = function () {
		$("body").on("focus", ".timepicker input", function () {
			if ($(this).parent().hasClass("disabled")) {
				$(this).blur();
				return false
			} else {
				var e = $(".timepicker input").index(this);
				$(".timepicker-drop").eq(e).show()
			}
		}).on("blur", ".timepicker input", function () {
			$(this).removeClass("i_Text_error");
			$('input[name="hours"]').removeClass("i_Text_error");
			$('input[name="minutes"]').removeClass("i_Text_error");
			var t = this;
			setTimeout(function () {
				var e = $(".timepicker input").index(t);
				$(".timepicker-drop").eq(e).hide()
			}, 200)
		}).on("keypress", ".timepicker input", function () {
			return false
		}).on("keypress", "input[name='reward_count']", function () {
			var e = event.keyCode || event.charCode;
			var t = String.fromCharCode(e);
			return /\d/.test(t)
		}).on("click", ".timepicker-drop li", function () {
			$(this).addClass("on").siblings().removeClass("on");
			var e = $(this).parent().attr("data-for");
			$("#" + e).val($(this).html())
		}).on("change", '.w-Select[name="type"]', function () {
			var e = $(this).attr("value");
			if (e == u.PASSWORD) {
				$("#row_password").show()
			} else {
				$("#row_password").hide()
			}
		}).on("click", ".buff_backpack .switch_box .item-card", function () {
			tooltip.abortLast();
			var e = $(this).data("index");
			var t = 0;
			for (var a = 0; a < r.length; a++) {
				if (r[a].selected == true) t += 1
			}
			if (t >= n) {
				Buff.toast("超过最大可添加件数");
				return
			}
			r[e].selected = true;
			i.push(r[e]);
			_();
			c()
		}).on("click", ".prize_pool .switch_box .item-card", function () {
			tooltip.abortLast();
			var e = $(this).data("index");
			r[e].selected = false;
			_();
			c()
		}).on("change", '.w-Select[name="appid"]', function () {
			var e = $(this).attr("value");
			if (typeof l.appid != "undefined" && l.appid != e && t() > 0) {
				Buff.alert({
					title: "切换游戏",
					message: "切换游戏后，将清除已添加的奖池信息，你可以从“我的背包”中添加物品。",
					type: "error",
					confirmText: "确定切换",
					success: function () {
						l.appid = e;
						r = []
					},
					cancel: function () {
						Buff.setCompValue("app-select", l.appid)
					},
					onClose: function () {
						Buff.setCompValue("app-select", l.appid)
					}
				})
			}
		}).on("blur", "#search", function () {
			if (s.length < 1) {
				$("#search-area").hide();
				$("#btn-search").show()
			}
		}).on("input", "#search", function () {
			s = $(this).val();
			_()
		}).on("change", "input,textarea,.w-Select", function () {
			$(this).removeClass("i_Text_error")
		}).on("click", "#go_steam_inventory", function () {
			window.open("/market/steam_inventory?game=" + BuffConfig.SteamAPP.APPID_MAPS[l.appid])
		});
		$("#refresh_backpack").click(function () {
			m()
		});
		$(".step_tab.info").click(function () {
			e()
		});
		$(".step_tab.pool").click(function () {
			if (p()) {
				a();
				m()
			}
		});
		$("#set_pool").click(function () {
			if (p()) {
				a();
				m()
			}
		});
		$("#publish_room").click(function () {
			if (f()) {
				Buff.alert({
					title: "创建免费饰品活动",
					message: "免费饰品活动创建后不能取消，请确认是否创建。",
					success: function () {
						sendRequest("/api/roll/room/create", {
							method: "POST",
							data: l,
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error)
								} else {
									window.location.href = "/roll/room/" + e.data.id
								}
							}
						})
					},
					confirmText: "确认创建",
					cancelText: "取消创建"
				})
			}
		});
		$("#set_info").click(function () {
			e()
		});
		$("#btn-search").click(function () {
			$(this).hide();
			$("#search-area").css({
				display: "inline-block"
			})
		})
	};
	return {
		init: h
	}
};
$(function () {
	if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
		if (typeof WebViewInfo != "undefined" && WebViewInfo.webview_from) return;
		if (getCookie("webview_from")) return;
		if (window.g && window.g.is_partner_appid) return;
		var e = '<div id="app-download-bar" style="">' + '<img src="/static/images/app_logo.jpg" class="app-logo">' + "<h3>" + i18n("platform_name") + "</h3>" + "<h5>" + i18n("slogan") + "</h5>" + '<a class="download-btn" href="https://adl.netease.com/d/g/buff/c/gw">' + i18n("download") + "</a>" + "</div>";
		$("body").prepend(e);
		var t = parseInt($("body").css("padding-top")) || $("#app-download-bar").height();
		$("body").css({
			"padding-top": t
		})
	}
});
var PreviewScreenShots = function () {
	var s = "";
	var c = function () {
		return s == "my_shop_selling" ? "top_bookmark" : s
	};
	var n = function (n, r) {
		var o = {
			selling: {
				row: "tr.selling",
				img: "td.img_td img"
			},
			top_bookmark: {
				row: "li.top_bookmark",
				img: "a.img_a img"
			},
			my_inventory: {
				row: "li.my_inventory",
				img: "a.img_a img"
			},
			my_selling: {
				row: "li.my_selling",
				img: "a.img_a img"
			},
			my_shop_selling: {
				row: "li.my_shop_selling",
				img: "a.img_a img"
			}
		};
		$(o[s]["row"]).each(function (e) {
			var t = $(this);
			var a = t.find(o[s]["img"]);
			if (a.data(n)) {
				var i = a.parent();
				if (n == "inspect_trn_url" && !a.data("src_url_max_width")) {
					if (c() == "my_selling") {
						a.data("src_url_max_width", "70%");
						a.data("src_url_max_height", "none")
					} else {
						a.data("src_url_max_width", a.css("max-width"));
						a.data("src_url_max_height", a.css("max-height"))
					}
					a.data("src_url_margin_top", "auto")
				}
				if (a.hasClass("lazy")) {
					a.attr("data-original", a.data(n))
				}
				i.css("background-image", "url('" + i.data(n + "_background") + "')");
				a.attr("src", a.data(n));
				a.css("max-width", a.data(n + "_max_width"));
				a.css("max-height", a.data(n + "_max_height"));
				a.css("margin-top", a.data(n + "_margin_top"))
			}
			if (r) {
				r(a.siblings("a.csgo-inspect-view").first(), a.data(n))
			}
		})
	};
	var e = function (e, t, i) {
		s = e;
		var a = function (e, t, a) {
			if (c() == "selling" && i) {
				i(c(), e, t ? a : "false")
			}
		};
		if (t) {
			n("inspect_trn_url", function (e, t) {
				a(e, t, "true")
			})
		}
	};
	return {
		init: e
	}
};
var PreviewScreenShotsDataGenerator = function (h) {
	var e = function (e, t, a, i) {
		var n = $("#inventory_price").val();
		var r = "sell_min_price";
		var o = g.currency.default;
		if (n && n == "steam") {
			r = "steam_price";
			o = "USD"
		}
		for (var s = 0; s < e.length; s++) {
			var c = e[s];
			var _ = s >= i ? "lazy" : "";
			var l = c.asset_info.info.inspect_trn_url;
			var u = c.asset_info.info.icon_url;
			var d = c.can_use_inspect_trn_url;
			var p = "";
			var f = d ? l : u;
			if (_) {
				p = d ? l : u;
				f = d ? t : ""
			}
			e[s]["lazy_class"] = _;
			e[s]["original_img"] = p;
			e[s]["img_src"] = f;
			if (h == OriginConst.INVENTORY) {
				var m = c[r] || 0;
				e[s]["item_info"] = {
					price: m,
					state: c.state,
					state_text: c.state_text,
					tradable_text: c.tradable_text,
					original_currency: o,
					sell_order_id: c.sell_order_id,
					sell_order_mode: c.sell_order_mode
				}
			} else {
				e[s]["order_info"] = v(c)
			}
		}
	};
	var v = function (e) {
		return {
			id: e.id,
			goods_id: e.goods_id,
			price: e.price,
			allow_bargain: e.allow_bargain,
			allow_bargain_chat: e.allow_bargain_chat,
			user_id: e.user_id,
			description: e.description,
			lowest_bargain_price: e.lowest_bargain_price,
			mode: e.mode,
			bookmarked: e.bookmarked,
			state: e.state,
			sticker_premium: e.sticker_premium
		}
	};
	return {
		process: e,
		collect_order_info: v
	}
};
var splitPayPopup = function () {
	"use strict";
	var e = 6;
	var t = 7;
	var l = [e, t];
	var a = 44;
	var i = 45;
	var u = [a, i];
	var n = 18;
	var r = g.game;
	var s = 0;
	var c = null;
	var d = null;
	var p = {};
	var o, _, f, m, h = null,
		v = null,
		y = function (s, e, c, _) {
			sendRequest("/api/market/goods/buy/split_pay/preview", {
				data: {
					price: c,
					bill_order_id: s,
					sell_order_id: e
				},
				dataType: "json",
				method: "GET",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					var t = e.data.pay_methods;
					for (var a = 0; a < t.length; a++) {
						var i = t[a];
						var n = i.amount_range;
						p[i.value] = {
							min_amount: parseFloat(n.min_amount).toFixed(2) * 100,
							max_amount: parseFloat(n.max_amount).toFixed(2) * 100
						}
					}
					$(".splitpay-moneys").append(template_render("pay_amount_pat", {
						items: e.data.hints
					}));
					var r = {};
					u.forEach(function (e) {
						r[e] = "icon_wy_red"
					});
					l.forEach(function (e) {
						r[e] = "icon_wx_green"
					});
					var o = template_render("pay_method_pat", {
						items: e.data.pay_methods,
						icon_class_map: r
					});
					$(".splitpay-pay-method").append(o);
					if (!d) {
						d = {
							min_amount: parseFloat(e.data.min_amount).toFixed(2) * 100,
							max_amount: parseFloat(e.data.max_amount).toFixed(2) * 100,
							total_price: c
						}
					}
					if (s) {
						S(_)
					} else {
						e.data.pay_methods.forEach(function (e) {
							if (e.selected) {
								E(e.value)
							}
						});
						$(".splitpay-moneys span:first").click()
					}
				},
				error: function () {
					$("#loading-cover").hide();
					Popup.hide();
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("the_system_is_busy_please"),
						hideCancel: true,
						success: function () {
							window.location.href = "/market/buy_order/history?game=" + r
						}
					})
				}
			})
		},
		b = function (t) {
			sendRequest("/api/market/goods/buy", {
				data: {
					game: r,
					goods_id: f.goods_id,
					sell_order_id: f.sell_order_id,
					price: f.price,
					pay_method: f.pay_method,
					allow_tradable_cooldown: f.allow_tradable_cooldown,
					token: getParams().token || "",
					cdkey_id: f.cdkey_id
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					m = e.data.id;
					w(t)
				},
				error: function () {
					$("#loading-cover").hide();
					Popup.hide();
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("the_system_is_busy_please"),
						hideCancel: true,
						success: function () {
							window.location.href = "/market/buy_order/history?game=" + r
						}
					})
				},
				complete: function (e) {
					if (e.responseJSON.code == "Realname Required" || e.responseJSON.code == "Market Ban Epay Balance" || e.responseJSON.code == "Seller Realname Required") {
						$(".pay-btn").removeClass("i_Btn_disabled")
					}
				}
			})
		},
		w = function (e, t) {
			var t = t || M();
			sendRequest("/api/market/bill_order/split_pay/pay", {
				data: {
					game: r,
					bill_order_id: m,
					amount: e,
					pay_method: t
				},
				dataType: "json",
				method: "POST",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					L(t)
				},
				error: function () { }
			})
		},
		k = function (e) {
			if (e == 0) {
				return "00"
			} else if (e > 0 && e < 10) {
				return "0" + e
			}
			return "" + e
		},
		x = function (e) {
			var t = $("span.split-pay-count-down");
			var a = parseInt(e);
			if (a >= 0) {
				var i = moment.duration(a, "seconds");
				t.text(k(i.minutes()) + ":" + k(i.seconds()));
				$(".tip_count_down").show()
			}
		},
		C = function (e) {
			sendRequest("/api/market/bill_order/notify_buyer_to_send_offer", {
				method: "POST",
				dataType: "json",
				data: {
					bill_order_id: e.id,
					game: e.game
				},
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
				}
			})
		},
		T = function (e) {
			var t = e.id;
			sendRequest("/api/market/bill_order/ask_seller_to_send_offer", {
				method: "POST",
				dataType: "json",
				data: {
					bill_orders: [t],
					game: e.game
				},
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						})
					} else if (e.data[t] != "OK") {
						Buff.toast(e.data[t], {
							type: "error"
						})
					} else {
						Buff.toast(i18n("please_wait_for_seller_to"), {
							type: "success"
						})
					}
					setTimeout(function () {
						window.location.reload()
					}, 3e3)
				}
			})
		},
		P = function (e) {
			return e.mode == 2 && e.state == "TO_DELIVER" || e.mode == 5 && e.progress == 305 || e.state == "SUCCESS" || false
		},
		B = function (e, a) {
			sendRequest("/api/market/bill_order/batch/info", {
				data: {
					bill_orders: e
				},
				dataType: "json",
				method: "GET",
				showLoading: false,
				showError: false,
				success: function (e) {
					if (e.code != "OK") {
						return
					}
					if (e.data.items.length != 1) {
						return
					}
					var t = e.data.items[0];
					a.notify(t);
					if (P(t)) {
						a.resolve(t)
					}
					if (f.pay_method == n) {
						if (t.progress == 104 || t.progress == 102 && t.pay_expire_timeout <= 0) {
							a.reject(t)
						} else if (t.progress == 102) {
							a.progress()
						}
					}
				},
				error: function () { }
			})
		},
		j = function () {
			$("#j_popup_wx").addClass("expired");
			$("#popup_cont_paying").hide();
			$("#popup_cont_expired").show();
			$(".tip_count_down").hide();
			$(".tip_timeout").show()
		},
		F = function (e, t) {
			if (v) {
				return
			}
			if (t <= -1) {
				return
			}
			var a = 0,
				i = t,
				n = false;
			var r = $.Deferred();
			r.done(function (e) {
				n = true;
				Popup.hide();
				clearInterval(h);
				h = undefined;
				if (e.mode == 5) {
					$("#j_popup_payed").remove();
					var t = template_render("manual_plus_pay_success_pat");
					$("body").append(t);
					$("#j_popup_payed #go_to_app,.popup-close").click(function () {
						Popup.hide();
						C(e);
						Buff.toast(i18n("add_in_5_minutes_to"), {
							type: "success"
						});
						setTimeout(function () {
							window.location.reload()
						}, 3e3)
					});
					$("#j_popup_payed #ask_seller").click(function () {
						Popup.hide();
						T(e)
					});
					Popup.show("j_popup_payed")
				} else {
					Buff.alert({
						type: "success",
						title: e.mode == 2 ? i18n("the_payment_is_successful") : i18n("buy_success"),
						message: e.mode == 2 ? i18n("please_wait_for_the_seller") : e.mode == 7 ? i18n("buy_success") : i18n("please_in_the_backpack_view"),
						hideCancel: true,
						success: function () {
							window.location.reload()
						}
					})
				}
			});
			r.fail(function (e) {
				n = true;
				clearInterval(h);
				h = undefined;
				if (e.progress == 104) {
					$(".tip_count_down").hide()
				} else if (e.progress == 102 && e.pay_expire_timeout <= 0) {
					j()
				}
			});
			r.progress(function () {
				n = true;
				if (h) {
					S()
				}
			});
			if (h) {
				return
			}
			h = setInterval(function () {
				a += 1;
				if (a == 1 || a <= i && n) {
					n = false;
					e(m, r)
				} else if (a > i) {
					if (!h) {
						return
					}
					clearInterval(h);
					h = null;
					if (!v) {
						j()
					}
					return
				}
				x(Math.max(i - a, 0))
			}, 1e3)
		},
		L = function (n) {
			var t = {};
			var a = "/api/market/bill_order/wx_pay_qrcode";
			l.forEach(function (e) {
				t[e] = a
			});
			var i = "/api/market/bill_order/epay_page_pay";
			u.forEach(function (e) {
				t[e] = i
			});
			sendRequest(t[n], {
				data: {
					bill_order_id: m
				},
				dataType: "json",
				method: "GET",
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					$("#wx-pay-qrcode").html("");
					$("#wx-pay-qrcode").attr("title", "");
					var t = e.data;
					var a = t.pay_expire_timeout;
					var i = l.includes(n) ? t.url : t.elements.url;
					q("paying", i);
					if (!h) {
						clearInterval(v);
						v = null;
						$(".tip_count_down").hide();
						setTimeout(function () {
							F(B, a)
						}, 2500)
					}
				},
				error: function () { }
			})
		},
		S = function (o) {
			sendRequest("/api/market/bill_order/split_pay/order_info", {
				data: {
					game: r,
					bill_order_id: m
				},
				dataType: "json",
				method: "GET",
				showLoading: false,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "warning"
						});
						return
					}
					s = e.data.paid_price;
					$("#paid_amount_text").text(formatPriceNormalYuan(s));
					_ = e.data.remained_price;
					var a = e.data.pay_expire_timeout;
					if (a != -1) {
						$("#unpaid_amount_text").text(formatPriceNormalYuan(_))
					}
					var t = parseFloat(parseInt(s) / (parseInt(_) + parseInt(s))).toFixed(2) * 100 + "%";
					$(".scope-progress-bar").css("width", t);
					var i = e.data.pay_orders;
					var n = {
						PAYING: "c_Yellow",
						PAY_SUCCESS: "c_Green",
						REFUNDING: "c_Red",
						REFUNDED: "c_Red",
						FAILURE: "c_Red"
					};
					c = null;
					for (var r = 0; r < i.length; r++) {
						if (i[r].state == "PAYING") {
							c = i[r]
						}
						i[r].state_text_class = n[i[r].state];
						i[r].real_price_text_class = i[r].state == "PAYING" || i[r].state == "PAY_SUCCESS" ? "c_Orange" : "c_Gray"
					}
					$("#splitpay-list").html("");
					if (o && !c && a <= -1) {
						m = null;
						s = 0;
						O("");
						$("#paid_amount_text").text("");
						$(".scope-progress-bar").css("width", "0%");
						return
					}
					$("#splitpay-list").html(template_render("pay_record_list_pat", {
						items: i
					}));
					$("#splitpay-list").show();
					if (_ == 0) {
						return
					}
					if (c) {
						if (o) {
							O(c.real_price);
							E(c.pay_method_value);
							w(c.real_price, c.pay_method_value)
						} else if (I(c, $(".i_Text_splitpay").val())) {
							q("paying")
						}
					} else {
						clearInterval(h);
						h = null;
						$(".tip_count_down").hide();
						q();
						setTimeout(function () {
							if (h) {
								return
							}
							if (v) {
								return
							}
							if (a <= -1) {
								return
							}
							var e = 0,
								t = a;
							v = setInterval(function () {
								if (!v) {
									return
								}
								e += 1;
								if (e > t) {
									clearInterval(v);
									v = null;
									if (!h) {
										j()
									}
									return
								}
								x(Math.max(t - e, 0))
							}, 1e3)
						}, 2e3)
					}
				},
				error: function () {
					$("#loading-cover").hide();
					Popup.hide();
					Buff.alert({
						title: i18n("prompt"),
						message: i18n("the_system_is_busy_please"),
						hideCancel: true,
						success: function () {
							window.location.href = "/market/buy_order/history?game=" + r
						}
					})
				}
			})
		},
		N = function (e, t) {
			f = e;
			var a, i, n, r = true,
				o = false,
				s = false,
				c;
			if (!$.isEmptyObject(t)) {
				n = t.price;
				c = "";
				m = t.id;
				f = t;
				f.discounted_price = n;
				if (P(t)) {
					a = false;
					i = true;
					o = true
				} else {
					switch (t.state) {
						case "FAIL":
							a = false;
							i = true;
							c = "¥0";
							r = false;
							break;
						case "PAYING":
							a = true;
							i = false;
							break;
						default:
							a = false;
							i = true;
							o = true;
							break
					}
					if (t.state == "FAIL" && (t.progress == 106 || t.progress == 105)) {
						o = true;
						r = true
					}
					if (t.state == "FAIL" && t.progress == 104) {
						s = true
					}
					if (t.state == "PAYING" && t.pay_expire_timeout <= -1) {
						i = true;
						a = false
					}
				}
			} else {
				n = f.discounted_price;
				c = formatPriceNormalYuan(n);
				i = false;
				a = true
			}
			$("#j_popup_wx").remove();
			$("body").append($(template_render("split_pay_pat", {
				unpaid_amount: c,
				total_price: n,
				total_price_text: formatPriceNormalYuan(n),
				paid_amount_text: "¥0",
				only_order_list: i,
				show_progress_bar: r,
				show_paid_info: o,
				show_fail_reason: s
			})));
			Popup.show("j_popup_wx");
			Buff.pricePatten("input[name=paid_amount]");
			if (!i) {
				y(f.id, f.sell_order_id, n, a)
			} else {
				if (m) {
					S(a)
				}
			}
		},
		O = function (e) {
			$(".i_Text_splitpay").val(e)
		},
		E = function (e) {
			$(".splitpay-pay-method li.pay_method_item").removeClass("on");
			$(`.splitpay-pay-method li.pay_method_item[value=${e}]`).addClass("on")
		},
		D = function (e, t) {
			if (e == "paying") {
				var a = i18n("scan_qr_code_to_pay");
				$("#popup_cont_paying").html(`<div id="wx-pay-qrcode"></div><p style="margin-top: 12px"><i class="icon2x icon_wx_green"></i>${a}</p>`);
				if (t) {
					new QRCode(document.getElementById("wx-pay-qrcode"), {
						text: t,
						width: 140,
						height: 140
					})
				}
			} else {
				var a = i18n("go_to_pay");
				$("#popup_cont_expired").html(`<img src="/static/images/pics/wx-qrcode.png"class="pay_qr_code"style="margin:auto;"width="140"height="140"><div class="qr-mask"><a href="javascript:;"class="i_Btn_splitpay"><i class="icon2x icon_wx_white"></i>${a}</a></div>`)
			}
		},
		z = function (e, t) {
			if (e == "paying") {
				var a = i18n("paying_detecting");
				$("#popup_cont_paying").html(`<div class="qr-mask"><a href="javascript:;"class="i_Btn_splitpay is-red"id="epay-pay-url">${a}</a></div>`);
				if (t) {
					$("#epay-pay-url").attr("pay_url", t)
				}
			} else {
				var a = i18n("go_to_pay");
				$("#popup_cont_expired").html(`<img class="pay_qr_code"style="margin:auto;opacity: 0;"width="140"height="140"><div class="qr-mask"><a href="javascript:;"class="i_Btn_splitpay is-red"><i class="icon2x icon_wy_white"></i>${a}</a></div>`)
			}
		},
		q = function (e, t) {
			var a = M();
			l.includes(a) ? D(e, t) : z(e, t);
			if (e == "paying") {
				$("#popup_cont_paying").show();
				$("#popup_cont_expired").hide();
				if (u.includes(a)) {
					window.open(t, "_blank").focus()
				}
			} else {
				$("#popup_cont_paying").hide();
				$("#popup_cont_expired").show()
			}
		},
		R = function (e) {
			var t = parseFloat(_).toFixed(2) * 100;
			if (e > t) {
				$(".i_Text_splitpay").val(_)
			}
		},
		A = function (e) {
			var t = parseFloat(e).toFixed(2) * 100;
			var a = d["min_amount"];
			var i = d["max_amount"];
			if (t < a) {
				if (t != parseFloat(f.discounted_price - s).toFixed(2) * 100) {
					var n = parseFloat(a / 100);
					Buff.toast(i18n("split_pay_min_amount_invalidate", {
						amount: formatPriceNormalYuan(n)
					}));
					$(".i_Text_splitpay").addClass("i_Text_splitpay_error");
					return false
				}
			}
			if (t > i) {
				var r = parseFloat(i / 100);
				Buff.toast(i18n("split_pay_max_amount_invalidate", {
					amount: formatPriceNormalYuan(r)
				}));
				$(".i_Text_splitpay").addClass("i_Text_splitpay_error");
				return false
			}
			R(t);
			return true
		},
		I = function (e, t) {
			if (e && t == e.real_price && e.pay_method == M()) {
				return true
			}
			return false
		},
		M = function () {
			return parseInt($(".splitpay-pay-method li.on").attr("value"))
		},
		G = function () {
			$(document).on("blur", ".i_Text_splitpay", function () {
				var e = $(this).val();
				if (e) {
					if (!A(e)) {
						return
					}
				}
				if (I(c, e)) {
					return
				}
				q()
			});
			$(document).on("click", ".splitpay-moneys span.normal", function () {
				$(".i_Text_splitpay").removeClass("i_Text_splitpay_error");
				O($(this).text());
				R(parseFloat($(this).text()).toFixed(2) * 100);
				q()
			});
			$(document).on("click", ".splitpay-moneys span.remaining_all", function () {
				$(".i_Text_splitpay").removeClass("i_Text_splitpay_error");
				var e = parseInt(f.discounted_price * 1e3 / 10),
					t = parseInt(s * 1e3 / 10);
				O((e - t) / 100);
				q()
			});
			$(document).on("click", ".i_Btn_splitpay", function () {
				if (!$(".i_Text_splitpay").val()) {
					Buff.toast("请填写金额");
					return
				}
				if (!A($(".i_Text_splitpay").val())) {
					return
				}
				if (!M()) {
					Buff.toast("请选择支付方式");
					return
				}
				var e = $(".i_Text_splitpay").val();
				if (!m) {
					b(e)
				} else {
					w(e)
				}
			});
			$(document).on("click", "#splitpay-list li", function () {
				if ($(this).data("state") == "PAYING") {
					var e = $(this).data("pay_method_value");
					var t = $(this).data("price");
					O(t);
					E(e)
				}
			});
			$(document).on("click", ".cancel_split_pay", function () {
				Popup.hide();
				if (!m) {
					window.location.reload();
					return
				}
				Buff.alert({
					title: i18n("split_pay_cancel_order_title"),
					message: i18n("split_pay_cancel_order_content"),
					confirmText: i18n("split_pay_continue_to_pay"),
					cancelText: i18n("split_pay_confirm_leave"),
					success: function () {
						Popup.show("j_popup_wx")
					},
					cancel: function () {
						$("#loading-cover").show();
						sendRequest("/api/market/bill_order/close_pay_order", {
							data: {
								game: r,
								bill_order_id: m
							},
							dataType: "json",
							method: "POST",
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error, {
										type: "warning"
									});
									return
								}
								Buff.toast("取消成功", {
									type: "success"
								});
								window.location.reload()
							},
							error: function () {
								$("#loading-cover").hide();
								Buff.toast(i18n("the_system_is_busy_please"), {
									type: "warning"
								})
							}
						})
					}
				})
			});
			$(document).on("click", "#j_popup_wx .popup-split-pay-close", function () {
				Popup.hide();
				if (!m || $("#j_popup_wx").hasClass("expired")) {
					window.location.reload();
					return
				}
				var e = $.Deferred();
				e.done(function (e) { });
				e.fail(function (e) { });
				e.progress(function (e) {
					if (e.pay_expire_timeout > -1) {
						Buff.alert({
							title: i18n("waiting_for_payment"),
							message: i18n("you_havent_successfully_paid_the"),
							confirmText: i18n("continue_to_pay"),
							cancelText: i18n("confirm_leave"),
							success: function () {
								Popup.show("j_popup_wx")
							},
							cancel: function () {
								window.location.reload()
							},
							onClose: function () {
								window.location.reload()
							}
						})
					}
				});
				B(m, e)
			});
			$(document).on("click", ".splitpay-pay-method li.pay_method_item", function () {
				$(".splitpay-tips").hide();
				var e = $(this).attr("description");
				if (e) {
					$("span.pay_method_tips").text(e);
					$(".splitpay-tips").show()
				}
				E($(this).attr("value"));
				q()
			});
			$(document).on("click", "#epay-pay-url", function () {
				window.open($(this).attr("pay_url"), "_blank").focus()
			})
		};
	return function () {
		if (!o) {
			G();
			o = {
				show: N
			}
		}
		return o
	}
}();
var payPasswordPopup = function (t, i, e, a) {
	var n = "j_popup_pay_password",
		r = "#" + n,
		o = "#j_passwords input",
		s = "#j_password_hidden input";
	var c = function () {
		console.log(t);
		var e = $(r);
		e.remove();
		a = a == undefined ? true : a;
		$("body").append($(template_render("pay_password_pat", {
			pay_price: formatPriceNormalYuan(t),
			other_pay_way: a
		})));
		Popup.show(n);
		$(o).eq(0).focus()
	};
	var _ = function () {
		return $(o)
	};
	var l = function () {
		return $(s)
	};
	var u = function () {
		$(document).off("click", r + " .other_pay_method");
		$(document).on("click", r + " .other_pay_method", function () {
			e()
		});
		$(document).off("input", o).off("keydown", o).off("focus", o);
		$(document).on("input", o, function (e) {
			var t = _();
			var a = l();
			var i = t.index(this);
			a.eq(i).val($(this).val());
			n();
			if ($(this).val() == "") {
				if (i != 0) {
					t.eq(i - 1).focus()
				}
			} else {
				$(this).val("*");
				if (i != 5) {
					t.eq(i + 1).focus()
				} else { }
			}
		}).on("keydown", o, function (e) {
			var t = _();
			var a = t.index(this);
			if (e.keyCode == 32) {
				e.preventDefault();
				return false
			} else if (e.keyCode == 8) {
				if (a != 0 && $(this).val() == "") {
					t.eq(a - 1).focus()
				}
			} else {
				if (a != 5 && $(this).val() != "") {
					setTimeout(function () {
						t.eq(a + 1).focus()
					}, 300)
				}
			}
		}).on("focus", o, function (e) { });

		function n() {
			var e = l();
			var a = "";
			$.each(e, function (e, t) {
				a += $.trim($(t).val())
			});
			if (a.length == 6) {
				setTimeout(function () {
					i(a)
				}, 300)
			}
		}
	};
	u();
	return {
		show: c
	}
};
var ItemDetailPopupDecorator = function (c) {
	var a = function () {
		var e = OriginConst.SELECTOR_MAP;
		var s = [];
		$(e[c]).each(function (e, t) {
			var a = $(this);
			var i = null;
			var n = null;
			if ([OriginConst.INVENTORY, OriginConst.MY_SELLING].includes(c) && a.data("order-extra")) {
				n = a.data("order-extra") || {}
			}
			var r = a.data("order-info");
			if ([OriginConst.INVENTORY].includes(c)) {
				r = null;
				i = a.data("item-info")
			}
			var o = {
				goods_info: a.data("goods-info"),
				asset_info: a.data("asset-info"),
				seller: null,
				seller_stats: null
			};
			o["order_extra"] = n || {};
			if (r) {
				o["sell_order"] = r
			}
			if (i) {
				o["item_info"] = i
			}
			s.push(o)
		});
		return s
	};
	var e = function (e) {
		var t = a();
		if (!t.length) {
			return
		}
		ItemDetailPopup(c, e).show(t)
	};
	return {
		show: e
	}
};
var request_share_qr_code = function (e, t) {
	sendRequest("/api/market/get_share_qr_code", {
		method: "POST",
		async: false,
		showLoading: false,
		data: e,
		success: function (e) {
			t && t(e)
		}
	})
};
var ClipboardProxy = function () {
	var e = null;
	var t = null;
	var a = function (e, i, n, r) {
		if (t) {
			t.destroy()
		}
		if (n || r) {
			t = new ClipboardJS(e, {
				text: function (t) {
					if (r) {
						var e = r();
						if (e) {
							return e
						}
					}
					var a = $("#j_copy").data("item_info") || i;
					request_share_qr_code(a, function (e) {
						if (e.code == "Get Share Code Retry Later" || !e.data) {
							$(t).attr("data-copy_text", "");
							return
						}
						$(t).attr("data-copy_text", e.data)
					});
					var e = $(t).attr("data-copy_text");
					n && n(e);
					return e
				}
			})
		} else {
			t = new ClipboardJS(e)
		}
		t.on("success", function (e) {
			Buff.toast(i18n("copy_to_clipboard_success"), {
				type: "success"
			})
		});
		t.on("error", function (e) {
			Buff.toast(i18n("request_in_queue"), {
				type: "error"
			})
		})
	};
	return function () {
		if (!e) {
			e = {
				copy: a
			}
		}
		return e
	}
}();
var ItemDetailPopup = function (u, n) {
	var _ = "j_popup_item_detail";
	var r = 20;
	var l = [];
	var d = {};
	var p = null;
	var f = 20;
	var a = 88;
	var i = 0;
	var e = false;
	var m = "#j_inspect_down",
		h = "#j_inspect_up",
		v = "#j_inspect-nav-list",
		y = v + " ul",
		o = v + " li";
	var s = function () {
		$("html").css("overflow-y", "hidden")
	};
	var b = function () {
		$("html").css("overflow-y", "auto")
	};
	var c = function () {
		var e = $(o).index($(o + ".on"));
		$("#j_inspect-nav-list").scrollTop(e * a)
	};
	var w = function () {
		var a = $.map(Object.keys(d), function (e) {
			return parseInt(e)
		});
		var e = OriginConst.SELECTOR_MAP;
		$(e[u]).each(function (e, t) {
			if (a.includes(e)) {
				sync_container_data($(t), l[e].order_extra);
				adjust_edit_entry_display($(t).find("a.asset-remark-edit"), l[e].order_extra)
			}
		})
	};
	var k = function (e) {
		var t = OriginConst.SELECTOR_MAP;
		$(t[u]).eq(p).attr("data-qr_code_url", e)
	};
	var x = function () {
		var e = OriginConst.SELECTOR_MAP;
		return $(e[u]).eq(p).attr("data-qr_code_url")
	};
	var C = function () {
		var t = function () {
			$("#" + _).removeClass("showing");
			document.activeElement.blur();
			$("#" + _).hide();
			b();
			w()
		};
		$(document).off("click", "#j_close_respect").on("click", "#j_close_respect", function () {
			t()
		});
		window.close_popup = function () {
			if (window.event.target.id == _) {
				t()
			}
		};
		var a = function (e) {
			if (p != e) {
				$(".item_detail_popup_nav_item").removeClass("on");
				$(".item_detail_popup_nav_item").eq(e).addClass("on");
				p = e;
				E(l[e])
			}
		};
		$(document).keydown(function (e) {
			if ($(".popup-inspect-cont").data("open_gallery") == "1") {
				return
			}
			if (!$("#" + _).hasClass("showing")) {
				return
			}
			if (e.keyCode == 38) {
				a(Math.max(p - 1, 0))
			} else if (e.keyCode == 40) {
				a(Math.min(p + 1, l.length - 1))
			} else if (e.keyCode == 27) {
				t()
			}
		});
		$(document).off("click", ".item_detail_popup_nav_item").on("click", ".item_detail_popup_nav_item", function () {
			var e = $(".item_detail_popup_nav_item").index(this);
			a(e)
		});
		$(document).off("click", "#j_switcher_seller_stats span").on("click", "#j_switcher_seller_stats span", function () {
			var e = $(this).data("days");
			$("ul.seller-stats").hide();
			$("ul.seller-stats.days_" + e).show()
		});
		var i;
		$(document).off("mousedown", m).on("mousedown", m, function () {
			var t = $(y).height();
			i = setInterval(function () {
				var e = $(v).scrollTop();
				$(v).scrollTop(e + 5);
				if (e >= t - 656) {
					clearInterval(i);
					$(v).scrollTop(t - 656)
				}
			}, 10)
		}).off("mouseup", m).on("mouseup", m, function () {
			clearInterval(i)
		});
		$(document).off("mousedown", h).on("mousedown", h, function () {
			i = setInterval(function () {
				var e = $(v).scrollTop();
				$(v).scrollTop(e - 5);
				if (e <= 0) {
					clearInterval(i);
					$(v).scrollTop(0)
				}
			}, 10)
		}).off("mouseup", h).on("mouseup", h, function () {
			clearInterval(i)
		});
		$(document).off("mousewheel DOMMouseScroll", v).on("mousewheel DOMMouseScroll", v, function (e) {
			e.stopPropagation();
			var t = e.originalEvent.wheelDelta && (e.originalEvent.wheelDelta > 0 ? 1 : -1) || e.originalEvent.detail && (e.originalEvent.detail > 0 ? -1 : 1);
			var a = $(v).scrollTop();
			if (t < 0) {
				$(v).scrollTop(a + f)
			} else if (t > 0) {
				$(v).scrollTop(a - f)
			}
		});
		var e = null,
			n = null;
		var r = "#j_share_respect",
			o = "#j_share_popop";
		$(document).off("mouseenter", r).on("mouseenter", r, function () {
			clearTimeout(n);
			if ($(o).is(":visible")) return;
			$(o).show()
		}).off("mouseleave", r).on("mouseleave", r, function () {
			e = setTimeout(function () {
				$(o).hide()
			}, 400)
		});
		$(document).off("mouseenter", o).on("mouseenter", o, function () {
			clearTimeout(e);
			if ($(o).is(":visible")) return;
			$(o).show()
		}).off("mouseleave", o).on("mouseleave", o, function () {
			n = setTimeout(function () {
				$(o).hide()
			}, 400)
		});
		var s = selling();
		s.init_cancel_order();
		if (u == OriginConst.INVENTORY) {
			s.init_change_price()
		}
		$(document).off("click", ".sticker_item").on("click", ".sticker_item", function () {
			var e = $(this).data("goods-id");
			if (e) {
				window.open(`/goods/${e}`, "_blank")
			}
		});
		$(document).off("click", "span.inspected").on("click", "span.inspected", function () {
			var e = $(this).data("action_link");
			window.open(e, "_blank")
		});
		if ([OriginConst.INVENTORY, OriginConst.MY_SELLING].includes(u)) {
			var c = "#asset-remark-edit-place-holder";
			SteamAssetRemark().init(c, function (e, t, a) {
				$("#remark_content").text(a.remark || "");
				$(c).data("content", a.remark);
				$(c).data("buy_price", a.buy_price);
				l[p].order_extra = a;
				d[p] = true;
				w()
			})
		}
	};
	var T = function () {
		var e = $(v);
		var t = $(o).length;
		if (t >= r) {
			$(v).parent().addClass("inspect-nav_small");
			f = 40;
			a = 56
		}
		if (e.find("ul").height() > 656) {
			$(h).show();
			$(m).show()
		}
		s()
	};
	var P = function (e, t) {
		if (!t) {
			t = function (e) {
				console.log(e)
			}
		}
		var a = e.asset_info;
		var i = {
			appid: a.appid,
			classid: a.classid,
			instanceid: a.instanceid,
			origin: u,
			assetid: a.assetid,
			contextid: a.contextid
		};
		if (e.sell_order && e.sell_order.id) {
			i["sell_order_id"] = e.sell_order.id
		}
		if (u == OriginConst.INVENTORY && e.item_info.sell_order_id) {
			i["sell_order_id"] = e.item_info.sell_order_id
		}
		sendRequest("/api/market/item_desc_detail", {
			data: i,
			dataType: "json",
			method: "GET",
			success: function (e) {
				if (e.code != "OK") {
					Buff.toast(i18n("the_system_is_busyplease_try"));
					$("#" + _).hide();
					return
				}
				t(e.data)
			},
			error: function () {
				$("#loading-cover").hide();
				Popup.hide();
				Buff.alert({
					title: i18n("prompt"),
					message: i18n("the_system_is_busyplease_try"),
					hideCancel: true,
					success: function () { }
				})
			}
		})
	};
	var B = function (e) {
		var t = "bottom_btns_pat";
		if (u == OriginConst.INVENTORY) {
			var a = {
				STEAM_UNTRADABLE: 1,
				MARKET_UNTRADABLE: 2,
				MARKET_TRADABLE: 3
			};
			var i = e.item_info;
			var n = i.state,
				r = i.state_text,
				o = i.tradable_text,
				s = false,
				c = i18n("on_the_frame");
			if (n == a.STEAM_UNTRADABLE) {
				s = true;
				c = o || r
			} else if (n == a.MARKET_UNTRADABLE) {
				s = true;
				c = r
			}
			var _ = {
				price: e.price_info.price,
				goods_info: e.goods_info,
				asset_info: e.asset_info,
				sell_order: null,
				user: g.user,
				button_disabled: s,
				button_disabled_text: c,
				show_sell_or_disabled_btn: true
			};
			if (i.sell_order_id) {
				_["button_disabled_text"] = i18n("on_sale");
				_["button_disabled"] = true
			}
			return template_render(t, _)
		}
		var l = e.price_info;
		return template_render("bottom_btns_pat", {
			price: l.price,
			price_display: l.price_display,
			goods_info: e.goods_info,
			asset_info: e.asset_info,
			sell_order: e.sell_order,
			user: g.user,
			show_change_order_btn: [OriginConst.MY_SELLING, OriginConst.SELLING, OriginConst.STORE].includes(u),
			show_cancel_order_btn: [OriginConst.MY_SELLING, OriginConst.STORE].includes(u),
			show_sell_or_disabled_btn: false,
			hide_btns: u == OriginConst.BARGAIN_CHAT
		})
	};
	var j = function (e) {
		e["show_order_extra_remark"] = [OriginConst.MY_SELLING, OriginConst.INVENTORY].includes(u);
		if (e["show_order_extra_remark"]) {
			e["add_notes_text"] = e["order_extra"].remark ? i18n("notes_desc") : i18n("add_notes_desc")
		}
		e["bottom_html"] = B(e);
		e["user"] = g.user;
		e["show_bookmark_entry"] = ![OriginConst.MY_SELLING, OriginConst.INVENTORY].includes(u);
		var t = template_render("item_detail_popup_content_pat", e);
		var a = "inspect-content-container";
		$("#" + a).empty();
		$("#" + a).append(t);
		if (g.partner_appids.indexOf(e.goods_info.appid) > -1) {
			var i = e.asset_info.info.properties;
			if (i.gltf_url) {
				$("#inspect-canvas-container").html("");
				badlandersPreview().showWeapon(e.asset_info.assetid, e.goods_info.name, i, function (e) {
					$("#inspect-canvas-container").append($(e))
				})
			}
		}
		$("#" + _).show();
		var n = {
			goods_id: e.goods_info.goods_id,
			appid: e.goods_info.appid,
			assetid: e.asset_info.assetid,
			instanceid: e.asset_info.instanceid,
			classid: e.asset_info.classid,
			contextid: e.asset_info.contextid,
			qr_code_url: e.qr_code_url
		};
		$("#j_copy").data("item_info", null);
		O(n);
		T()
	};
	var S = function (e, t) {
		var a = new QRCode("share_qr_code", {
			width: 130,
			height: 130
		});
		a.clear();
		a.makeCode(t);
		a._el.title = "";
		ClipboardProxy().copy("#j_copy", e, null, function () {
			return x()
		})
	};
	var O = function (t) {
		$("#share_qr_code").empty();
		$("#j_copy").data("item_info", t);
		var e = x() || t.qr_code_url;
		if (e) {
			if ($(OriginConst.SELECTOR_MAP[u]).length == $(o).length) {
				k(e)
			}
			S(t, e);
			i = 0;
			return
		}
		request_share_qr_code(t, function (e) {
			if (e.code == "Get Share Code Retry Later" || !e.data) {
				if (i < 3) {
					setTimeout(function () {
						i++;
						O(t)
					}, 1e3)
				} else {
					i = 0
				}
				return
			}
			i = 0;
			if ($(OriginConst.SELECTOR_MAP[u]).length == $(o).length) {
				k(e.data)
			}
			S(t, e.data)
		})
	};
	var E = function (t, a) {
		P(t, function (e) {
			t["asset_info"]["descriptions"] = e.descriptions;
			t["asset_info"]["info"]["fraudwarnings"] = e.fraudwarnings;
			t["asset_info"]["info"]["stickers"] = e.stickers;
			if (u != OriginConst.INVENTORY && t.sell_order) {
				t["sell_order"]["bookmarked"] = e.bookmarked
			}
			t["csgo_inspect_allowed"] = e.csgo_inspect_allowed;
			t["csgo_paintwear_allowed"] = e.csgo_paintwear_allowed;
			t["csgo_paintwear_load_success"] = e.csgo_paintwear_load_success;
			t["show_game_cms_icon"] = e.show_game_cms_icon;
			t["cs2_inspect_info"] = e.cs2_inspect_info;
			t["click_store_name_jump"] = false;
			if (![OriginConst.INVENTORY, OriginConst.MY_SELLING, OriginConst.STORE].includes(u)) {
				t["seller_stats"] = !$.isEmptyObject(e.seller_stats) ? e.seller_stats : null;
				t["seller"] = !$.isEmptyObject(e.seller) ? e.seller : null;
				t["click_store_name_jump"] = !$.isEmptyObject(e.seller) ? true : false
			}
			t["tier_name"] = e.tier_name;
			t["fade_name"] = e.fade_name;
			t["ice_fire_name"] = e.ice_fire_name;
			t["phase_name"] = e.phase_name;
			t["phase_color"] = e.phase_color;
			t["rank"] = e.rank;
			t["rank_order_type"] = e.rank_order_type;
			t["qr_code_url"] = e.qr_code_url;
			t["stats"] = null;
			t["content_pic"] = e.content_pic;
			t["pic_with_bg"] = e.pic_with_bg;
			t["qr_code_url"] = e.qr_code_url;
			t["steam_asset_info"] = e.steam_asset_info;
			if (!$.isEmptyObject(e.stats)) {
				t["stats"] = {
					view_count_text: i18n("stat_view_count_text", {
						view_count: e.stats.view_count
					}),
					bookmark_count_text: i18n("stat_bookmark_count_text", {
						bookmark_count: e.stats.bookmark_count
					}),
					bargain_count_text: i18n("stat_bargain_count_text", {
						bargain_count: e.stats.bargain_count
					})
				}
			}
			j(t);
			if (a) {
				c()
			}
		})
	};
	var q = function (e, t) {
		var a;
		var i = "";
		if (e == OriginConst.INVENTORY) {
			var n = t.item_info;
			a = n && !$.isEmptyObject(n) ? formatPriceCustom(n.price, undefined, undefined, n.original_currency) : "";
			return {
				price: a,
				price_display: i
			}
		}
		if (!t.sell_order) {
			return {
				price: "",
				price_display: ""
			}
		}
		a = formatPriceYuan(t.sell_order.price);
		if ([OriginConst.MY_SELLING, OriginConst.TOP_BOOKMARK, OriginConst.STORE].includes(e)) {
			a = formatPriceCustom(t.sell_order.price, undefined, undefined)
		}
		if (e == OriginConst.SELLING && g.currency.rate_base_cny != 1) {
			i = formatPriceNormalCustom(t.sell_order.price)
		}
		return {
			price: a,
			price_display: i
		}
	};
	var t = function (e) {
		C();
		for (var t in e) {
			e[t]["price_info"] = q(u, e[t])
		}
		$("#" + _).remove();
		l = e;
		p = n;
		var a = e[p];
		var i = template_render("item_detail_popup_navi_pat", {
			selected_index: p,
			items: e,
			show_price: e.length < r
		});
		$("body").append(template_render("item_detail_popup_pat", {
			navi_bar: i,
			sell_order: a.sell_order || {}
		}));
		$("#" + _).addClass("showing");
		document.activeElement.blur();
		E(a, true);
		BargainChatManage().delegate_event()
	};
	return {
		show: t
	}
};
var CS2Inspect = function () {
	var e = function () {
		var e = getParamsFromHash();
		var t = e.page_num || 1;
		sendRequest("/api/market/cs2_inspect", {
			method: "GET",
			data: {
				page_num: t
			},
			dataType: "json",
			showLoading: false,
			retryLimit429: 10,
			retryCount429: 0,
			success: function (e) {
				console.log(e);
				if (e.code != "OK") {
					Buff.toast(e.error);
					return
				}
				var t = [];
				var a = e.data.items;
				PreviewScreenShotsDataGenerator(OriginConst.SELLING).process(a, e.data.preview_screenshots.bg_img || "", "selling", 10);
				for (var i = 0; i < a.length; i++) {
					t.push(template_render("inspect_item_pat", {
						item: a[i],
						goods_info: e.data.goods_infos[a[i].asset_info.goods_id]
					}))
				}
				var n = template_render("inspect_list_pat", {
					items_str: t.join("")
				});
				$(".detail-tab-cont").html(n);
				$("img.lazy").lazyload();
				ClipboardProxy().copy(".icon_clipboard");
				renderPagination({
					total_count: e.data.total_count,
					page_size: e.data.page_size,
					page_num: e.data.page_num,
					onPageClick: function (e, t) {
						t.preventDefault();
						updateHash("page_num", e);
						window.scrollTo(0, 0)
					}
				})
			}
		})
	};
	var t = function () {
		$(window).on("hashchange", function () {
			e()
		});
		$(document).off("click", ".icon_good_delete").on("click", ".icon_good_delete", function () {
			var t = $(this);
			var e = t.attr("item_id");
			sendRequest("/api/market/remove_cs2_inspect", {
				method: "POST",
				data: {
					item_id: e
				},
				showLoading: true,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					t.parent().parent().remove();
					Buff.toast(i18n("cs2_inspect_delete"))
				}
			})
		});
		var a = function () {
			if ($("#parse").hasClass("need_login")) {
				loginModule.showLogin();
				return
			}
			var e = $("#share_link_url").val();
			if (!e) {
				Buff.toast(i18n("cs2_inspect_input_share_link"));
				return
			}
			sendRequest("/api/market/add_cs2_inspect", {
				method: "POST",
				data: {
					link: e
				},
				showLoading: true,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error, {
							type: "error"
						});
						return
					}
					var t = e.data.item;
					if (!$("#inspect_item_" + t.id).length) {
						var a = template_render("inspect_item_pat", {
							item: t,
							goods_info: e.data.goods_info[t.asset_info.goods_id]
						});
						$(".list_tb_csgo").find("tr").eq(0).after(a);
						ClipboardProxy().copy(".icon_clipboard")
					}
					var i = "cs2_inspect_success";
					if (t.asset_info.info.inspect_state == 2) {
						i = "cs2_inspect_finish"
					}
					Buff.toast(i18n(i))
				}
			})
		};
		$(document).on("keyup", "#share_link_url", function (e) {
			var t = e.keyCode || e.charCode;
			if (t == 13) {
				a()
			}
		});
		$(document).off("click", "#parse").on("click", "#parse", function (e) {
			e.preventDefault();
			a()
		});
		e()
	};
	return {
		init: t
	}
};
var CustomInspect = function () {
	var se = {};
	var ce = [];
	var _e = "";
	var le = 1;
	var ue = 1;
	var de = undefined;
	var pe = "";
	var e = function () {
		let n;
		let r = false;
		const m = [{
			image: new Image,
			zIndex: 0,
			image_x: 0,
			image_y: 0,
			angle: 0,
			isSelcted: false,
			corners: [],
			cornerImgs: []
		}, {
			image: new Image,
			zIndex: 1,
			image_x: 0,
			image_y: 0,
			angle: 0,
			isSelcted: false,
			corners: [],
			cornerImgs: []
		}, {
			image: new Image,
			zIndex: 2,
			image_x: 0,
			image_y: 0,
			angle: 0,
			isSelcted: false,
			corners: [],
			cornerImgs: []
		}, {
			image: new Image,
			zIndex: 3,
			image_x: 0,
			image_y: 0,
			angle: 0,
			isSelcted: false,
			corners: [],
			cornerImgs: []
		}, {
			image: new Image,
			zIndex: 4,
			image_x: 0,
			image_y: 0,
			angle: 0,
			isSelcted: false,
			corners: [],
			cornerImgs: []
		}];
		const u = {
			image: new Image,
			img_x: 0,
			img_y: 0
		};
		let h = 4;
		let o;
		let d;
		let s = false;
		let L = true;
		let c = false;
		let p;
		const v = $(".inspect_canvas")[0];
		const f = v.getContext("2d");
		var N = function () {
			$("#refer-goods-img").attr("src", "");
			$("#go-marketplace").attr("href", "").hide();
			$(".skin-wrapper").css("background", "");
			$("#action_link_input").val("");
			$("#skin_input").attr("value", "");
			$("#inspect_in_game_input").val("");
			de = undefined;
			f.clearRect(-v.width, -v.height, v.width * 2, v.height * 2)
		};
		var D = function () {
			se = {};
			ce = [];
			_e = "";
			le = 1;
			ue = 1;
			N()
		};
		var z = function (e) {
			if (e === "knife") {
				$("#is_inspect_col").removeClass("is_inspect_col");
				$("#is_inspect_stickers").addClass("is_inspect_stickers");
				$(".custom-inspect-content").css("display", "none");
				$(".default_inspect").css("display", "block")
			} else if (e === "hands") {
				$("#is_inspect_stickers").addClass("is_inspect_stickers");
				$("#is_inspect_col").addClass("is_inspect_col");
				$(".custom-inspect-content").css("display", "none");
				$(".default_inspect").css("display", "block")
			} else {
				$("#is_inspect_stickers").removeClass("is_inspect_stickers");
				$("#is_inspect_col").removeClass("is_inspect_col");
				$(".custom-inspect-content").css("display", "block");
				$(".default_inspect").css("display", "none")
			}
		};
		var G = function () {
			var e = $("#select-type").attr("value");
			var t = $("#select-weapon").attr("value");
			var a = $("#skin_input").attr("value");
			var i = $("#paint_seed").val();
			if (e && t && a && i !== "") {
				$("#inspect_in_game_btn").removeClass("i_Btn_disabled");
				$("#inspect_in_cms_btn").removeClass("i_Btn_disabled")
			}
		};
		$(document).on("change", "#select-type", function () {
			D();
			var e = $("#select-type").attr("value");
			z(e);
			sendRequest("/api/market/custom_inspect/get_weapons", {
				method: "GET",
				data: {
					weapon_type: e
				},
				dataType: "json",
				showLoading: false,
				retryLimit429: 10,
				retryCount429: 0,
				success: function (e) {
					var t = $("#select-weapon ul");
					t.empty();
					for (var a in e.data) {
						t.append("<li value='" + a + "'>" + e.data[a] + "</li>")
					}
					$("#select-weapon").attr("init", false);
					Buff.initSelect("#select-weapon");
					Buff.setCompValue("select-weapon", " ", i18n("select_name"));
					$("#skin_input").val("")
				}
			})
		});
		$(document).on("click", "#select-weapon", function () {
			if ($("#select-type").attr("value") === undefined) {
				Buff.toast(i18n("please_select_weapon_type"))
			}
		});
		$(document).on("click", "#skin_input", function () {
			let e = $("#select-type").attr("value");
			let t = $("#select-weapon").attr("value");
			if (t === undefined && e === undefined) {
				Buff.toast("please_select_weapon_name_and_type");
				return
			}
			if (e === undefined) {
				Buff.toast(i18n("please_select_weapon_type"));
				return
			}
			if (t === undefined) {
				Buff.toast(i18n("please_select_weapon_name"));
				return
			}
		});
		$(document).on("change", "#select-weapon", function () {
			D();
			$("#skin_input").val("");
			var e = $(this).attr("value");
			sendRequest("/api/market/custom_inspect/get_skins", {
				method: "GET",
				data: {
					weapon_name: e
				},
				dataType: "json",
				showLoading: false,
				retryLimit429: 10,
				retryCount429: 0,
				success: function (e) {
					e.data.skins.forEach(function (e) {
						ce.push({
							paint_index: e["paint_index"],
							skin_name: e["skin_name"]
						});
						se[e["paint_index"]] = e
					})
				}
			})
		});
		$(document).on("change", "#paint_seed", function () {
			G()
		});
		let e = function () {
			var e = $("#select-type").attr("value");
			var t = $("#select-weapon").attr("value");
			var a = $("#skin_input").attr("value");
			var i = $("#paint_seed").val();
			if (!e || !t || !a) {
				Buff.toast(i18n("please_select_weapon_and_skin"));
				return false
			}
			if (i === undefined || i === "") {
				Buff.toast(i18n("please_select_paint_seed"));
				return false
			}
			return true
		};
		let K = function () {
			var e = $("#select-type").attr("value");
			var t = $("#select-weapon").attr("value");
			var a = $("#skin_input").attr("value");
			var i = $("#paint_seed").val();
			var n = $("#j_wear_input").val();
			var r = $("#name_tag").attr("value");
			var o = $("#is_stattrak").attr("value");
			var f = [];
			if (e !== "knife" && e !== "hands") {
				$(".inspect-sticker").each(function (e, t) {
					let a = $(this).find(".j_inspect_sticker_img img").attr("src");
					if (a !== undefined) {
						let e = $(this).find(".input_wrapper input").val();
						let t = $(this).attr("data-index");
						let [a, i] = $(this).attr("offset").split(" ");
						let [n, r] = $(".inspect-sticker-pos").eq(e).attr("data-xy").split(" ");
						let o = $(this).find(".inspect-sticker-pos");
						let s = $(o).attr("tag_id");
						let c = $(o).attr("tag_name");
						let _ = $(this).attr("rotation");
						let l = $(".inspect-sticker-pos").eq(e).attr("data-rotation");
						let u = _ - l;
						if (u === undefined) {
							u = 0
						} else {
							u = 360 - parseInt(u)
						}
						let d = {
							tag_id: s,
							sticker_name: c,
							sticker_slot: e,
							offset_x: a - n,
							offset_y: i - r,
							rotation: u,
							zindex: t
						};
						let p = $(this).find(".inspect-sticker-bar").val();
						if (p !== undefined && p !== 0) {
							d["sticker_wear"] = p / 100
						}
						f.push(d)
					}
				});
				f.sort((e, t) => e.zindex - t.zindex)
			}
			let s = {
				weapon_type: e,
				weapon_name: t,
				paint_index: a,
				paint_seed: i,
				stickers: f
			};
			if (n !== undefined && n !== 0) {
				s["weapon_wear"] = n
			}
			if (o === "1") {
				s["is_stattrak"] = o
			}
			if (r === "1") {
				s["has_name_tags"] = r
			}
			return s
		};
		let U = function () {
			sendRequest("/api/market/custom_inspect/cms_inspect", {
				data: K(),
				method: "POST",
				dataType: "json",
				showLoading: true,
				success: function (e) {
					if (e.code == "OK") {
						if (!e.data) {
							Buff.toast(e.msg);
							return
						}
						Buff.alert({
							title: i18n("cms_inspect_success_title"),
							message: i18n("cms_inspect_success_message"),
							rememberDismiss: "cms_inspect_success_cs2",
							hideCancel: true,
							confirmText: i18n("confirm"),
							success: function () {
								window.open(e.data, "_self");
								$("#inspect_in_cms_link").removeClass("i_Btn_disabled")
							}
						})
					} else {
						if (e.code == "CMS Server") {
							Buff.toast(i18n(e.error))
						} else {
							Buff.toast(e.error)
						}
					}
				}
			})
		};
		$("#inspect_in_game_btn").on("click", function () {
			if (!e() || $(this).hasClass("i_Btn_disabled")) {
				return
			}
			sendRequest("/api/market/custom_inspect/cs2_inspect", {
				method: "POST",
				data: K(),
				dataType: "json",
				showLoading: false,
				retryLimit429: 10,
				retryCount429: 0,
				success: function (e) {
					if (e.code != "OK") {
						Buff.toast(e.error);
						return
					}
					$("#inspect_in_game_link").removeClass("i_Btn_disabled").addClass("i_Btn_hollow");
					$("#inspect_in_game_input").val(e.data);
					window.open(e.data, "_blank")
				}
			})
		});
		$("#inspect_in_cms_btn").on("click", function () {
			if (!e() || $(this).hasClass("i_Btn_disabled")) {
				return
			}
			sendRequest("/api/message/announcement/info", {
				data: {},
				method: "GET",
				dataType: "json",
				showLoading: true,
				success: function (e) {
					var t = (e.data[g.appid] || {})["announcement_cms_inspect"];
					if (t) {
						Buff.alert({
							title: i18n("notification"),
							message: t.content,
							confirmText: i18n("confirm"),
							success: function () {
								U()
							}
						})
					} else {
						U()
					}
				}
			})
		});
		$("body").on("click", ".sreach_text", function () {
			const e = $(this).text();
			$(".item_search").val(e).attr("value", $(this).attr("value"));
			$(".aside_top_search").empty();
			$(".custom-inspect-content-logo").show();
			$("#skin_input").trigger("change")
		});
		custom_sticker = custom_sticker("popup_custom_sticker", "sticker");
		var t = "popup_custom_sticker";
		$("#" + t + " #search_btn").click(function () {
			custom_sticker.query_order_tags_by_search()
		});
		$("#" + t).on("change", "#search_input", function () {
			custom_sticker.query_order_tags_by_search()
		});
		$("#" + t).on("click", "#popup_flower-aside-con ul li.sticker_item", function () {
			$(this).parent().find("li").css("background", "");
			$(this).css("background", "#F8F8F8");
			extra_param = custom_sticker.gen_param($(this).attr("value"), "");
			pe = extra_param["search"];
			custom_sticker.query_order_tags(extra_param)
		});
		setTimeout(function () {
			if ($("#" + t + " .custom_sticker_search_input-result-list").length == 0) {
				$("#" + t + " #custom_sticker_search_input").append('<ul class="custom_sticker_search_input-result-list"></ul>')
			}
			new Autocomplete("#" + t + " #custom_sticker_search_input", {
				search: function (r) {
					return new Promise(function (t, e) {
						var a = r.trim();
						if (a.length < 1) {
							return t([])
						}
						var i = "/api/market/sticker/suggest?";
						var n = {
							text: a,
							game: g.game
						};
						sendRequest(i, {
							method: "GET",
							data: n,
							dataType: "json",
							showLoading: false,
							success: function (e) {
								if (e.code != "OK") {
									Buff.toast(e.error, {
										type: "error"
									});
									return
								}
								if (pe != a) {
									$(use_suggestion_hidden_id).val("0");
									$(use_suggestion_hidden_id).removeAttr("tag_ids")
								}
								if (!e.data || !e.data.suggestions) {
									return t([])
								}
								t(e.data.suggestions)
							}
						})
					})
				},
				getResultValue: function (e) {
					return e.option
				},
				onSubmit: function (e) {
					if (!$.isEmptyObject(e)) {
						$(use_suggestion_hidden_id).val("1");
						$(use_suggestion_hidden_id).attr("tag_ids", e.tag_ids)
					}
					$("#" + t + " #search_input").trigger("change")
				}
			})
		}, 1e3);
		$(function () {
			function r() {
				var a = o.offset().left + 8;
				var e = c.reduce(function (e, t) {
					if (Number(a) >= Number(t.left)) {
						return t
					} else {
						return e
					}
				}, c[0]);
				i.text(e.title).css("color", e.color)
			}
			$(window).unbind("mousemove");
			var o = $("#j_wear_pointer");
			var t = $("#j_wear_progress");
			var i = $("#j_wear_label");
			var a = $("#j_wear_input");
			var n = t.width(),
				s = t.offset().left;
			var c = Array.from(t.children()).map(function (e) {
				return {
					left: $(e).offset().left,
					title: $(e).attr("title"),
					color: $(e).css("background-color")
				}
			});
			a.val(0);
			r();
			o.mousedown(function (e) {
				s = t.offset().left;
				n = t.width();
				$(window).bind("mousemove");
				$(window).mousemove(function (e) {
					var t;
					if (e.pageX < s) {
						o.css("left", "0%");
						t = 0
					} else if (e.pageX > s + n) {
						o.css("left", "100%");
						t = 1
					} else {
						t = (e.pageX - s) / n;
						t = Math.min(100, t)
					}
					o.css("left", t * 100 + "%");
					a.val(t);
					r()
				})
			});
			o.mouseup(function (e) {
				$(window).unbind("mousemove")
			});
			$(window).mouseup(function (e) {
				$(this).unbind("mousemove")
			});
			a.on("input", function (e) {
				var t = Number($(this).val()) >= 1 ? 1 : $(this).val();
				const a = /^(\d*\.?\d*)$/;
				if (!a.test(t)) {
					t = t.replace(/[^0-9.]/g, "");
					const n = t.split(".");
					if (n.length > 1) {
						t = n[0] + "." + n.slice(1).join("")
					}
				}
				if (t.toString().indexOf(".") !== -1) {
					var i = t.split(".")[1];
					if (i && i.length > 17) {
						t = t.slice(0, -(i.length - 17))
					}
				}
				t = t.toString()[0] == 0 && t.toString()[1] == 0 ? 0 : t;
				t = t || 0;
				$(this).val(t);
				o.css("left", t * 100 + "%");
				r()
			});
			a.on("blur", function (e) {
				let t = $(this).val();
				if (t.indexOf(".") !== -1) {
					t = t.replace(/\.?0+$/, "")
				}
				$(this).val(t)
			})
		});
		$(".inspect-sticker-bar").on("input", function (e) {
			const t = $(this).val().trim();
			$(this).attr("value", t);
			const a = $(this).parent().width() - 10;
			$(this).parent().siblings(".range_input").val(t + "%");
			const i = a * t * .01;
			$(this).siblings("div").width(i + "px")
		}).parent().siblings(".range_input").on("input", function () {
			let t = $(this).val().trim();
			t = t.replace(/[^0-9.]/g, "");
			const e = t.split(".");
			if (e.length > 1) {
				t = e[0] + "." + e.slice(1).join("")
			}
			if (t.toString().indexOf(".") !== -1) {
				let e = t.split(".")[1];
				if (e && e.length > 2) {
					t = t.slice(0, -(e.length - 2))
				}
			} else {
				t = Number(t)
			}
			if (t >= 100) {
				t = Number(t).toFixed(0);
				let e = t >= 1e3 || t == 100 ? 3 : 2;
				t = t.toString().slice(0, e)
			}
			if (t < 0) {
				t = 0
			}
			t = t === "" ? 0 : t;
			$(this).siblings(".sticker_bar_input").find("input").val(Number(t)).attr("value", Number(t));
			$(this).val(t);
			$(this).siblings(".sticker_bar_input").find("div").css("width", t + "px")
		}).on("blur", function () {
			if ($(this).val().indexOf("%") > 0) return;
			$(this).val(Number($(this).val()) + "%")
		}).on("focus", function () {
			let e = $(this).val().trim();
			if (!e) return;
			$(this).val(e.replace("%", ""))
		});
		$(".math_number").on("click", function () {
			const e = Math.floor(Math.random() * 1001);
			$(".math_input").val(e).trigger("change")
		});
		$(".math_input").on("input", function () {
			let t = $(this).val().trim();
			t = t.replace(/[^0-9]/g, "");
			if (t > 1e3) {
				let e = t >= 1e4 ? 4 : 3;
				t = t.slice(0, -(t.length - e))
			}
			if (t < 0) {
				t = 0
			}
			$(this).val(Number(t))
		});
		const _ = $(".aside_top_search");
		$(".item_search").on("input", function (e) {
			const t = $(this).val().trim();
			H(t)
		}).on("focus", function (e) {
			const t = $(this).val().trim();
			H(t)
		});

		function H(a) {
			_.empty();
			ce.map(e => {
				const t = new RegExp(a, "i");
				if (t.test(e["skin_name"])) {
					_.append(`<div class="sreach_text">${e["skin_name"]}</div>`)
				}
			})
		}
		$("body").on("click", function (e) {
			const t = e.target.className;
			const a = ["sreach_text", "i_Text item_search"];
			if (!a.includes(t)) {
				_.empty()
			}
			const i = $(e.target).parents("#popup_custom_sticker").length == 0;
			if (i) {
				$(".j_inspect_sticker_search").hide();
				r = true
			}
			if (m.map(e => e.isSelcted).includes(true) && t !== "inspect_canvas") {
				F();
				P()
			}
		});
		$("#skin_input").on("change", function (e) {
			var t = $("#skin_input").val();
			var a = undefined;
			if (t !== _e) {
				_e = t;
				ce.forEach(function (e) {
					if (e["skin_name"] === t) {
						a = e["paint_index"];
						$("#skin_input").attr("value", a)
					}
				});
				if (a !== undefined && se[a]) {
					de = a;
					var i = se[de];
					$(".custom_view").hide();
					if (i["refer_goods_id"]) {
						$("#refer-goods-img").attr("src", i["refer_goods_icon"]);
						$("#go-marketplace").attr("href", "/goods/" + i["refer_goods_id"]);
						$(".skin-wrapper").css("background", "center / cover no-repeat url(../static/images/custom_inspect/skinBG.png )");
						$("#go-marketplace").show()
					} else {
						$("#refer-goods-img").attr("src", "");
						$("#go-marketplace").attr("href", "");
						$(".skin-wrapper").css("background", "center / cover no-repeat url(../static/images/custom_inspect/skinBG.png )");
						$("#go-marketplace").hide()
					}
					if (i["inspect_img"]) {
						le = i["inspect_img_scale"];
						ue = i["sticker_scale"];
						$(".custom-inspect-content-skin").each(function () {
							$(this).css("transform", "scale(" + ue + ")")
						});
						if (i["sticker_positions"]) {
							var n = Object.keys(i["sticker_positions"]).sort();
							h = n.length - 1;
							$(".inspect-sticker .inspect-sticker-pos").each(function (e, t) {
								var a = n[e % n.length];
								$(this).attr("data-xy", i["sticker_positions"][a]["x"] + " " + i["sticker_positions"][a]["y"]).attr("data-rotation", i["sticker_positions"][a]["r"]).attr("data-slot-id", a)
							})
						}
						const {
							image: r,
							img_x: o,
							img_y: s
						} = u;
						r.src = i["inspect_img"];
						f.clearRect(-v.width, -v.height, v.width * 2, v.height * 2);
						r.onload = function () {
							if (L) {
								const e = r.width / 2;
								const t = r.height / 2;
								v.width = e;
								v.height = t;
								r.width = e * le;
								r.height = t * le;
								u.img_x = e / 2 - r.width / 2;
								u.img_y = t / 2 - r.height / 2;
								c = true
							}
							$(".inspect-sticker").each(function (n) {
								const r = $(this).find("img").attr("src");
								if (r) {
									new Promise((e, t) => {
										const i = new Image;
										i.src = r;
										i.onload = () => {
											const e = $(this).attr("data-index");
											const t = $(this).find(".inspect-sticker-pos");
											p = n;
											const a = m[e];
											a.image.width = i.width / 2 * ue;
											a.image.height = i.height / 2 * ue;
											te(a, r, t, c)
										}
									})
								}
							});
							c = false;
							P();
							L = false
						}
					}
					G()
				} else {
					N()
				}
			}
		});
		$("body").on("click", ".sreach_text", function () { }).on("click", ".j_inspect_sticker_img", function (e) {
			const t = $(this).siblings(".inspect-sticker-pos");
			const a = t.find("span").eq(0).text();
			s = false;
			if (_) {
				_.empty();
				$(".popup_flower-aside-top input").val("")
			}
			d = $(this);
			o = $(this).parent().attr("data-index");
			var i = $(".j_inspect_sticker_search");
			if (n === o && !r) {
				i.hide();
				r = true
			} else {
				i.show();
				r = false
			}
			n = o;
			i.find(".inspect-sticker-search-header").text(a);
			$("#popup_flower-aside-con ul li.sticker_item").first().trigger("click");
			e.stopPropagation()
		}).on("click", ".j_inspect_sticker_img .icon_delete", function (e) {
			r = true;
			const t = $(this).parent().parent().find("input");
			t.prop("disabled", true);
			$(this).parent().siblings(".range_input").prop("value", "0%").trigger("input").trigger("blur");
			$(this).parent().siblings(".inspect-sticker-bar").val(0).attr("value", 0);
			$(this).parent().siblings(".sticker_bar_input div").width(0);
			$(this).parent().siblings(".input_wrapper").hide();
			const a = $(this).parent().parent().attr("data-index");
			$(this).parent().html("<span>" + i18n("add_sticker") + '</span><i class="icon icon_drop"></i>');
			m[a].image.src = "";
			delete m[a].image;
			m[a].image = new Image;
			m[a].isSelcted = false;
			m[a].corners = [];
			F();
			P();
			e.stopPropagation()
		}).on("click", ".scope-copy", function (e) {
			e.stopPropagation();
			const t = $(this).parent().siblings(".inspect-sticker-pos");
			const a = $(this).parent().parent().attr("data-index");
			const i = $(this).siblings("img").attr("src");
			const n = $(t).attr("tag_id");
			const r = $(t).attr("tag_name");
			const o = $(t).attr("goods_id");
			y(a, i, n, r, o)
		}).on("click", ".go-marketplace", function (e) {
			e.stopPropagation()
		});
		let l;

		function y(e, t, a, i, n) {
			if ($(".inspect-sticker-img img").length === 5) {
				l = null;
				return
			}
			l = e >= 5 ? 0 : e;
			let r;
			$(".inspect-sticker").each(function (e, t) {
				if ($(this).attr("data-index") == l) {
					r = e
				}
			});
			const o = $($(".inspect-sticker")[r]).find("img").attr("src");
			if (!o) {
				d = $(".inspect-sticker .inspect-sticker-img").eq(r);
				sticker_index = r;
				ie(t, l, r, a, i, n)
			} else {
				l++;
				if (l >= 5) {
					l = 0
				}
				y(l, t, a, i, n)
			}
		}
		$(".popup_flower-con").on("click", "tr", function () {
			if (s) {
				$(".item_search").val($(this).find(".name-cont").text().trim())
			} else {
				const e = $(this).attr("id");
				const a = $(this).attr("name");
				const i = $(this).attr("goods_id");
				const n = $(this).attr("original_icon_url") + "?fop=imageView/0/w/200";
				const t = d.find("img").attr("src");
				if (t) {
					y(o, n, e, a, i)
				} else {
					let t;
					$(".inspect-sticker").each(function (e) {
						if ($(this).attr("data-index") == o) {
							sticker_index = e;
							t = $(this).attr("data-index")
						}
					});
					d = $(".inspect-sticker .inspect-sticker-img").eq(sticker_index);
					ie(n, t, sticker_index, e, a, i)
				}
			}
		});
		let b = false;
		let w = false;
		let k;
		let V = false;
		let x;
		let C, T;

		function P() {
			if (!$(".item_search").val() && $(".item_search").val() !== 0) return;
			const {
				image: e,
				img_x: t,
				img_y: a
			} = u;
			f.clearRect(-v.width, -v.height, v.width * 2, v.height * 2);
			f.drawImage(e, t, a, e.width, e.height);
			m.sort((e, t) => {
				return e.zIndex - t.zIndex
			}).map((e, t) => {
				Y(e)
			})
		}

		function Y({
			image: e,
			image_x: t,
			image_y: a,
			isSelcted: i,
			angle: n,
			corners: r
		}) {
			f.save();
			f.translate(t + e.width / 2, a + e.height / 2);
			f.rotate(n);
			f.translate(-e.width / 2, -e.height / 2);
			if (i) {
				W(0, 0, e.width, e.height, n, r, t, a)
			}
			f.drawImage(e, 0, 0, e.width, e.height);
			f.restore()
		}

		function W(e, t, a, i, n, r, o, s) {
			f.strokeStyle = "#4773c8";
			f.lineWidth = 1;
			f.strokeRect(e, t, a, i);
			const c = 8;
			f.fillStyle = "#4773c8";
			f.fillRect(e - c / 2, t - c / 2, c, c);
			f.fillRect(e + a - c / 2, t - c / 2, c, c);
			f.fillRect(e - c / 2, t + i - c / 2, c, c);
			f.fillRect(e + a - c / 2, t + i - c / 2, c, c);
			const _ = {
				x: o + a / 2,
				y: s + i / 2
			};
			const l = [{
				x: -16,
				y: -16
			}, {
				x: a,
				y: -16
			}, {
				x: -16,
				y: i
			}, {
				x: a,
				y: i
			}];
			r.map((e, t) => {
				if (e.isShow) {
					const {
						x: a,
						y: i
					} = l[t];
					f.drawImage(e.image, a, i, 16, 16)
				}
			})
		}

		function X(e, t, a) {
			let i = e.x - a.x;
			let n = e.y - a.y;
			let r = i * Math.cos(t) - n * Math.sin(t);
			let o = i * Math.sin(t) + n * Math.cos(t);
			return {
				x: r + a.x,
				y: o + a.y
			}
		}
		let B = null;
		let J = null;
		let j = 0;
		let Q, Z;

		function ee(e, t, a) {
			B = null;
			const {
				image: i,
				image_x: n,
				image_y: r,
				corners: o
			} = e;
			const [s, c] = [i.width / 3, i.height / 3];
			for (let e = 0; e < o.length; e++) {
				o[e].isShow = false;
				if (t >= o[e].x - s && t <= o[e].x + s && a >= o[e].y - c && a <= o[e].y + c) {
					if (t > n && t < n + i.width && a > r && a < r + i.height) {
						return false
					}
					B = e;
					o[e].isShow = true;
					return true
				}
			}
			return false
		}
		let S;
		$(document).on("mousedown", ".inspect_canvas", function (e) {
			if (b || w) return;
			if (!$(".item_search").val() && $(".item_search").val() !== 0) return;
			const t = v.getBoundingClientRect();
			C = e.clientX - t.left;
			T = e.clientY - t.top;
			for (let t = m.length - 1; t >= 0; t--) {
				const a = m[t];
				const {
					image: i,
					image_x: n,
					image_y: r,
					isSelcted: o
				} = a;
				if (i == "") {
					continue
				}
				if (C >= n && C <= n + i.width && T >= r && T <= r + i.height) {
					k = t;
					b = true;
					if (b || w) {
						k = t
					}
					Q = C - n;
					Z = T - r
				}
				w = o && ee(a, C, T);
				if (b || w) {
					$(".inspect-sticker").each(function (e) {
						if ($(this).attr("data-index") == t) {
							S = e;
							return
						}
					});
					break
				}
			} (!b || !w) && F();
			(b || w) && $(".inspect-sticker").eq(S).css("border", "1px solid #4773c8");
			if (k !== undefined) {
				m[k].isSelcted = b || w
			}
			if (w && k) {
				j = m[k].angle
			}
			P()
		}).on("mousemove", function (e) {
			x = v.getBoundingClientRect();
			let n = e.clientX - x.left;
			let r = e.clientY - x.top;
			m.filter(e => e.image.src).sort((e, t) => t.zIndex - e.zIndex).some((e, t) => {
				if (n >= e.image_x && n <= e.image_x + e.image.width && r >= e.image_y && r <= e.image_y + e.image.height) {
					$(".inspect_canvas").css("cursor", "pointer");
					return true
				} else {
					$(".inspect_canvas").css("cursor", "default")
				}
			});
			if (!m.some(e => e.isSelcted) || k === undefined) return;
			const {
				image: t,
				image_x: o,
				image_y: s,
				corners: a,
				isSelcted: i
			} = m[k];
			const c = m[k].image.width;
			const _ = m[k].image.height;
			if (b) {
				const l = Math.min(Math.max(n - Q, 64), v.width - c - 64);
				const u = Math.min(Math.max(r - Z, 4), v.height - _ - 4);
				m[k].image_x = Math.floor(l);
				m[k].image_y = Math.floor(u);
				const d = m[k].image_x * 2 + c;
				const p = m[k].image_y * 2 + _;
				$(".inspect-sticker").eq(S).attr("offset", d + " " + p)
			}
			if (w) {
				let e = C - (o + c / 2);
				let t = T - (s + _ / 2);
				let a = n - (o + c / 2);
				let i = r - (s + _ / 2);
				const f = Math.atan2(i, a) - Math.atan2(t, e);
				m[k].angle = f + j;
				$(".inspect-sticker").eq(S).attr("rotation", m[k].angle * (180 / Math.PI));
				b = false;
				V = false
			} else if (i) {
				ee(m[k], n, r) && $(".inspect_canvas").css("cursor", "pointer");
				if (B === J && !b) return;
				J = B
			}
			P()
		}).on("mouseup", function (e) {
			re()
		});

		function te(e, t, a, i) {
			const n = $(a).attr("data-rotation");
			a.parent().attr("rotation", n);
			const r = a.attr("data-slot-id");
			a.siblings(".input_wrapper").find("input").val(r);
			const o = a.siblings(".sticker_bar_input").find(".inspect-sticker-bar").val() + "%";
			if (i) {
				a.siblings(".range_input").val(o);
				a.siblings(".input_wrapper").show();
				i = false
			} else {
				p = a.siblings(".input_wrapper").find("input").val()
			}
			let s, c, _, l;
			const u = $(d).find("img").attr("src");
			e.image.src = t;
			e.image.onload = ae(e, u, n, a, p)
		}

		function ae(o, s, c, _, l) {
			return function () {
				if (s === undefined) {
					width = o.image.width / 2 * ue;
					height = o.image.height / 2 * ue
				} else {
					width = o.image.width;
					height = o.image.height
				}
				const [e, t] = $(".inspect-sticker-pos").eq(l).attr("data-xy").split(" ");
				_.parent().attr("offset", e + " " + t);
				const {
					img_x: a,
					img_y: i
				} = u;
				const n = Math.floor(e / 2 - width / 2);
				const r = Math.floor(t / 2 - height / 2);
				o.image.width = width;
				o.image.height = height;
				o.angle = Number(c) * Math.PI / 180;
				o.image_x = n + a;
				o.image_y = r + i;
				o.corners = [{
					x: o.image_x - 16,
					y: o.image_y - 16,
					isShow: false,
					src: "/static/images/2x/icon-rotate-top-left.png"
				}, {
					x: o.image_x + width,
					y: o.image_y - 16,
					isShow: false,
					src: "/static/images/2x/icon-rotate-top-right.png"
				}, {
					x: o.image_x - 16,
					y: o.image_y + height,
					isShow: false,
					src: "/static/images/2x/icon-rotate-bottom-left.png"
				}, {
					x: o.image_x + width,
					y: o.image_y + height,
					isShow: false,
					src: "/static/images/2x/icon-rotate-bottom-right.png"
				}];
				o.corners.map(e => {
					e.image = new Image;
					e.image.src = e.src
				});
				P()
			}
		}

		function ie(e, t, a, i, n, r) {
			const o = $(".inspect-sticker .inspect-sticker-pos").eq(a);
			$(o).attr("tag_id", i).attr("tag_name", n).attr("tag_name", n).attr("goods_id", r);
			p = a;
			const s = $(".inspect-sticker").eq(a).find("input");
			const c = m[t];
			te(c, e, o, true);
			d.html('<i class="icon icon_delete"></i><img src="' + e + '" /><span class="scope-copy"><i class="icon2x icon_copy"></i>' + i18n("copy") + '</span><a id="go-marketplace" target="_blank" href="/goods/' + r + '"><span class="go-marketplace">' + i18n("to_market") + '<i class="icon icon_arr_right"></i></span></a>');
			s.prop("disabled", false);
			if (l) {
				const _ = $(".inspect-sticker-pos").eq(l).find("span").eq(0).text();
				$(".j_inspect_sticker_search").find(".inspect-sticker-search-header").text(_)
			}
		}
		let O = null;
		let a = false;
		let E = null;
		let q = null;
		let ne = true;
		let R = null;
		let A = null;
		let I = null;
		let M = null;
		$(document).on("mousedown", ".inspect-sticker-pos", function (e) {
			if (a) return;
			a = true;
			q = $(this).parent();
			M = q.index();
			O = $(q).position();
			I = $(".inspect-sticker").map((e, t) => $(t).position().left);
			R = e.clientX;
			A = e.clientY;
			q.css("zIndex", 61)
		}).on("mousemove", function (i) {
			if (a) {
				$(".j_inspect_sticker_search").hide();
				r = true;
				q.css("backgroundColor", "#EAEAEA");
				q.find(".inspect-sticker-bar").css("backgroundColor", "#EAEAEA");
				let e = i.clientX - R;
				let t = i.clientY - A;
				let a = q.offset();
				q.offset({
					left: a.left + e,
					top: a.top + t
				});
				const u = q.position().left;
				const d = u - I[M] > 0;
				const p = q.position().left + q.width();
				I.map((e, t) => {
					if (e === M) return;
					const a = p >= t + q.width() / 2 && p < t + q.width();
					const i = u <= t + q.width() / 2 && u > t;
					const n = d ? a : i;
					if (!n) {
						O = I[M];
						return
					}
					E = $(".inspect-sticker").eq(e);
					E.animate({
						top: 0,
						left: I[M]
					}, 100);
					I[e] = I[M];
					I[M] = t;
					O = t;
					const r = E.find(".inspect-sticker-pos").find("span").eq(0).text().trim();
					const o = q.find(".inspect-sticker-pos").html();
					q.find(".inspect-sticker-pos").html(E.find(".inspect-sticker-pos").html());
					E.find(".inspect-sticker-pos").html(o);
					const s = E.attr("data-index");
					const c = q.attr("data-index");
					E.attr("data-index", c);
					q.attr("data-index", s);
					const _ = $(".inspect-sticker").length - 1;
					const l = m[c].zIndex;
					m[c].zIndex = m[s].zIndex;
					m[s].zIndex = l;
					P()
				});
				R = i.clientX;
				A = i.clientY
			}
		}).on("mouseup", function (e) {
			i()
		}).on("keydown", function (e) {
			if (e.altKey || e.ctrlKey || e.metaKey) {
				$(window).unbind("mousemove");
				re();
				i()
			}
		}).on("click", ".inspect-sticker", function (e) {
			F();
			if ($(this).find(".inspect-sticker-img img").attr("src")) {
				const t = $(this).attr("data-index");
				m[t].isSelcted = true;
				P();
				$(this).css("border", "1px solid #4773c8")
			}
		});

		function F() {
			$(".inspect-sticker").each(function (e) {
				$(this).css("border", "1px solid #e4e4e4");
				m[e].isSelcted = false
			})
		}

		function i() {
			if (q) {
				q.css("backgroundColor", "#FAFAFA");
				q.find(".inspect-sticker-bar").css("backgroundColor", "#FAFAFA");
				q.css("zIndex", 60);
				q.animate({
					top: 0,
					left: O
				}, 100);
				q = null;
				a = false
			}
		}

		function re() {
			if (k !== undefined) {
				const {
					angle: i,
					corners: e,
					image: t,
					image_x: a,
					image_y: n
				} = m[k];
				const r = {
					x: a + t.width / 2,
					y: n + t.height / 2
				};
				e.map(e => {
					e.isShow = false
				});
				const o = [{
					x: a - 16,
					y: n - 16
				}, {
					x: a + t.width,
					y: n - 16
				}, {
					x: a - 16,
					y: n + t.height
				}, {
					x: a + t.width,
					y: n + t.height
				}];
				m[k].corners.map((e, t) => {
					const a = X(o[t], i, r);
					e.x = a.x;
					e.y = a.y
				});
				j = i
			}
			b = false;
			w = false
		}
		const oe = $(".inspect-sticker-pos");
		$(".input_wrapper").on("input", "input", function (e) {
			let t = $(this).val();
			if (t === "") return;
			t = parseInt(t);
			if (de) {
				var a = se[de]["sticker_positions"];
				$(".input_wrapper").find("input").attr("max", Object.keys(a).length - 1);
				if (a[t] === undefined) {
					Buff.toast(i18n("not_support_slot"));
					$(this).val("");
					return
				}
			} else {
				if (t < 0 || t > 4) {
					Buff.toast(i18n("not_support_slot"));
					$(this).val("");
					return
				}
			}
			t = t > h ? h : t < 0 ? 0 : t;
			const i = $(this).parent().parent().attr("data-index");
			$(this).val(t);
			let [n, r] = $(oe[t]).attr("data-xy").split(" ");
			$(this).parent().parent().attr("offset", n + " " + r).attr("rotation", 0);
			const {
				image: o,
				image_x: s,
				image_y: c,
				angle: _,
				corners: l
			} = m[i];
			const u = Math.floor(n / 2 - o.width / 2);
			const d = Math.floor(r / 2 - o.height / 2);
			const p = {
				x: u + o.width / 2,
				y: d + o.height / 2
			};
			m[i].image_x = u;
			m[i].image_y = d;
			m[i].angle = 0;
			const f = [{
				x: u - 16,
				y: d - 16
			}, {
				x: u + o.width,
				y: d - 16
			}, {
				x: u - 16,
				y: d + o.height
			}, {
				x: u + o.width,
				y: d + o.height
			}];
			l.map((e, t) => {
				const a = X(f[t], _, p);
				e.x = a.x;
				e.y = a.y
			});
			P()
		});
		$(".spin_button").on("click", ".button_up", function (e) {
			e.stopPropagation();
			let t = Number($(this).parent().siblings("input").val());
			++t;
			t = t > h ? 0 : t;
			$(this).parent().siblings("input").val(t).trigger("input")
		}).on("click", ".button_down", function (e) {
			e.stopPropagation();
			let t = Number($(this).parent().siblings("input").val());
			--t;
			t = t < 0 ? h : t;
			$(this).parent().siblings("input").val(t).trigger("input")
		});
		$(".custom-inspect-footer-search").on("click", ".i_Btn_hollow", function (e) {
			const t = $(this).siblings(".w-Search").find("input").val() || "";
			navigator.clipboard.writeText(t).then(() => {
				Buff.toast(i18n("copy_success"))
			})
		});
		$(".i_Btn_disabled").on("click", function (e) {
			e.preventDefault()
		});
		$(".refresh").on("click", function (e) {
			$(".math_input").val(0);
			$("#j_wear_input").val(0).trigger("input");
			Buff.setCompValue("name_tag", 0);
			Buff.setCompValue("is_stattrak", 0);
			$(".inspect-sticker").each(function (e) {
				if ($(this).find(".icon_delete").length <= 0) return;
				$(this).find(".icon_delete").trigger("click")
			})
		});
		document.addEventListener("visibilitychange", function () {
			if (document.visibilityState === "hidden") {
				i()
			}
		});
		if (getParamsFromHash().goods_id) {
			params = {
				goods_id: getParamsFromHash().goods_id
			};
			if (getParamsFromHash().tags_id) {
				params["tags_id"] = getParamsFromHash().tags_id
			}
			sendRequest("/api/market/custom_inspect/get_skins", {
				method: "GET",
				data: params,
				dataType: "json",
				showLoading: false,
				retryLimit429: 10,
				retryCount429: 0,
				success: function (a) {
					pre_selected = a.data.pre_selected;
					if (pre_selected && pre_selected["weapon_type"] && pre_selected["weapon_name"] && pre_selected["skin_name"]) {
						Buff.setCompValue("select-type", pre_selected["weapon_type"]);
						let t = $("#select-weapon ul");
						t.empty();
						for (let e in a.data.weapon_names) {
							t.append("<li value='" + e + "'>" + a.data.weapon_names[e] + "</li>")
						}
						$("#select-weapon").attr("init", false);
						Buff.initSelect("#select-weapon");
						Buff.setCompValue("select-weapon", pre_selected["weapon_name"]);
						a.data.skins.forEach(function (e) {
							ce.push({
								paint_index: e["paint_index"],
								skin_name: e["skin_name"]
							});
							se[e["paint_index"]] = e
						});
						$("#skin_input").val(pre_selected["skin_name"]).trigger("change");
						z(pre_selected["weapon_type"])
					}
				}
			})
		}
	};
	return {
		init: e
	}
};
var TimeRangeFilter = function () {
	var e = function () {
		var s = 365 * 24 * 3600 * 1e3;
		var c = function (e) {
			var t = e.getFullYear();
			var a = e.getMonth() + 1;
			a = a < 10 ? "0" + a : a;
			var i = e.getDate();
			i = i < 10 ? "0" + i : i;
			return t + "-" + a + "-" + i + " 00:00:00"
		};
		var a = function (e, t) {
			l(e, t);
			if (e.attr("id") === "j_select_log_start_time") {
				var a = e.parent().find("#j_select_log_end_time");
				var i = a.attr("value") || c(new Date);
				var n = new Date(i).getTime();
				var r = new Date(t).getTime();
				var o = Math.min((new Date).getTime(), r + s);
				n = Math.max(r, Math.min(n, o));
				l(a, c(new Date(n)))
			}
		};
		var _ = function (e) {
			var t = e.find("#j_select_log_start_time");
			var a = e.find("#j_select_log_end_time");
			var i = t.attr("value");
			var n = a.attr("value");
			var r = i + "~" + n;
			if (e.attr("value") === r) return;
			l(e, r);
			e.trigger("change")
		};
		var l = function (e, t) {
			e.children("h3").html(t.replace(/\s00:00:00/g, ""));
			e.attr("value", t)
		};
		var e = function (e) {
			var t = e.attr("value");
			var a = e.find("#j_select_log_start_time");
			var i = e.find("#j_select_log_end_time");
			var n;
			if (!e.hasClass("on")) {
				var r, o;
				if (!t) {
					r = c(new Date((new Date).getTime() - s));
					o = c(new Date)
				} else {
					r = t.split("~")[0];
					o = t.split("~")[1]
				}
				l(a, r);
				l(i, o);
				a.trigger("click")
			}
			e.toggleClass("on").off();
			e.on("click", ".w-date-drop-confirm", function () {
				e.removeClass("on");
				_(e)
			}).on("mouseleave", function () {
				n = setTimeout(function () {
					e.removeClass("on")
				}, 300)
			}).on("mouseenter", function () {
				clearTimeout(n)
			})
		};
		var t = function (e, t, a) {
			var i = e.find("#j_select_log_start_time");
			var n = c(new Date(t * 1e3));
			l(i, n);
			var r = e.find("#j_select_log_end_time");
			var o = c(new Date(a * 1e3));
			l(r, o);
			var s = n + "~" + o;
			l(e, s)
		};
		$.datepicker.regional["zh-CN"] = {
			monthNames: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
			monthNamesShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
			dayNames: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
			dayNamesShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
			dayNamesMin: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
			prevText: "上月",
			nextText: "下月",
			changeMonth: true,
			changeYear: true,
			showButtonPanel: false,
			dateFormat: "yy-mm-dd",
			yearSuffix: "",
			showMonthAfterYear: true,
			minDate: "2017-01-01",
			maxDate: c(new Date),
			onSelect: function (e) {
				var t = $(this).siblings().find(".w-date-drop-header--select.on");
				a(t, e + " 00:00:00")
			}
		};
		$.datepicker.regional["en-US"] = {
			changeMonth: true,
			changeYear: true,
			showButtonPanel: false,
			dateFormat: "yy-mm-dd",
			yearSuffix: "",
			showMonthAfterYear: true,
			minDate: "2017-01-01",
			maxDate: c(new Date),
			onSelect: function (e) {
				var t = $(this).siblings().find(".w-date-drop-header--select.on");
				a(t, e + " 00:00:00")
			}
		};
		$.datepicker.setDefaults($.datepicker.regional[i18n("datepicker_language")]);
		$("body").on("click", ".w-SelDate > h3", function () {
			e($(this).parent())
		});
		$("body").on("click", ".w-SelDate .w-date-drop-header--select", function () {
			var e = $(this).parents();
			e.find(".w-date-drop-header--select").removeClass("on");
			$(this).addClass("on");
			var t = e.find("#j_select_log_start_time");
			var a = e.find("#j_select_log_end_time");
			var i = $(this).attr("value");
			var n;
			if (a.hasClass("on")) {
				var r = t.attr("value");
				var o = c(new Date(Math.min((new Date).getTime(), new Date(r).getTime() + s)));
				n = {
					minDate: r,
					maxDate: o
				}
			}
			e.find("#j_log_datepicker").datepickerrange("destroy").datepickerrange({
				defaultDate: i,
				...n
			})
		});
		var i = getParams();
		if (i.start_time && i.end_time) {
			t($(".w-SelDate"), i.start_time, i.end_time)
		}
	};
	return {
		init: e
	}
};
